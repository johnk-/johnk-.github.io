<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Trailing Slash Is A Winner For Defused Actions</title>
    <link>https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327</link>
    <description>I *really* like this trailing slash thing, meaning &quot;get me the action as is and don&#39;t run it AND guarantee it&#39;s an action&quot;.

    &gt;&gt; replace [a 1 a &lt;baby&gt;] word?/ &lt;ice&gt;
    == [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]

That&#39;s to me just about perfect:

* You&#39;re passing the parameter of what to replace as being an antiform action, so it will be called on the elements.

* It does NOT take a parameter (notice the slash dividing it from what comes after it?  that&#39;s a strong semiotic hint that `&lt;ice&gt;` is not a parameter to `word?`)

* ...and it&#39;s an antiform, so you know it doesn&#39;t occur literally in the block.

Before this existed, I was using MATCHER which made an antiform action for a datatype:

    &gt;&gt; replace [a 1 a &lt;baby&gt;] matcher word! &lt;ice&gt;
    == [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]

That&#39;s slower, not as brief, and a bit more opaque about the mechanics.

It&#39;s useful if you have a datatype in your hand and need to convert it to a function, or if you have a more complex type construction:

    &gt;&gt; replace [a 1 a &lt;baby&gt;] matcher [word! integer!] &lt;ice&gt;
    == [&lt;ice&gt; &lt;ice&gt; &lt;ice&gt; &lt;baby&gt;]

If you make such a call often, you wouldn&#39;t want to regenerate the function each time:

    &gt;&gt; word-or-int?: matcher [word! integer!]

    &gt;&gt; replace [a 1 a &lt;baby&gt;] word-or-int?/ &lt;ice&gt;
    == [&lt;ice&gt; &lt;ice&gt; &lt;ice&gt; &lt;baby&gt;]

Anyway, I&#39;ll also say that the [REPLACE &quot;ALL&quot; semantic being the default](https://forum.rebol.info/t/make-replace-all-default-semantics-of-replace/2269) is a big improvement.</description>
    
    <lastBuildDate>Fri, 27 Dec 2024 22:51:29 +0000</lastBuildDate>
    <category>Show &amp; Tell</category>
    <atom:link href="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Trailing Slash Is A Winner For Defused Actions</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A post was split to a new topic: <a href="https://forum.rebol.info/t/how-to-find-with-a-matcher-function-in-ren-c/2360">How To FIND With A Matcher Function in Ren-C?</a></p>
          <p><a href="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327/4</link>
        <pubDate>Fri, 27 Dec 2024 23:02:26 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2327-4</guid>
        <source url="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327.rss">Trailing Slash Is A Winner For Defused Actions</source>
      </item>
      <item>
        <title>Trailing Slash Is A Winner For Defused Actions</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="2327">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>I <em>really</em> like this trailing slash thing, meaning "get me the action as is and don't run it AND guarantee it's an action".</p>
<pre data-code-wrap="plaintext"><code class="lang-plaintext">&gt;&gt; replace [a 1 a &lt;baby&gt;] word?/ &lt;ice&gt;
== [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]
</code></pre>
</blockquote>
</aside>
<p>Looking at this, I started to compare it to the &amp; syntax that's been used in PARSE.</p>
<pre><code>&gt;&gt; parse [2 4 6] [some &amp;even?]
== 6
</code></pre>
<p>I haven't really warmed up to it very much.</p>
<p>So I wondered... what if PARSE used the trailing slash notation, assuming that meant run a function as a typechecker?</p>
<pre><code>&gt;&gt; parse [2 4 6] [some even?/]
== 6
</code></pre>
<p>I find that more palatable than the leading-ampersand, for the reasons mentioned (looks better, and puts the slashy "barrier" at the end to semotically indicate "no parameters taken").</p>
<p>Though it doesn't have the generalization to other types:</p>
<pre><code>&gt;&gt; parse [2 4 6 &lt;eight&gt;] [some &amp;[even? tag!]]
== &lt;eight&gt;
</code></pre>
<p>But that could be done with a MATCHER combinator:</p>
<pre><code>&gt;&gt; parse [2 4 6 &lt;eight&gt;] [some matcher [even? tag!]]
== &lt;eight&gt;
</code></pre>
<p>And arguably that's a lot more literate and less-symbol-y.  It better bridges the non-PARSE code with the PARSE code.  (Though MATCHER would take its argument literally, e.g. the BLOCK! you pass it like [even? tag!] isn't being processed by the block combinator.  Such combinators are not that common--ANY is another example--but I think they should be allowed.)</p>
<p>When you put this together with the idea of <a href="https://forum.rebol.info/t/old-idea-revisited-datatype-as-antiform/2324">types as antiforms</a>, it might mean being able to reclaim the <strong>&amp;</strong> symbol entirely for something else.</p>
          <p><a href="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327/2</link>
        <pubDate>Fri, 27 Dec 2024 19:07:34 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2327-2</guid>
        <source url="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327.rss">Trailing Slash Is A Winner For Defused Actions</source>
      </item>
      <item>
        <title>Trailing Slash Is A Winner For Defused Actions</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I <em>really</em> like this trailing slash thing, meaning "get me the action as is and don't run it AND guarantee it's an action".</p>
<pre><code>&gt;&gt; replace [a 1 a &lt;baby&gt;] word?/ &lt;ice&gt;
== [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]
</code></pre>
<p>That's to me just about perfect:</p>
<ul>
<li>
<p>You're passing the parameter of what to replace as being an antiform action, so it will be called on the elements.</p>
</li>
<li>
<p>It does NOT take a parameter (notice the slash dividing it from what comes after it?  that's a strong semiotic hint that <code>&lt;ice&gt;</code> is not a parameter to <code>word?</code>)</p>
</li>
<li>
<p>...and it's an antiform, so you know it doesn't occur literally in the block.</p>
</li>
</ul>
<p>Before this existed, I was using MATCHER which made an antiform action for a datatype:</p>
<pre><code>&gt;&gt; replace [a 1 a &lt;baby&gt;] matcher word! &lt;ice&gt;
== [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]
</code></pre>
<p>That's slower, not as brief, and a bit more opaque about the mechanics.</p>
<p>It's useful if you have a datatype in your hand and need to convert it to a function, or if you have a more complex type construction:</p>
<pre><code>&gt;&gt; replace [a 1 a &lt;baby&gt;] matcher [word! integer!] &lt;ice&gt;
== [&lt;ice&gt; &lt;ice&gt; &lt;ice&gt; &lt;baby&gt;]
</code></pre>
<p>If you make such a call often, you wouldn't want to regenerate the function each time:</p>
<pre><code>&gt;&gt; word-or-int?: matcher [word! integer!]

&gt;&gt; replace [a 1 a &lt;baby&gt;] word-or-int?/ &lt;ice&gt;
== [&lt;ice&gt; &lt;ice&gt; &lt;ice&gt; &lt;baby&gt;]
</code></pre>
<p>Anyway, I'll also say that the <a href="https://forum.rebol.info/t/make-replace-all-default-semantics-of-replace/2269">REPLACE "ALL" semantic being the default</a> is a big improvement.</p>
          <p><a href="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327/1</link>
        <pubDate>Fri, 08 Nov 2024 19:05:55 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2327-1</guid>
        <source url="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327.rss">Trailing Slash Is A Winner For Defused Actions</source>
      </item>
  </channel>
</rss>
