<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Trailing Slash Is A Winner For Defused Actions</title>
    <link>https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327</link>
    <description>I *really* like this trailing slash thing, meaning &quot;get me the action as is and don&#39;t run it AND guarantee it&#39;s an action&quot;.

    &gt;&gt; replace [a 1 a &lt;baby&gt;] word?/ &lt;ice&gt;
    == [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]

That&#39;s to me just about perfect:

* You&#39;re passing the parameter of what to replace as being an antiform action, so it will be called on the elements.

* It does NOT take a parameter (notice the slash dividing it from what comes after it?  that&#39;s a strong semiotic hint that `&lt;ice&gt;` is not a parameter to `word?`)

* ...and it&#39;s an antiform, so you know it doesn&#39;t occur literally in the block.

Before this form existed, I was using MATCHES which made an antiform action for a datatype:

    &gt;&gt; replace [a 1 a &lt;baby&gt;] matches word! &lt;ice&gt;
    == [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]

That&#39;s slower, wordier, and more opaque about the mechanics.

It&#39;s useful if you have a datatype in your hand and need to convert it to a function, or if you have a more complex type construction:

    &gt;&gt; replace [a 1 a &lt;baby&gt;] matches [word! integer!] &lt;ice&gt;
    == [&lt;ice&gt; &lt;ice&gt; &lt;ice&gt; &lt;baby&gt;]

Maybe it should be called MATCHER, since it&#39;s actually a function generator.  MATCHES looks a little too much like MATCH, so it seems like it might take `&lt;ice&gt;` as an argument.  :frowning:

If you make such a call often, you wouldn&#39;t want to regenerate the function each time:

    &gt;&gt; word-or-int?: matcher [word! integer!]

    &gt;&gt; replace [a 1 a &lt;baby&gt;] word-or-int?/ &lt;ice&gt;
    == [&lt;ice&gt; &lt;ice&gt; &lt;ice&gt; &lt;baby&gt;]

MATCHES would seems like it&#39;s providing an answer in the moment, whereas MATCHER works better for when you&#39;re not using immediately.  So it&#39;s probably the better choice.

Anyway, I&#39;ll also say that the [REPLACE &quot;ALL&quot; semantic being the default](https://forum.rebol.info/t/make-replace-all-default-semantics-of-replace/2269) is a big improvement.</description>
    
    <lastBuildDate>Fri, 08 Nov 2024 19:18:53 +0000</lastBuildDate>
    <category>Show &amp; Tell</category>
    <atom:link href="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Trailing Slash Is A Winner For Defused Actions</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I <em>really</em> like this trailing slash thing, meaning "get me the action as is and don't run it AND guarantee it's an action".</p>
<pre><code>&gt;&gt; replace [a 1 a &lt;baby&gt;] word?/ &lt;ice&gt;
== [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]
</code></pre>
<p>That's to me just about perfect:</p>
<ul>
<li>
<p>You're passing the parameter of what to replace as being an antiform action, so it will be called on the elements.</p>
</li>
<li>
<p>It does NOT take a parameter (notice the slash dividing it from what comes after it?  that's a strong semiotic hint that <code>&lt;ice&gt;</code> is not a parameter to <code>word?</code>)</p>
</li>
<li>
<p>...and it's an antiform, so you know it doesn't occur literally in the block.</p>
</li>
</ul>
<p>Before this form existed, I was using MATCHES which made an antiform action for a datatype:</p>
<pre><code>&gt;&gt; replace [a 1 a &lt;baby&gt;] matches word! &lt;ice&gt;
== [&lt;ice&gt; 1 &lt;ice&gt; &lt;baby&gt;]
</code></pre>
<p>That's slower, wordier, and more opaque about the mechanics.</p>
<p>It's useful if you have a datatype in your hand and need to convert it to a function, or if you have a more complex type construction:</p>
<pre><code>&gt;&gt; replace [a 1 a &lt;baby&gt;] matches [word! integer!] &lt;ice&gt;
== [&lt;ice&gt; &lt;ice&gt; &lt;ice&gt; &lt;baby&gt;]
</code></pre>
<p>Maybe it should be called MATCHER, since it's actually a function generator.  MATCHES looks a little too much like MATCH, so it seems like it might take <code>&lt;ice&gt;</code> as an argument.  <img src="https://forum.rebol.info/images/emoji/twitter/frowning.png?v=12" title=":frowning:" class="emoji" alt=":frowning:" loading="lazy" width="20" height="20"></p>
<p>If you make such a call often, you wouldn't want to regenerate the function each time:</p>
<pre><code>&gt;&gt; word-or-int?: matcher [word! integer!]

&gt;&gt; replace [a 1 a &lt;baby&gt;] word-or-int?/ &lt;ice&gt;
== [&lt;ice&gt; &lt;ice&gt; &lt;ice&gt; &lt;baby&gt;]
</code></pre>
<p>MATCHES would seems like it's providing an answer in the moment, whereas MATCHER works better for when you're not using immediately.  So it's probably the better choice.</p>
<p>Anyway, I'll also say that the <a href="https://forum.rebol.info/t/make-replace-all-default-semantics-of-replace/2269">REPLACE "ALL" semantic being the default</a> is a big improvement.</p>
          <p><a href="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327/1</link>
        <pubDate>Fri, 08 Nov 2024 19:05:55 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2327-1</guid>
        <source url="https://forum.rebol.info/t/trailing-slash-is-a-winner-for-defused-actions/2327.rss">Trailing Slash Is A Winner For Defused Actions</source>
      </item>
  </channel>
</rss>
