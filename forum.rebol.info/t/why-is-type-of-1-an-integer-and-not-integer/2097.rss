<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</title>
    <link>https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097</link>
    <description>    &gt;&gt; type of 1         
    == &amp;integer

I would have expected this to print as `integer!`, since that’s how we refer to it in discussions. But no, it prints with an ampersand. I’m sure there’s some good reason for this, but the apparent inconsistency is jarring.</description>
    
    <lastBuildDate>Tue, 09 Jan 2024 02:04:35 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="5" data-topic="2097">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>So if there isn’t actually any compatibility layer</p>
</blockquote>
</aside>
<p>See the <a href="https://github.com/metaeducation/redbol/blob/2f9a3e96b907b51e76ac1e2acd6bb5b3aa5610f2/redbol.reb#L91">Redbol Module</a>.</p>
<p>Additionally, Ren-C has to deal with type checks beyond fundamental types.  There's no good answer for TYPE OF an isotope.  So TYPE-BLOCK!s / TYPE-GROUP!s allow you to check these:</p>
<pre><code>logic?!: &amp;[logic?]
splice?!: &amp;[splice?]

switch/type spread [a b c] [
    logic?! [print "It's a logic"]
    splice?! [print "It's a splice"]
]
</code></pre>
<p>More generally, taking away ! from words is a controversial idea.</p>
          <p><a href="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/6</link>
        <pubDate>Tue, 09 Jan 2024 02:04:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2097-6</guid>
        <source url="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097.rss">Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</source>
      </item>
      <item>
        <title>Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="4" data-topic="2097">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<pre data-code-wrap="plaintext"><code class="lang-plaintext">paren!: &amp;group
group!: &amp;group
</code></pre>
</blockquote>
</aside>
<p>I suppose that makes sense… except this doesn’t actually seem to work when I try it in the console:</p>
<pre data-code-wrap="plaintext"><code class="lang-plaintext">&gt;&gt; paren!
** Script Error: paren! word is attached to a context, but unassigned
** Where: console
** Near: [paren! **]
** Line: 1
</code></pre>
<p>So if there isn’t actually any compatibility layer, I don’t see the value in doing this rather than simply writing TYPE-WORD!s as literals with exclamation marks.</p>
          <p><a href="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/5</link>
        <pubDate>Tue, 09 Jan 2024 01:56:10 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2097-5</guid>
        <source url="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097.rss">Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</source>
      </item>
      <item>
        <title>Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>It's for when you're establishing compatibility layers, e.g. you can say:</p>
<pre><code>paren!: &amp;group
group!: &amp;group
</code></pre>
<p>Because PAREN! and GROUP! are words, the lookup step lets them find the same datatype.</p>
          <p><a href="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/4</link>
        <pubDate>Tue, 09 Jan 2024 01:47:10 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2097-4</guid>
        <source url="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097.rss">Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</source>
      </item>
      <item>
        <title>Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="2097">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>This would have created a lot of trouble for renamings like the PAREN! =&gt; GROUP!, because there'd be no lookup step for the word, as datatype literals would presumably just evaluate to themselves.</p>
</blockquote>
</aside>
<p>I don’t follow this… how is the syntax of datatype literals connected to renaming PAREN!? Could you elaborate please?</p>
          <p><a href="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/3</link>
        <pubDate>Tue, 09 Jan 2024 01:45:55 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2097-3</guid>
        <source url="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097.rss">Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</source>
      </item>
      <item>
        <title>Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="1" data-topic="2097">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>I’m sure there’s some good reason for this</p>
</blockquote>
</aside>
<p>INTEGER! is a word, and looks up to a datatype.</p>
<p>Historical Redbol has the same problem here as with not having a good representation for true and false, where it just kind of lies and makes DATATYPE! conflate with words:</p>
<pre><code>rebol2&gt;&gt; type? 1
== integer!

rebol2&gt;&gt; type? first [integer!]
== word!

rebol2&gt;&gt; type? type? 1
== datatype!
</code></pre>
<p>There were proposals to say that if a spelling ends in exclamation point that means it's lexically considered a datatype, e.g.</p>
<pre><code>&gt;&gt; type? first [integer!]
== datatype!
</code></pre>
<p>This would have created a lot of trouble for renamings like the PAREN! =&gt; GROUP!, because there'd be no lookup step for the word, as datatype literals would presumably just evaluate to themselves.</p>
<p>Ren-C made TYPE-WORD! (and TYPE-BLOCK!, TYPE-GROUP!, etc.) so you have some more parts.  If you're making a dialect and want to use <strong><code>&amp;AElig</code></strong> as an <a href="https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references">HTML entity</a> you can.</p>
<p>This means exclamation point doesn't have any special lexical meaning, and is an ordinary word character.</p>
          <p><a href="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/2</link>
        <pubDate>Tue, 09 Jan 2024 01:43:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2097-2</guid>
        <source url="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097.rss">Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</source>
      </item>
      <item>
        <title>Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <pre><code>&gt;&gt; type of 1         
== &amp;integer
</code></pre>
<p>I would have expected this to print as <code>integer!</code>, since that’s how we refer to it in discussions. But no, it prints with an ampersand. I’m sure there’s some good reason for this, but the apparent inconsistency is jarring.</p>
          <p><a href="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097/1</link>
        <pubDate>Tue, 09 Jan 2024 01:34:51 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2097-1</guid>
        <source url="https://forum.rebol.info/t/why-is-type-of-1-an-integer-and-not-integer/2097.rss">Why is TYPE OF 1 an &amp;INTEGER and not INTEGER!</source>
      </item>
  </channel>
</rss>
