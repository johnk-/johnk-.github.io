<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Parsing a README.md File To Fill A Folder</title>
    <link>https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840</link>
    <description>I&#39;ve integrated @gchiu&#39;s [Cypress Tests](https://forum.rebol.info/t/js-testing-with-cypress-io/1778/3?u=hostilefork) to the GitHub workflow.

There&#39;s a certain number of things we want to have work before we &quot;greenlight&quot; a new libr3.wasm file.  Things like Graham&#39;s prescription writing app or chess demo are examples of this.

But we don&#39;t want the test scripts for those things to live in the Ren-C repository.  Because they need to change as the apps change--and they should also be running whenever those apps get a new commit pushed.

At first I just did a **wget** of the scripts:

    cd tests/cypress/e2e
    wget https://gitlab.com/Zhaoshirong/rebol-chess/-/raw/master/cypress/e2e/chess.cy.js
    wget https://raw.githubusercontent.com/gchiu/midcentral/main/cypress/e2e/rx-app.cy.js

But this encountered an error, because when git has a directory with no files in it...it doesn&#39;t exist.  So there was no e2e directory.

I could have just said **mkdir tests/cypress/e2e** as part of the workflow.  But I figured making a README.md file and putting it in the directory to explain what it was would be easier.

This gave me an idea: *What if I put the URLs in the README.md, and then parsed them out and fetched them?*  So that&#39;s what I did instead!

**[Here&#39;s the README.md](https://raw.githubusercontent.com/metaeducation/ren-c/master/tests/cypress/e2e/README.md)**, which has **`* https://whatever`** lines in it.

Then here&#39;s the script that uses the Ren-C GitHub Action:

    - name: Collect Cypress Tests from Repositories We Want to Keep Working
      uses: metaeducation/ren-c-action@release
      with:
        script: |
          cd %tests/cypress/e2e/
          list: uparse (as text! read %README.md) [
              collect some [
                  &#39;* space [keep url!] newline
                | thru newline
              ]
          ]
          for-each url list [
              filename: second split-path url
              write filename (read url)
          ]</description>
    
    <lastBuildDate>Tue, 14 Jun 2022 17:10:01 +0000</lastBuildDate>
    <category>Show &amp; Tell</category>
    <atom:link href="https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Parsing a README.md File To Fill A Folder</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="1840">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<pre><code>collect some [
   '* space [keep url!] newline
   | thru newline
 ]
</code></pre>
</blockquote>
</aside>
<p>As an interesting talking point... I originally wrote this as:</p>
<pre><code>collect some [
   keep ["*" space url! elide newline]
   | thru newline
 ]
</code></pre>
<p>It came naturally to write that using ELIDE.  I was going to brag about how cool I thought that was.</p>
<p>Then I thought: <em>"Oh, silly me, I could have just made the KEEP span the URL!"</em>  So it didn't seem so cool after all.</p>
<h2><a name="p-5916-but-it-is-cool-1" class="anchor" href="https://forum.rebol.info#p-5916-but-it-is-cool-1"></a>..but... <strong>it <em>is</em> cool!</strong></h2>
<p>What's notable is that with the ELIDE, you're able to easily make the URL! the product of the rule in a <em>reusable</em> way.</p>
<pre><code>value-bearing-rule: ["*" space url! elide newline]

uparse data [ 
    ...
    keep value-bearing-rule
    ...
]
</code></pre>
<p>So you can use it with KEEP or with other things.</p>
<p>ELIDE is an assistant in the question asked long ago about <a href="https://forum.rebol.info/t/separating-parse-rules-across-contexts/313">how to reuse rules</a>.  It may not be a fit for a case like what I was writing, but you can see how a slightly different case it would be useful for.</p>
<h2><a name="p-5916-what-about-vs-2" class="anchor" href="https://forum.rebol.info#p-5916-what-about-vs-2"></a>What About '* vs "*"</h2>
<p>If you're parsing text, I think it does keep it cleaner if you use the apostrophe  That's 3 less ticks!</p>
<p>Where this might get a bit questionable is if you've picked to define <strong><code>*</code></strong> as some kind of meaningful combinator in UPARSE.  Having more ticks might be a benefit to distinguish it.</p>
<p>Or maybe not?  I guess it all depends on whether you're using syntax highlighting that calls out the QUOTED!s, or your personal preference.</p>
<h2><a name="p-5916-main-point-theres-power-here-you-wont-find-elsewhere-3" class="anchor" href="https://forum.rebol.info#p-5916-main-point-theres-power-here-you-wont-find-elsewhere-3"></a>Main Point: There's Power Here You Won't Find Elsewhere</h2>
<p>UPARSE has taken Rebol's cool (but long in the tooth) model to where it's <a href="https://www.youtube.com/watch?v=hQ40jNXMDlk">Insaneo Style</a>.  I think it's only going to keep getting better.</p>
          <p><a href="https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840/3</link>
        <pubDate>Tue, 14 Jun 2022 16:35:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1840-3</guid>
        <source url="https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840.rss">Parsing a README.md File To Fill A Folder</source>
      </item>
      <item>
        <title>Parsing a README.md File To Fill A Folder</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A post was split to a new topic: <a href="https://forum.rebol.info/t/what-to-call-an-arity-1-wget-or-curl-like-function/1841">What to call an Arity-1 wget or curl-like function?</a></p>
          <p><a href="https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840/2</link>
        <pubDate>Tue, 14 Jun 2022 16:18:41 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1840-2</guid>
        <source url="https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840.rss">Parsing a README.md File To Fill A Folder</source>
      </item>
      <item>
        <title>Parsing a README.md File To Fill A Folder</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I've integrated <a class="mention" href="https://forum.rebol.info/u/gchiu">@gchiu</a>'s <a href="https://forum.rebol.info/t/js-testing-with-cypress-io/1778/3">Cypress Tests</a> to the GitHub workflow.</p>
<p>There's a certain number of things we want to have work before we "greenlight" a new libr3.wasm file.  Things like Graham's prescription writing app or chess demo are examples of this.</p>
<p>But we don't want the test scripts for those things to live in the Ren-C repository.  Because they need to change as the apps change--and they should also be running whenever those apps get a new commit pushed.</p>
<p>At first I just did a <strong>wget</strong> of the scripts:</p>
<pre><code>cd tests/cypress/e2e
wget https://gitlab.com/Zhaoshirong/rebol-chess/-/raw/master/cypress/e2e/chess.cy.js
wget https://raw.githubusercontent.com/gchiu/midcentral/main/cypress/e2e/rx-app.cy.js
</code></pre>
<p>But this encountered an error, because when git has a directory with no files in it...it doesn't exist.  So there was no e2e directory.</p>
<p>I could have just said <strong>mkdir tests/cypress/e2e</strong> as part of the workflow.  But I figured making a README.md file and putting it in the directory to explain what it was would be easier.</p>
<p>This gave me an idea: <em>What if I put the URLs in the README.md, and then parsed them out and fetched them?</em>  So that's what I did instead!</p>
<p><strong><a href="https://raw.githubusercontent.com/metaeducation/ren-c/master/tests/cypress/e2e/README.md">Here's the README.md</a></strong>, which has <strong><code>* https://whatever</code></strong> lines in it.</p>
<p>Then here's the script that uses the Ren-C GitHub Action:</p>
<pre><code>- name: Collect Cypress Tests from Repositories We Want to Keep Working
  uses: metaeducation/ren-c-action@release
  with:
    script: |
      cd %tests/cypress/e2e/
      list: uparse (as text! read %README.md) [
          collect some [
              '* space [keep url!] newline
            | thru newline
          ]
      ]
      for-each url list [
          filename: second split-path url
          write filename (read url)
      ]</code></pre>
          <p><a href="https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840/1</link>
        <pubDate>Tue, 14 Jun 2022 11:41:40 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1840-1</guid>
        <source url="https://forum.rebol.info/t/parsing-a-readme-md-file-to-fill-a-folder/1840.rss">Parsing a README.md File To Fill A Folder</source>
      </item>
  </channel>
</rss>
