<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Naming for Line and Space Adders and Removers</title>
    <link>https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104</link>
    <description>[(DELIMIT, SPACED, UNSPACED) [are] very nice!](https://forum.rebol.info/t/introducing-delimit-plus-spaced-and-unspaced/2102) Might I suggest that you could add to this set of functions `unlines`, an immensely useful function from Haskell:

```hs
ghci&gt; unlines [&quot;a list&quot;,&quot;of lines&quot;,&quot;of text&quot;]
&quot;a list\nof lines\nof text\n&quot;
```

(Haskell also has the reverse function `lines`, which splits up a string into a list of lines. There’s also `unwords`/`words`, which do the same thing for all whitespace.)</description>
    
    <lastBuildDate>Thu, 11 Jan 2024 07:48:32 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Naming for Line and Space Adders and Removers</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A post was split to a new topic: <a href="https://forum.rebol.info/t/haskells-composable-splitting-combinators/2105">Haskell's Composable Splitting Combinators</a></p>
          <p><a href="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/6</link>
        <pubDate>Thu, 11 Jan 2024 07:54:06 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2104-6</guid>
        <source url="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104.rss">Naming for Line and Space Adders and Removers</source>
      </item>
      <item>
        <title>Naming for Line and Space Adders and Removers</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I'll mention that Rebol does have SPLIT.  Operates on strings, arrays...</p>
<pre><code>&gt;&gt; split "your words here" space
== ["your" "words" "here"]

&gt;&gt; split [your elements + (are) here + + so split them] '+
== [[your elements] [(are) here] [] [so split them]]
</code></pre>
<p>It's <a href="https://github.com/metaeducation/ren-c/blob/815758fb571e88591908dc94f9320581f00d9331/tests/series/split.test.reb">dialected weirdly</a>, so the thing you're splitting by can be a block but then it doesn't mean that block literally:</p>
<pre><code>&gt;&gt; split "1234567812345678" [4 4 2 2 1 1 1 1]
== ["1234" "5678" "12" "34" "5" "6" "7" "8"]
</code></pre>
<p>I've never paid much attention to it, so I haven't put in my 2 cents on the design.</p>
<aside class="quote no-group" data-username="bradrn" data-post="4" data-topic="2104">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/40/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>For Rebol, I agree that ENLINE/DELINE sound better.</p>
</blockquote>
</aside>
<p>I don't want to change SPACED to ENSPACED :-/ so following the pattern and doing LINED and DELINED is probably the most consistent if it's SPACED and DESPACED.</p>
<p>A little strange, but seems okay:</p>
<pre><code>&gt;&gt; spaced ["your" "words" "here"]
== "your words here"

&gt;&gt; despaced "your words here"
== ["your" "words" "here"]

&gt;&gt; lined ["a list" "of lines" "of text"]
== "a list\nof lines\nof text\n"

&gt;&gt; delined "a list\nof lines\nof text\n"
== ["a list" "of lines" "of text"]
</code></pre>
<p>LINED would be evaluative, like SPACED, unless you use an @[...] block.</p>
<p>Some people might be confused by DESPACED vs. UNSPACED.  :-/  An interesting past naming decision was that DEQUOTE once meant "remove all quoting levels" while UNQUOTE meant "remove one quoting level"... but DEQUOTE and UNQUOTE seemed so interchangeable that <a href="https://forum.rebol.info/t/unquote-and-dequote-too-similar/1626/2">DEQUOTE was named NOQUOTE</a></p>
          <p><a href="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/5</link>
        <pubDate>Thu, 11 Jan 2024 07:43:36 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2104-5</guid>
        <source url="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104.rss">Naming for Line and Space Adders and Removers</source>
      </item>
      <item>
        <title>Naming for Line and Space Adders and Removers</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="3" data-topic="2104">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Hm, sounds backwards for something that makes lines out of structure...!</p>
</blockquote>
</aside>
<p>Yep, the naming is slightly weird, but it’s one of those things which makes sense in the context of Haskell’s history. For Rebol, I agree that ENLINE/DELINE sound better.</p>
<p>Insofar as I understand the history: in Haskell it’s a counterpart to <code>lines</code>, which splits up a string into lines:</p>
<pre><code class="lang-plaintext">ghci&gt; text = "some\nlines\nof\ntext"
ghci&gt; lines text
["some","lines","of","text"]
</code></pre>
<p>So, when they wanted the reverse, it made sense to call it <code>unlines</code>! Same story with <code>words</code> (splitting a string into its words) vs <code>unwords</code> (concatenating a list of words to a single string). And everyone just got used to that situation.</p>
          <p><a href="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/4</link>
        <pubDate>Thu, 11 Jan 2024 07:26:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2104-4</guid>
        <source url="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104.rss">Naming for Line and Space Adders and Removers</source>
      </item>
      <item>
        <title>Naming for Line and Space Adders and Removers</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="2" data-topic="2104">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/40/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>I should note that the naming wasn’t my main focus here.</p>
</blockquote>
</aside>
<p>Well, it's what the discussion becomes once I agree that having them would be nice.  <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20"></p>
<aside class="quote no-group" data-username="bradrn" data-post="1" data-topic="2104">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/40/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>Might I suggest that you could add to this set of functions <code>unlines</code></p>
</blockquote>
</aside>
<p>Hm, sounds backwards for something that makes lines out of structure...!</p>
<p>There are some old functions called ENLINE and DELINE which I had been eyeing to retake for this particular purpose...</p>
<pre><code>&gt;&gt; deline "a list\nof lines\nof text\n"
== ["a list" "of lines" "of text"]

&gt;&gt; enline ["a list" "of lines" "of text"]
== "a list\nof lines\nof text\n"
</code></pre>
<p>...which would let you keep LINES for a noun variable name.</p>
<p>The reverse of SPACED could be DESPACED.</p>
<p>Er, so I guess by that thinking we could use LINED and DELINED ...?</p>
<p>Stickler that I am for enforcing newlines at end of file, I'd probably want the default for DELINED to ensure a terminal line unless you used a refinement.  DELINED/RELAX ?</p>
          <p><a href="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/3</link>
        <pubDate>Thu, 11 Jan 2024 07:22:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2104-3</guid>
        <source url="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104.rss">Naming for Line and Space Adders and Removers</source>
      </item>
      <item>
        <title>Naming for Line and Space Adders and Removers</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <p>Er, to be clear, I should note that the naming wasn’t my main focus here. I was simply suggesting that it’s convenient to have a function for adding newlines, not just spaces.</p>
          <p><a href="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/2</link>
        <pubDate>Thu, 11 Jan 2024 07:22:36 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2104-2</guid>
        <source url="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104.rss">Naming for Line and Space Adders and Removers</source>
      </item>
      <item>
        <title>Naming for Line and Space Adders and Removers</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <p><a href="https://forum.rebol.info/t/introducing-delimit-plus-spaced-and-unspaced/2102">(DELIMIT, SPACED, UNSPACED) [are] very nice!</a> Might I suggest that you could add to this set of functions <code>unlines</code>, an immensely useful function from Haskell:</p>
<pre data-code-wrap="hs"><code class="lang-plaintext">ghci&gt; unlines ["a list","of lines","of text"]
"a list\nof lines\nof text\n"
</code></pre>
<p>(Haskell also has the reverse function <code>lines</code>, which splits up a string into a list of lines. There’s also <code>unwords</code>/<code>words</code>, which do the same thing for all whitespace.)</p>
          <p><a href="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104/1</link>
        <pubDate>Thu, 11 Jan 2024 07:10:22 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2104-1</guid>
        <source url="https://forum.rebol.info/t/naming-for-line-and-space-adders-and-removers/2104.rss">Naming for Line and Space Adders and Removers</source>
      </item>
  </channel>
</rss>
