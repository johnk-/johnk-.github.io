<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>JS testing with Cypress.io</title>
    <link>https://forum.rebol.info/t/js-testing-with-cypress-io/1778</link>
    <description>I will eventually have to port my Red GUI database front end and so I was looking for testing tools.  I came across https://cypress.io which seems to be fully featured though it may be more demanding of JS knowledge than I have.

Anyway, here&#39;s a short script to open up the replpad, and start the chess demo though I had to increase the default timeout from 4 to 5 seconds

&gt; describe(&#39;Test the replpad&#39;, () =&gt; {
&gt;   it(&#39;Visits Replpad&#39;, () =&gt; {
&gt;     cy.visit(`&#39;http://hostilefork.com/media/shared/replpad-js/&#39;`)
&gt;     cy.get(&#39;.input&#39;).type(&#39;do &amp;lt;chess&amp;gt;{enter}&#39;)
&gt;   })
&gt; })

So, it opens a browser instance to the replpad, waits until loading is complete, and then waits until the dom has the `.input` element present.  It then types the chess command.  The chess board then pops up.

Here&#39;s a quick [tutorial](https://filiphric.com/cypress-basics-selecting-elements) on how to select elements.

Installation is just simply

    npm install cypress --save-dev

but of course on Windows, you&#39;ll need to install node.js

And there&#39;s [information](https://docs.cypress.io/guides/continuous-integration/github-actions#Basic-Setup) on how to use with GitHub actions</description>
    
    <lastBuildDate>Thu, 09 Jun 2022 12:38:23 +0000</lastBuildDate>
    <category>Testing</category>
    <atom:link href="https://forum.rebol.info/t/js-testing-with-cypress-io/1778.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>JS testing with Cypress.io</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>This is great!  I think <a class="mention" href="https://forum.rebol.info/u/gchiu">@gchiu</a> has found the replacement for the clunky Marionette stuff I was doing in Python.</p>
<p>We get some big wins here:</p>
<ul>
<li>
<p>It's in JavaScript instead of Python... and since we're already having to deal with JavaScript in the ReplPad it means not bringing one more language into the mix.</p>
</li>
<li>
<p>It works with multiple browsers, so we should be able to run across the spectrum and test Chromium and Firefox (I'm not sure how many other browsers I want to worry about, but the Marionette driver was Firefox-specific)</p>
</li>
<li>
<p>The dashboard seems to give a really nice presentation of what's going wrong--including video--which replaces the painstaking process of dealing with trying to configure/find/download screenshots.</p>
</li>
</ul>
<p>With things like the CodeMirror integration, I expect the ReplPad to start having a big growth in features...and automated testing <em>needs</em> to be a part of that if we expect any of it to stay working for any amount of time.</p>
<p>Yay Graham!</p>
<p><img src="https://forum.rebol.info/images/emoji/twitter/partying_face.png?v=9" title=":partying_face:" class="emoji only-emoji" alt=":partying_face:"></p>
          <p><a href="https://forum.rebol.info/t/js-testing-with-cypress-io/1778/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/js-testing-with-cypress-io/1778/4</link>
        <pubDate>Thu, 09 Jun 2022 12:38:23 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1778-4</guid>
        <source url="https://forum.rebol.info/t/js-testing-with-cypress-io/1778.rss">JS testing with Cypress.io</source>
      </item>
      <item>
        <title>JS testing with Cypress.io</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Since the marionetting etc testing of the replpad has broken, I decided to see if I could use Cypress to the testing instead.</p>
<p>First off I managed to persuade a nice community user n their <a href="https://discord.com/channels/755913899261296641/">discord channel</a> to create a skeleton repository with a working GitHub action that all it does is do a simple GET.  See <a href="https://github.com/conversaShawn/cypress10">her skeleton here</a>.</p>
<p>I cloned it into a Humanistic repo <a href="https://github.com/humanistic/cypress10">here</a></p>
<p>The test scripts go into the e2e/ directory and for instance I have my test of the <a href="https://gitlab.com/Zhaoshirong/rebol-chess/raw/master/create-board.reb">chess app</a> <a href="https://github.com/humanistic/cypress10/blob/main/cypress/e2e/chess.cy.js">here</a></p>
<p>Of course you also have to <a href="https://github.com/humanistic/cypress10/actions">activate GitHub</a> actions when you clone a repo with a GitHub action.</p>
<p>You can also hook up your GitHub actions to the cypress free dashboard.  To do this, you need to sign up for a <a href="https://www.cypress.io/dashboard/">3 user free account</a>.</p>
<p>You also need to enable the GitHub Cypress App once you get access to the Cypress Dashboard. On the left in the concerterina menu, "Integrations" and select the service you wish to integrate with.  GitHub, GitLab and Bitbucket are free.  Jira etc are paid options.</p>
<p>You'll get a key which allows you to integrate with your dashboard, and that needs to run from NPX once you have Cypress installed in the workflow.  See <a href="https://github.com/humanistic/cypress10/blob/main/.github/workflows/main.yml#L13-L15">these lines</a></p>
<p>And now each time you do a push, you can view the results in the Cypress dashboard, and watch videos even of the tests!</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://forum.rebol.info/uploads/default/original/1X/029c5ff1a84ff5bd570061e5f5167f5b23ddc584.png" data-download-href="https://forum.rebol.info/uploads/default/029c5ff1a84ff5bd570061e5f5167f5b23ddc584" title="image"><img src="https://forum.rebol.info/uploads/default/optimized/1X/029c5ff1a84ff5bd570061e5f5167f5b23ddc584_2_690x388.png" alt="image" data-base62-sha1="n5Z9AfgyhMshNfOyWxNZE9ITE8" width="690" height="388" srcset="https://forum.rebol.info/uploads/default/optimized/1X/029c5ff1a84ff5bd570061e5f5167f5b23ddc584_2_690x388.png, https://forum.rebol.info/uploads/default/optimized/1X/029c5ff1a84ff5bd570061e5f5167f5b23ddc584_2_1035x582.png 1.5x, https://forum.rebol.info/uploads/default/original/1X/029c5ff1a84ff5bd570061e5f5167f5b23ddc584.png 2x" data-small-upload="https://forum.rebol.info/uploads/default/optimized/1X/029c5ff1a84ff5bd570061e5f5167f5b23ddc584_2_10x10.png"></a></div><p></p>
          <p><a href="https://forum.rebol.info/t/js-testing-with-cypress-io/1778/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/js-testing-with-cypress-io/1778/3</link>
        <pubDate>Thu, 09 Jun 2022 07:50:13 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1778-3</guid>
        <source url="https://forum.rebol.info/t/js-testing-with-cypress-io/1778.rss">JS testing with Cypress.io</source>
      </item>
      <item>
        <title>JS testing with Cypress.io</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Looking at <a href="https://www.lambdatest.com/blog/cypress-test-automation-framework/">how Cypress works</a>, it is essentially a proxy server.</p>
<p>So when you ask for <code>http://hostilefork.com/media/shared/replpad-js</code>, it fires up a browser that is actually directed at <code>http://localhost:8000/cypress/media/shared/replpad-js</code> (or whatever).</p>
<p>What the proxy does is add code related to testing.  So by definition, it doesn't do anything we couldn't do ourselves by adding JavaScript into the page.</p>
<p>This means it can't be used to test any "meta" things--like how the page reacts to opening a new browser tab, or interacting across IFRAMEs.</p>
<p>But presumably (?) their injected JavaScript is tricky and tailored, for transmitting keydowns and keyups in a somewhat "realistic" way to mimic what actually happens in browsers...and it may wind up being faster and simpler to use.</p>
<p>My current technique talks to the Firefox webdriver directly (without using the Selenium layer, that abstracts all the webdrivers for all the browsers).  When I made it I figured it was better than nothing, and it has been so...but it is certainly slower than we'd like.</p>
<p>It's certainly worth a shot to see if this is a better answer that covers the cases we'd be interested in.</p>
          <p><a href="https://forum.rebol.info/t/js-testing-with-cypress-io/1778/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/js-testing-with-cypress-io/1778/2</link>
        <pubDate>Mon, 09 May 2022 14:14:31 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1778-2</guid>
        <source url="https://forum.rebol.info/t/js-testing-with-cypress-io/1778.rss">JS testing with Cypress.io</source>
      </item>
      <item>
        <title>JS testing with Cypress.io</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>I will eventually have to port my Red GUI database front end and so I was looking for testing tools.  I came across <a href="https://cypress.io">https://cypress.io</a> which seems to be fully featured though it may be more demanding of JS knowledge than I have.</p>
<p>Anyway, here's a short script to open up the replpad, and start the chess demo though I had to increase the default timeout from 4 to 5 seconds</p>
<blockquote>
<p>describe('Test the replpad', () =&gt; {<br>
it('Visits Replpad', () =&gt; {<br>
cy.visit(<code>'http://hostilefork.com/media/shared/replpad-js/'</code>)<br>
cy.get('.input').type('do &lt;chess&gt;{enter}')<br>
})<br>
})</p>
</blockquote>
<p>So, it opens a browser instance to the replpad, waits until loading is complete, and then waits until the dom has the <code>.input</code> element present.  It then types the chess command.  The chess board then pops up.</p>
<p>Here's a quick <a href="https://filiphric.com/cypress-basics-selecting-elements">tutorial</a> on how to select elements.</p>
<p>Installation is just simply</p>
<pre><code>npm install cypress --save-dev
</code></pre>
<p>but of course on Windows, you'll need to install node.js</p>
<p>And there's <a href="https://docs.cypress.io/guides/continuous-integration/github-actions#Basic-Setup">information</a> on how to use with GitHub actions</p>
          <p><a href="https://forum.rebol.info/t/js-testing-with-cypress-io/1778/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/js-testing-with-cypress-io/1778/1</link>
        <pubDate>Tue, 21 Dec 2021 06:56:28 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1778-1</guid>
        <source url="https://forum.rebol.info/t/js-testing-with-cypress-io/1778.rss">JS testing with Cypress.io</source>
      </item>
  </channel>
</rss>
