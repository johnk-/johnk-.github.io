<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>DO vs. IMPORT and &quot;Console-Extending Applications&quot;</title>
    <link>https://forum.rebol.info/t/do-vs-import-and-console-extending-applications/1802</link>
    <description>During the module reworking, I roughly embraced the R3-Alpha distinction made in the header between two categories:

---

    Rebol [Type: Script ...]  ; first category

* You would run these &quot;Scripts&quot; with DO

* Performing a DO could have side effects, but should be isolated...not allowed to leak changes into the caller&#39;s environment

    * This was a new rule I imposed as a default (because &quot;Isolate&quot; was made more economical, and I wanted to see how much we could get away with)

---

    Rebol [Type: Module ...]  ; second category

* An &quot;ideal&quot; module would not have any &quot;side-effects&quot;...because the concept was that no matter how many times you run IMPORT you will only get one copy of that module in memory.

    * Notably, if you run an IMPORT on a module that has already been loaded before...that will not run any code in the module body...it will just give you the MODULE! object that it already made.

---

**We probably shouldn&#39;t be surprised that there are things that don&#39;t fit neatly into these categories!**

---

## &quot;Console-Extending Applications&quot;

So these add some functions to your environment, but also tend to have some side effects.  Like:

* **@gchiu&#39;s chess program** - It wants to display a board, show you some help, and add various chess-related behaviors to the console.  But to add those commands which &quot;contaminate&quot; the calling environment, you have to say **import**.  On the other hand, by displaying a board and showing help, it sort of violates that &quot;no side-effects&quot; rule.

    * He is working on another prescription-generating application that lets you automate a pop-up window that works in a similar way.

* **The ReplPad interactivity test** - This test adds OKAY and NOPE to the vocabulary... where it&#39;s actually the typing of those words that runs commands which advance the console through steps in some way and instructs you on what to look for.

   * If you don&#39;t use IMPORT, you don&#39;t get the commands added as commands to the context...

    * ...but if you DO use IMPORT, you can only run through the test once... because doing it again will not load the code that prints out the instructions and launches it...

## Should DO allow you to EXPORT ?

The nice thing about the word DO is it sounds pretty unambiguous, that you want to run something that has side effects.

But I do like the default of not leaking into the enclosing environment.

It seems like allowing scripts to export symbols could be a lazy compromise...which would let you ask to run something (vs. just bringing in a cached copy if previously loaded).

Yet this raises the question of what sort of behavior you&#39;d expect from something that extends the console if you DO it multiple times.

There&#39;s also some things to think about regarding how modules will only load once, with respect to debugging.  If you have a complex multi-module project running and want to tweak something--reload it and retry without losing your current interpreter state, that&#39;s rather complicated semantically.

We might also consider the idea that there&#39;s a new script type.  Something like **`Rebol [Type: Commands ...]`** for lack of a better name.  Maybe this would by default give you a new console session separate from the one you were in?

Much more work is needed on binding and modules, to try and figure out how to deliver a good experience.  So hopefully if I don&#39;t die in a tornado here in Tennessee, I will work on that soon.  :-)</description>
    
    <lastBuildDate>Fri, 06 May 2022 19:42:40 +0000</lastBuildDate>
    <category>Modules</category>
    <atom:link href="https://forum.rebol.info/t/do-vs-import-and-console-extending-applications/1802.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>DO vs. IMPORT and &quot;Console-Extending Applications&quot;</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>During the module reworking, I roughly embraced the R3-Alpha distinction made in the header between two categories:</p>
<hr>
<pre><code>Rebol [Type: Script ...]  ; first category
</code></pre>
<ul>
<li>
<p>You would run these "Scripts" with DO</p>
</li>
<li>
<p>Performing a DO could have side effects, but should be isolated...not allowed to leak changes into the caller's environment</p>
<ul>
<li>This was a new rule I imposed as a default (because "Isolate" was made more economical, and I wanted to see how much we could get away with)</li>
</ul>
</li>
</ul>
<hr>
<pre><code>Rebol [Type: Module ...]  ; second category
</code></pre>
<ul>
<li>
<p>An "ideal" module would not have any "side-effects"...because the concept was that no matter how many times you run IMPORT you will only get one copy of that module in memory.</p>
<ul>
<li>Notably, if you run an IMPORT on a module that has already been loaded before...that will not run any code in the module body...it will just give you the MODULE! object that it already made.</li>
</ul>
</li>
</ul>
<hr>
<p><strong>We probably shouldn't be surprised that there are things that don't fit neatly into these categories!</strong></p>
<hr>
<h2>"Console-Extending Applications"</h2>
<p>So these add some functions to your environment, but also tend to have some side effects.  Like:</p>
<ul>
<li>
<p><strong><a class="mention" href="/u/gchiu">@gchiu</a>'s chess program</strong> - It wants to display a board, show you some help, and add various chess-related behaviors to the console.  But to add those commands which "contaminate" the calling environment, you have to say <strong>import</strong>.  On the other hand, by displaying a board and showing help, it sort of violates that "no side-effects" rule.</p>
<ul>
<li>He is working on another prescription-generating application that lets you automate a pop-up window that works in a similar way.</li>
</ul>
</li>
<li>
<p><strong>The ReplPad interactivity test</strong> - This test adds OKAY and NOPE to the vocabulary... where it's actually the typing of those words that runs commands which advance the console through steps in some way and instructs you on what to look for.</p>
<ul>
<li>
<p>If you don't use IMPORT, you don't get the commands added as commands to the context...</p>
</li>
<li>
<p>...but if you DO use IMPORT, you can only run through the test once... because doing it again will not load the code that prints out the instructions and launches it...</p>
</li>
</ul>
</li>
</ul>
<h2>Should DO allow you to EXPORT ?</h2>
<p>The nice thing about the word DO is it sounds pretty unambiguous, that you want to run something that has side effects.</p>
<p>But I do like the default of not leaking into the enclosing environment.</p>
<p>It seems like allowing scripts to export symbols could be a lazy compromise...which would let you ask to run something (vs. just bringing in a cached copy if previously loaded).</p>
<p>Yet this raises the question of what sort of behavior you'd expect from something that extends the console if you DO it multiple times.</p>
<p>There's also some things to think about regarding how modules will only load once, with respect to debugging.  If you have a complex multi-module project running and want to tweak something--reload it and retry without losing your current interpreter state, that's rather complicated semantically.</p>
<p>We might also consider the idea that there's a new script type.  Something like <strong><code>Rebol [Type: Commands ...]</code></strong> for lack of a better name.  Maybe this would by default give you a new console session separate from the one you were in?</p>
<p>Much more work is needed on binding and modules, to try and figure out how to deliver a good experience.  So hopefully if I don't die in a tornado here in Tennessee, I will work on that soon.  <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://forum.rebol.info/t/do-vs-import-and-console-extending-applications/1802/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/do-vs-import-and-console-extending-applications/1802/1</link>
        <pubDate>Fri, 06 May 2022 19:42:40 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1802-1</guid>
        <source url="https://forum.rebol.info/t/do-vs-import-and-console-extending-applications/1802.rss">DO vs. IMPORT and &quot;Console-Extending Applications&quot;</source>
      </item>
  </channel>
</rss>
