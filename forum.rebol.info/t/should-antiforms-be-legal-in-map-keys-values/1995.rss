<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Should Antiforms Be Legal in MAP! (Keys, Values?)</title>
    <link>https://forum.rebol.info/t/should-antiforms-be-legal-in-map-keys-values/1995</link>
    <description>In the pre-isotopic era, there was a concept that MAP! would not allow you to store nulls.  Because null was the signal of not being in a map.  Assigning a key null was a way of removing items from that map.

    &gt;&gt; m: make map! [x 20]
    == make map! [
        x 20
    ]

    &gt;&gt; m.x
    == 20

    &gt;&gt; m.y
    ; null

    &gt;&gt; m.x: null
    ; null

    &gt;&gt; m
    == make map! [
    ]

Additionally, NULL was not allowed as a key.

## How Should This Change In The Isotopic Era?

We still have the case that mapping to null (or void, that causes null retrieval?) would conflate with testing for presence or absence in the map.

I&#39;ll make the point that not allowing you to store antiforms as keys or values isn&#39;t a fundamental problem, because you can META a value to put it in, and then UNMETA it when taking it out.

## Disallowing Widens The Gap With Objects

There have been questions about what the difference is between maps and objects, and this would be another: objects must be able to have members that are isotopes: action isotopes that can run implicitly, logic and null and other word isotopes, and I&#39;m presuming splices and other stable forms as well.

It would mean a map has more in common with a block...more easily being converted to or from it.

**I don&#39;t know right now whether to allow or disallow.  So for starters I am going ahead with the premise that antiforms can&#39;t be stored in maps, as either keys or values.**  We&#39;ll see how it goes.  If it is relaxed, it will be relaxed only for the values...in order to have parity with objects.</description>
    
    <lastBuildDate>Fri, 27 Sep 2024 21:16:33 +0000</lastBuildDate>
    <category>Datatypes</category>
    <atom:link href="https://forum.rebol.info/t/should-antiforms-be-legal-in-map-keys-values/1995.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Should Antiforms Be Legal in MAP! (Keys, Values?)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>In the pre-isotopic era, there was a concept that MAP! would not allow you to store nulls.  Because null was the signal of not being in a map.  Assigning a key null was a way of removing items from that map.</p>
<pre><code>&gt;&gt; m: make map! [x 20]
== make map! [
    x 20
]

&gt;&gt; m.x
== 20

&gt;&gt; m.y
; null

&gt;&gt; m.x: null
; null

&gt;&gt; m
== make map! [
]
</code></pre>
<p>Additionally, NULL was not allowed as a key.</p>
<h2>
<a name="how-should-this-change-in-the-isotopic-era-1" class="anchor" href="https://forum.rebol.info#how-should-this-change-in-the-isotopic-era-1"></a>How Should This Change In The Isotopic Era?</h2>
<p>We still have the case that mapping to null (or void, that causes null retrieval?) would conflate with testing for presence or absence in the map.</p>
<p>I'll make the point that not allowing you to store antiforms as keys or values isn't a fundamental problem, because you can META a value to put it in, and then UNMETA it when taking it out.</p>
<h2>
<a name="disallowing-widens-the-gap-with-objects-2" class="anchor" href="https://forum.rebol.info#disallowing-widens-the-gap-with-objects-2"></a>Disallowing Widens The Gap With Objects</h2>
<p>There have been questions about what the difference is between maps and objects, and this would be another: objects must be able to have members that are isotopes: action isotopes that can run implicitly, logic and null and other word isotopes, and I'm presuming splices and other stable forms as well.</p>
<p>It would mean a map has more in common with a block...more easily being converted to or from it.</p>
<p><strong>I don't know right now whether to allow or disallow.  So for starters I am going ahead with the premise that antiforms can't be stored in maps, as either keys or values.</strong>  We'll see how it goes.  If it is relaxed, it will be relaxed only for the values...in order to have parity with objects.</p>
          <p><a href="https://forum.rebol.info/t/should-antiforms-be-legal-in-map-keys-values/1995/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/should-antiforms-be-legal-in-map-keys-values/1995/1</link>
        <pubDate>Fri, 02 Dec 2022 09:28:15 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1995-1</guid>
        <source url="https://forum.rebol.info/t/should-antiforms-be-legal-in-map-keys-values/1995.rss">Should Antiforms Be Legal in MAP! (Keys, Values?)</source>
      </item>
  </channel>
</rss>
