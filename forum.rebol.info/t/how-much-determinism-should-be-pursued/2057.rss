<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How Much Determinism Should Be Pursued?</title>
    <link>https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057</link>
    <description>While writing tests for the QUERY dialect against some sample files in a directory, it ran into an issue of the order those files were given back.  *Operating system APIs generally do not return the list of files in a determined order, and the ordering across filesystems also varies.*

This means that even with the same files, you could have the lists come back differently.  One OS could say:

    Domain-SQL&gt;&gt; select &#39;name &#39;date from %tests/file-tests/
        where &#39;size &gt; 100 and &#39;date = 26-Jul-2021

    1 [%tests/file-tests/Disk50.txt 26-Jul-2021]
    2 [%tests/file-tests/11barz99.txt 26-Jul-2021]
    3 [%tests/file-tests/Apple3.txt 26-Jul-2021]
    4 [%tests/file-tests/Banana1.txt 26-Jul-2021]
    5 [%tests/file-tests/BANANA22.txt 26-Jul-2021]
    ...

While another would say:

    Domain-SQL&gt;&gt; select &#39;name &#39;date from %tests/file-tests/
        where &#39;size &gt; 100 and &#39;date = 26-Jul-2021

    1 [%tests/file-tests/Apple3.txt 26-Jul-2021]
    2 [%tests/file-tests/Banana1.txt 26-Jul-2021]
    3 [%tests/file-tests/BANANA22.txt 26-Jul-2021]
    4 [%tests/file-tests/Disk50.txt 26-Jul-2021]
    5 [%tests/file-tests/11barz99.txt 26-Jul-2021]
    ...

This made getting reproducible outputs to verify was hard.

## I Made QUERY use SORT/CASE on the READ DIR Result

Getting determinism in the output meant using a function that guarantees an ordering for filenames:

    Domain-SQL&gt;&gt; select &#39;name &#39;date from %tests/file-tests/
        where &#39;size &gt; 100 and &#39;date = 26-Jul-2021

    1 [%tests/file-tests/11barz99.txt 26-Jul-2021]
    2 [%tests/file-tests/Apple3.txt 26-Jul-2021]
    3 [%tests/file-tests/BANANA22.txt 26-Jul-2021]
    4 [%tests/file-tests/Banana1.txt 26-Jul-2021]
    5 [%tests/file-tests/Disk50.txt 26-Jul-2021]
    ...

Having to pay for the sort adds a little bit of overhead, but it&#39;s not that significant.

## Should READ DIR be Sorted By Default?

WASI in WebAssembly is looking to chase down sources of non-determinism and see what it can do to stop it.  They mention directory listing order as one potential for problems:

  https://github.com/WebAssembly/WASI/issues/190

They seem to believe that on the same OS the directory ordering would be deterministic for the same files, but I don&#39;t know of any guarantee of that.

## All This Points to Bigger Issues About Reproducibility

We can pick many examples... like whether a MAP! will always enumerate in the same order on different platforms, or with the same contents.  Using a deterministically sorted implementation of map would seem to have a number of advantages.

Especially since there&#39;s a growing push in software for giving deterministic outputs by default.  If you want some reasoning, see this article:

  https://buttondown.email/nelhage/archive/determinism-in-software-engineering/

The more testing one does, the more important it seems.</description>
    
    <lastBuildDate>Sun, 18 Aug 2024 04:16:22 +0000</lastBuildDate>
    <category>Philosophy</category>
    <atom:link href="https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How Much Determinism Should Be Pursued?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="2057">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>We can pick many examples... like whether a MAP! will always enumerate in the same order on different platforms, or with the same contents. Using a deterministically sorted implementation of map would seem to have a number of advantages.</p>
<p>Especially since there's a growing push in software for giving deterministic outputs by default.</p>
</blockquote>
</aside>
<p>I happened across an article discussing what someone felt was lacking in Go:</p>
<p><a href="https://kokada.capivaras.dev/blog/an-unordered-list-of-things-i-miss-in-go/" class="inline-onebox">An unordered list of things I miss in Go â€” kokada</a></p>
<p>The title is a joke about how the only option for enumerating maps was to use one with a randomized hash.  They felt there should be an option without a third party library where you can explicitly ask for an ordered map.</p>
<p>It also links through to mention that as of Python 3.7, the standard "Dict" dictionary preserves the insertion order:</p>
<p><a href="https://mail.python.org/pipermail/python-dev/2017-December/151283.html" class="inline-onebox">[Python-Dev] Guarantee ordered dict literals in v3.7?</a></p>
<p>My historical biases coming from C++ would likely to have been for Go's choice: to actually force randomization in order to prevent people from depending on something they don't care about.  This helps fuzz test and make sure the default doesn't overspecify to prevent optimizations of the structure.</p>
<p>But for a higher-level interpreted language in the space of something like Python (or Rebol), that tradeoff may not be the right one for modern concerns.</p>
          <p><a href="https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057/3</link>
        <pubDate>Sun, 18 Aug 2024 04:16:22 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2057-3</guid>
        <source url="https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057.rss">How Much Determinism Should Be Pursued?</source>
      </item>
      <item>
        <title>How Much Determinism Should Be Pursued?</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p>If I'm not mistaken in SQL, there is no expectation of the result set coming back in a consistent order unless you specify so in the SQL. You would use an ORDER BY clause to do this:</p>
<p><code>Domain-SQL&gt;&gt; select 'name 'date from %tests/file-tests/     where 'size &gt; 100 and 'date = 26-Jul-2021     order by 'name asc</code></p>
<p>The options in this clause are ASC (ascending) or DESC (descending) based on the chosen column.</p>
          <p><a href="https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057/2</link>
        <pubDate>Thu, 19 Oct 2023 21:01:49 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2057-2</guid>
        <source url="https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057.rss">How Much Determinism Should Be Pursued?</source>
      </item>
      <item>
        <title>How Much Determinism Should Be Pursued?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>While writing tests for the QUERY dialect against some sample files in a directory, it ran into an issue of the order those files were given back.  <em>Operating system APIs generally do not return the list of files in a determined order, and the ordering across filesystems also varies.</em></p>
<p>This means that even with the same files, you could have the lists come back differently.  One OS could say:</p>
<pre><code>Domain-SQL&gt;&gt; select 'name 'date from %tests/file-tests/
    where 'size &gt; 100 and 'date = 26-Jul-2021

1 [%tests/file-tests/Disk50.txt 26-Jul-2021]
2 [%tests/file-tests/11barz99.txt 26-Jul-2021]
3 [%tests/file-tests/Apple3.txt 26-Jul-2021]
4 [%tests/file-tests/Banana1.txt 26-Jul-2021]
5 [%tests/file-tests/BANANA22.txt 26-Jul-2021]
...
</code></pre>
<p>While another would say:</p>
<pre><code>Domain-SQL&gt;&gt; select 'name 'date from %tests/file-tests/
    where 'size &gt; 100 and 'date = 26-Jul-2021

1 [%tests/file-tests/Apple3.txt 26-Jul-2021]
2 [%tests/file-tests/Banana1.txt 26-Jul-2021]
3 [%tests/file-tests/BANANA22.txt 26-Jul-2021]
4 [%tests/file-tests/Disk50.txt 26-Jul-2021]
5 [%tests/file-tests/11barz99.txt 26-Jul-2021]
...
</code></pre>
<p>This made getting reproducible outputs to verify was hard.</p>
<h2>
<a name="i-made-query-use-sortcase-on-the-read-dir-result-1" class="anchor" href="https://forum.rebol.info#i-made-query-use-sortcase-on-the-read-dir-result-1"></a>I Made QUERY use SORT/CASE on the READ DIR Result</h2>
<p>Getting determinism in the output meant using a function that guarantees an ordering for filenames:</p>
<pre><code>Domain-SQL&gt;&gt; select 'name 'date from %tests/file-tests/
    where 'size &gt; 100 and 'date = 26-Jul-2021

1 [%tests/file-tests/11barz99.txt 26-Jul-2021]
2 [%tests/file-tests/Apple3.txt 26-Jul-2021]
3 [%tests/file-tests/BANANA22.txt 26-Jul-2021]
4 [%tests/file-tests/Banana1.txt 26-Jul-2021]
5 [%tests/file-tests/Disk50.txt 26-Jul-2021]
...
</code></pre>
<p>Having to pay for the sort adds a little bit of overhead, but it's not that significant.</p>
<h2>
<a name="should-read-dir-be-sorted-by-default-2" class="anchor" href="https://forum.rebol.info#should-read-dir-be-sorted-by-default-2"></a>Should READ DIR be Sorted By Default?</h2>
<p>WASI in WebAssembly is looking to chase down sources of non-determinism and see what it can do to stop it.  They mention directory listing order as one potential for problems:</p>
<p><a href="https://github.com/WebAssembly/WASI/issues/190" class="inline-onebox">Roadmap to determinism in WASI Â· Issue #190 Â· WebAssembly/WASI Â· GitHub</a></p>
<p>They seem to believe that on the same OS the directory ordering would be deterministic for the same files, but I don't know of any guarantee of that.</p>
<h2>
<a name="all-this-points-to-bigger-issues-about-reproducibility-3" class="anchor" href="https://forum.rebol.info#all-this-points-to-bigger-issues-about-reproducibility-3"></a>All This Points to Bigger Issues About Reproducibility</h2>
<p>We can pick many examples... like whether a MAP! will always enumerate in the same order on different platforms, or with the same contents.  Using a deterministically sorted implementation of map would seem to have a number of advantages.</p>
<p>Especially since there's a growing push in software for giving deterministic outputs by default.  If you want some reasoning, see this article:</p>
<p><a href="https://buttondown.email/nelhage/archive/determinism-in-software-engineering/" class="inline-onebox">Determinism in software engineering â€¢ Buttondown</a></p>
<p>The more testing one does, the more important it seems.</p>
          <p><a href="https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057/1</link>
        <pubDate>Thu, 19 Oct 2023 19:34:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2057-1</guid>
        <source url="https://forum.rebol.info/t/how-much-determinism-should-be-pursued/2057.rss">How Much Determinism Should Be Pursued?</source>
      </item>
  </channel>
</rss>
