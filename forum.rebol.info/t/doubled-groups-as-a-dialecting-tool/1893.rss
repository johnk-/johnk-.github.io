<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>((Doubled Groups)) as a Dialecting Tool</title>
    <link>https://forum.rebol.info/t/doubled-groups-as-a-dialecting-tool/1893</link>
    <description>In trying to get COMPOSE to lose /ONLY, there was a time when it looked for doubled groups.

    &gt;&gt; block: [a b c]

    &gt;&gt; compose [(block) ((block))]
    == [a b c [a b c]]

I liked it, and I said:

[quote=&quot;hostilefork, post:10, topic:979&quot;]
As a higher-level tool, it should cater to the higher-level needs...and that&#39;s not splicing unless you ask. I really believe this is the better behavior for people who are writing and reading the code.
[/quote]

But I found concerns:

[quote=&quot;hostilefork, post:10, topic:979&quot;]
One qualm I have about this is the visual difficulty of telling if something is a double-group if you are composing more than one item.

    &gt;&gt; compose [a b ((some code
             that goes on and on and) oh it ended there (maybe you start
             another group and
         eventually end)) d e]

That&#39;s *not* a splicing case because it&#39;s not a double group, but it kind of looks like one.
[/quote]

To be fair: it&#39;s hardly the only case where if you jump to conclusions on reading a few characters that you&#39;ll have problems because the code keeps going and may invalidate the assumptions you made by looking at those few characters.  But it still wasn&#39;t perfect.

...and as it turned out, it was another one of those &quot;close but no cigar&quot; cases of wanting to mark the intent of splice specially, but using a mechanism that&#39;s not as good as BLOCK! isotopes.

**I think that doubled-up-groups are a neat example of a dialecting concept, where you might want to give that significance.  It would certainly belong in the dialecting handbook (if we had one).**

But in the COMPOSE case, we have a better option... **compose [... (spread block) ...]** (or another operator of your choice that produces block isotopes).  And it&#39;s more fitting for the core, because it doesn&#39;t have the weakness mentioned above.</description>
    
    <lastBuildDate>Mon, 18 Jul 2022 22:02:59 +0000</lastBuildDate>
    <category>Dialects/DSLs</category>
    <atom:link href="https://forum.rebol.info/t/doubled-groups-as-a-dialecting-tool/1893.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>((Doubled Groups)) as a Dialecting Tool</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>In trying to get COMPOSE to lose /ONLY, there was a time when it looked for doubled groups.</p>
<pre><code>&gt;&gt; block: [a b c]

&gt;&gt; compose [(block) ((block))]
== [a b c [a b c]]
</code></pre>
<p>I liked it, and I said:</p>
<aside class="quote no-group quote-modified" data-username="hostilefork" data-post="10" data-topic="979">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"><a href="https://forum.rebol.info/t/the-superpowers-of-ren-cs-revamped-compose/979/10">The Superpowers of Ren-C's Revamped COMPOSE</a>
</div>
<blockquote>
<p>As a higher-level tool, it should cater to the higher-level needs...and that's not splicing unless you ask. I really believe this is the better behavior for people who are writing and reading the code.</p>
</blockquote>
</aside>
<p>But I found concerns:</p>
<aside class="quote no-group quote-modified" data-username="hostilefork" data-post="10" data-topic="979">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"><a href="https://forum.rebol.info/t/the-superpowers-of-ren-cs-revamped-compose/979/10">The Superpowers of Ren-C's Revamped COMPOSE</a>
</div>
<blockquote>
<p>One qualm I have about this is the visual difficulty of telling if something is a double-group if you are composing more than one item.</p>
<pre><code>&gt;&gt; compose [a b ((some code
         that goes on and on and) oh it ended there (maybe you start
         another group and
     eventually end)) d e]
</code></pre>
<p>That's <em>not</em> a splicing case because it's not a double group, but it kind of looks like one.</p>
</blockquote>
</aside>
<p>To be fair: it's hardly the only case where if you jump to conclusions on reading a few characters that you'll have problems because the code keeps going and may invalidate the assumptions you made by looking at those few characters.  But it still wasn't perfect.</p>
<p>...and as it turned out, it was another one of those "close but no cigar" cases of wanting to mark the intent of splice specially, but using a mechanism that's not as good as BLOCK! isotopes.</p>
<p><strong>I think that doubled-up-groups are a neat example of a dialecting concept, where you might want to give that significance.  It would certainly belong in the dialecting handbook (if we had one).</strong></p>
<p>But in the COMPOSE case, we have a better option... <strong>compose [... (spread block) ...]</strong> (or another operator of your choice that produces block isotopes).  And it's more fitting for the core, because it doesn't have the weakness mentioned above.</p>
          <p><a href="https://forum.rebol.info/t/doubled-groups-as-a-dialecting-tool/1893/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/doubled-groups-as-a-dialecting-tool/1893/1</link>
        <pubDate>Sun, 06 Jun 2021 02:54:04 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1893-1</guid>
        <source url="https://forum.rebol.info/t/doubled-groups-as-a-dialecting-tool/1893.rss">((Doubled Groups)) as a Dialecting Tool</source>
      </item>
  </channel>
</rss>
