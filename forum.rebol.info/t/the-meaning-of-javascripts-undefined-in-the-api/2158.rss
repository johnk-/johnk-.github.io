<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The Meaning of JavaScript&#39;s &quot;Undefined&quot; in the API</title>
    <link>https://forum.rebol.info/t/the-meaning-of-javascripts-undefined-in-the-api/2158</link>
    <description>Something that has been kind of on my mind is the relationship between JavaScript&#39;s `undefined` and Ren-C&#39;s NOTHING state.

I&#39;ve set it up so that if you have a JS-NATIVE that doesn&#39;t have a return statement, that returns NOTHING.  That&#39;s consistent with plain functions that don&#39;t have a return statement.

However, it seems to me that **reb.Value(&quot;print {Hello}&quot;);** should not return `undefined` the way that **reb.Value(&quot;select [a 10 b 20] &#39;c&quot;);** returns `null`.  One reason is because JavaScript is bad about conflating falsey things, and it considers undefined to be falsey.  [Whereas Ren-C considers nothing to be truthy.](https://forum.rebol.info/t/the-truthiness-of-nothing/2180)

Guess my point is that it seems like an area where noticing the parallel is useful, but care should be taken in where to make the mapping apply...</description>
    
    <lastBuildDate>Tue, 27 Feb 2024 01:27:56 +0000</lastBuildDate>
    <category>Language Bridging</category>
    <atom:link href="https://forum.rebol.info/t/the-meaning-of-javascripts-undefined-in-the-api/2158.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The Meaning of JavaScript&#39;s &quot;Undefined&quot; in the API</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Something that has been kind of on my mind is the relationship between JavaScript's <code>undefined</code> and Ren-C's NOTHING state.</p>
<p>I've set it up so that if you have a JS-NATIVE that doesn't have a return statement, that returns NOTHING.  That's consistent with plain functions that don't have a return statement.</p>
<p>However, it seems to me that <strong>reb.Value("print {Hello}");</strong> should not return <code>undefined</code> the way that <strong>reb.Value("select [a 10 b 20] 'c");</strong> returns <code>null</code>.  One reason is because JavaScript is bad about conflating falsey things, and it considers undefined to be falsey.  <a href="https://forum.rebol.info/t/the-truthiness-of-nothing/2180">Whereas Ren-C considers nothing to be truthy.</a></p>
<p>Guess my point is that it seems like an area where noticing the parallel is useful, but care should be taken in where to make the mapping apply...</p>
          <p><a href="https://forum.rebol.info/t/the-meaning-of-javascripts-undefined-in-the-api/2158/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-meaning-of-javascripts-undefined-in-the-api/2158/1</link>
        <pubDate>Fri, 12 Oct 2018 05:24:37 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2158-1</guid>
        <source url="https://forum.rebol.info/t/the-meaning-of-javascripts-undefined-in-the-api/2158.rss">The Meaning of JavaScript&#39;s &quot;Undefined&quot; in the API</source>
      </item>
  </channel>
</rss>
