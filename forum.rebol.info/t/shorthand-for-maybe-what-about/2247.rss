<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Shorthand for MAYBE... what about `?`</title>
    <link>https://forum.rebol.info/t/shorthand-for-maybe-what-about/2247</link>
    <description>I&#39;m not crazy about storing VOID in variables (though you can do it).  I suggest initializing things to NULL and then using MAYBE at any site that is willing to overlook that, and create an intentional &quot;opt out&quot; from it.

But MAYBE does break the flow of what you&#39;re reading.

Here&#39;s some code from Rebmake:

    depends: compose [
        (ext-objlib)  ; !!! Pulls in in all of extensions deps?
        ;
        ; (app) all dynamic extensions depend on r3, but app not ready
        ; so the dependency is added at a later phase below
        ;
        (maybe spread app-config.libraries)
        (maybe spread ext-objlib.libraries)
    ]
    post-build-commands: all [
        not cfg-symbols
        reduce [
            make rebmake.cmd-strip-class [
                file: join output maybe rebmake.target-platform.dll-suffix
            ]
        ]
    ]

    ldflags: compose [
        (maybe spread ext.ldflags)
        (maybe spread app-config.ldflags)

        ; GCC has this but Clang does not, and currently Clang is
        ; being called through a gcc alias.  Review.
        ;
        ;&lt;gnu:-Wl,--as-needed&gt;  ; Switch ignores linking unused libs
    ]

## I Feel Like MAYBE Needs A Shorthand

I&#39;ve expressed my distate for taking the **`?`** symbol that can be so useful in the language for something like **`help`** when you can just type **help**.  (or make a shorthand that applies only in the console that turns **`h`** into HELP, if you must, and then you&#39;d say **`(h)`** if you wanted to get the variable.

  So... what about **`?`** for MAYBE?

    depends: compose [
        (ext-objlib)  ; !!! Pulls in in all of extensions deps?
        ;
        ; (app) all dynamic extensions depend on r3, but app not ready
        ; so the dependency is added at a later phase below
        ;
        (? spread app-config.libraries)
        (? spread ext-objlib.libraries)
    ]
    post-build-commands: all [
        not cfg-symbols
        reduce [
            make rebmake.cmd-strip-class [
                file: join output ? rebmake.target-platform.dll-suffix
            ]
        ]
    ]

    ldflags: compose [
        (? spread ext.ldflags)
        (? spread app-config.ldflags)

        ; GCC has this but Clang does not, and currently Clang is
        ; being called through a gcc alias.  Review.
        ;
        ;&lt;gnu:-Wl,--as-needed&gt;  ; Switch ignores linking unused libs
    ]

## I Like It

Of course, you can override anything and everything.  If you&#39;re in a function and you think **?** would be more useful to do something else, do something else with it.  **`let ?: &lt;whatever&gt;`** and fallback on MAYBE.  (Or **`lib/?`**, or whatever.)</description>
    
    <lastBuildDate>Tue, 03 Sep 2024 22:57:49 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/shorthand-for-maybe-what-about/2247.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Shorthand for MAYBE... what about `?`</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I'm not crazy about storing VOID in variables (though you can do it).  I suggest initializing things to NULL and then using MAYBE at any site that is willing to overlook that, and create an intentional "opt out" from it.</p>
<p>But MAYBE does break the flow of what you're reading.</p>
<p>Here's some code from Rebmake:</p>
<pre><code>depends: compose [
    (ext-objlib)  ; !!! Pulls in in all of extensions deps?
    ;
    ; (app) all dynamic extensions depend on r3, but app not ready
    ; so the dependency is added at a later phase below
    ;
    (maybe spread app-config.libraries)
    (maybe spread ext-objlib.libraries)
]
post-build-commands: all [
    not cfg-symbols
    reduce [
        make rebmake.cmd-strip-class [
            file: join output maybe rebmake.target-platform.dll-suffix
        ]
    ]
]

ldflags: compose [
    (maybe spread ext.ldflags)
    (maybe spread app-config.ldflags)

    ; GCC has this but Clang does not, and currently Clang is
    ; being called through a gcc alias.  Review.
    ;
    ;&lt;gnu:-Wl,--as-needed&gt;  ; Switch ignores linking unused libs
]
</code></pre>
<h2>
<a name="i-feel-like-maybe-needs-a-shorthand-1" class="anchor" href="https://forum.rebol.info#i-feel-like-maybe-needs-a-shorthand-1"></a>I Feel Like MAYBE Needs A Shorthand</h2>
<p>I've expressed my distate for taking the <strong><code>?</code></strong> symbol that can be so useful in the language for something like <strong><code>help</code></strong> when you can just type <strong>help</strong>.  (or make a shorthand that applies only in the console that turns <strong><code>h</code></strong> into HELP, if you must, and then you'd say <strong><code>(h)</code></strong> if you wanted to get the variable.</p>
<p>So... what about <strong><code>?</code></strong> for MAYBE?</p>
<pre><code>depends: compose [
    (ext-objlib)  ; !!! Pulls in in all of extensions deps?
    ;
    ; (app) all dynamic extensions depend on r3, but app not ready
    ; so the dependency is added at a later phase below
    ;
    (? spread app-config.libraries)
    (? spread ext-objlib.libraries)
]
post-build-commands: all [
    not cfg-symbols
    reduce [
        make rebmake.cmd-strip-class [
            file: join output ? rebmake.target-platform.dll-suffix
        ]
    ]
]

ldflags: compose [
    (? spread ext.ldflags)
    (? spread app-config.ldflags)

    ; GCC has this but Clang does not, and currently Clang is
    ; being called through a gcc alias.  Review.
    ;
    ;&lt;gnu:-Wl,--as-needed&gt;  ; Switch ignores linking unused libs
]
</code></pre>
<h2>
<a name="i-like-it-2" class="anchor" href="https://forum.rebol.info#i-like-it-2"></a>I Like It</h2>
<p>Of course, you can override anything and everything.  If you're in a function and you think <strong>?</strong> would be more useful to do something else, do something else with it.  <strong><code>let ?: &lt;whatever&gt;</code></strong> and fallback on MAYBE.  (Or <strong><code>lib/?</code></strong>, or whatever.)</p>
          <p><a href="https://forum.rebol.info/t/shorthand-for-maybe-what-about/2247/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/shorthand-for-maybe-what-about/2247/1</link>
        <pubDate>Tue, 03 Sep 2024 22:57:49 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2247-1</guid>
        <source url="https://forum.rebol.info/t/shorthand-for-maybe-what-about/2247.rss">Shorthand for MAYBE... what about `?`</source>
      </item>
  </channel>
</rss>
