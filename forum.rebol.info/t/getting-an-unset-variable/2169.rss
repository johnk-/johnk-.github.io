<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Getting an unset variable</title>
    <link>https://forum.rebol.info/t/getting-an-unset-variable/2169</link>
    <description>Nothing (now anti BLANK!) [has been established](https://forum.rebol.info/t/shades-of-distinction-in-non-valued-intents/1604) as the value of unset variables. As the example in that thread states:

```
&gt;&gt; nothing-value
** Error: NOTHING-VALUE variable is unset

&gt;&gt; append [a b] get/any &#39;nothing-value
** Error: APPEND does not allow adding ~ antiforms to blocks
```

But when I try this, I get quite different results:

```
&gt;&gt; nothing-value
** Script Error: nothing-value word is attached to a context, but unassigned

&gt;&gt; append [a b] get/any &#39;nothing-value
** Script Error: nothing-value word is not bound to a context
```

In fact, even GET/ANY doesn’t seem to work… even when I make sure the binding is right:

```
&gt;&gt; get/any &#39;nothing-value
** Script Error: nothing-value word is not bound to a context

&gt;&gt; get/any $nothing-value             
** Script Error: nothing-value word is attached to a context, but unassigned
```

So, what’s happening here? And how *do* I get nothing out of an unset variable?</description>
    
    <lastBuildDate>Sat, 09 Mar 2024 03:03:59 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://forum.rebol.info/t/getting-an-unset-variable/2169.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Getting an unset variable</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Attachment binding is just something that had to be done in order to get the system to boot under new binding rules.  I don't have a coherent theory for it.</p>
<p>As such, I can't offhand immediately name "here's a thing that fundamentally doesn't work about equating attachment-bound things with being unset".</p>
<p>I can tell you that at least for my sake in debugging things, I like to know the difference.</p>
<p>But more generally, I can tell you that attachment binding is dodgy.  If you try to pretend attachment-bound things are real variables that are backed by a memory location, then you'll be lying when you answer various questions like BINDING OF (not a great question to ask these days, crashes on things).</p>
          <p><a href="https://forum.rebol.info/t/getting-an-unset-variable/2169/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/getting-an-unset-variable/2169/4</link>
        <pubDate>Sat, 09 Mar 2024 03:03:59 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2169-4</guid>
        <source url="https://forum.rebol.info/t/getting-an-unset-variable/2169.rss">Getting an unset variable</source>
      </item>
      <item>
        <title>Getting an unset variable</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="2169">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>It's possible to not draw a distinction in the UI, and treat these as existing but unset... but I suspect that's not a good thing to do.</p>
</blockquote>
</aside>
<p>What’s wrong with that? To me it seems the most logical approach. If I mention a variable which has never been set, I’d <em>expect</em> it to behave as if it were unset.</p>
          <p><a href="https://forum.rebol.info/t/getting-an-unset-variable/2169/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/getting-an-unset-variable/2169/3</link>
        <pubDate>Sat, 09 Mar 2024 02:50:49 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2169-3</guid>
        <source url="https://forum.rebol.info/t/getting-an-unset-variable/2169.rss">Getting an unset variable</source>
      </item>
      <item>
        <title>Getting an unset variable</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>You're hitting a modern issue of "attachment binding":</p>
<p><a href="https://forum.rebol.info/t/caching-binding-lookup-and-attachment-binding/2128" class="inline-onebox">Caching Binding Lookup, and "Attachment Binding"</a></p>
<p>Today's attached variables aren't unset, they don't exist at all.</p>
<p>It's possible to not draw a distinction in the UI, and treat these as existing but unset... but I suspect that's not a good thing to do.</p>
<p>But really, attachment binding is kind of dodgy.  Better ideas are welcome.</p>
          <p><a href="https://forum.rebol.info/t/getting-an-unset-variable/2169/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/getting-an-unset-variable/2169/2</link>
        <pubDate>Sat, 09 Mar 2024 02:46:43 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2169-2</guid>
        <source url="https://forum.rebol.info/t/getting-an-unset-variable/2169.rss">Getting an unset variable</source>
      </item>
      <item>
        <title>Getting an unset variable</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <p>Nothing (now anti BLANK!) <a href="https://forum.rebol.info/t/shades-of-distinction-in-non-valued-intents/1604">has been established</a> as the value of unset variables. As the example in that thread states:</p>
<pre><code class="lang-plaintext">&gt;&gt; nothing-value
** Error: NOTHING-VALUE variable is unset

&gt;&gt; append [a b] get/any 'nothing-value
** Error: APPEND does not allow adding ~ antiforms to blocks
</code></pre>
<p>But when I try this, I get quite different results:</p>
<pre><code class="lang-plaintext">&gt;&gt; nothing-value
** Script Error: nothing-value word is attached to a context, but unassigned

&gt;&gt; append [a b] get/any 'nothing-value
** Script Error: nothing-value word is not bound to a context
</code></pre>
<p>In fact, even GET/ANY doesn’t seem to work… even when I make sure the binding is right:</p>
<pre><code class="lang-plaintext">&gt;&gt; get/any 'nothing-value
** Script Error: nothing-value word is not bound to a context

&gt;&gt; get/any $nothing-value             
** Script Error: nothing-value word is attached to a context, but unassigned
</code></pre>
<p>So, what’s happening here? And how <em>do</em> I get nothing out of an unset variable?</p>
          <p><a href="https://forum.rebol.info/t/getting-an-unset-variable/2169/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/getting-an-unset-variable/2169/1</link>
        <pubDate>Sat, 09 Mar 2024 02:39:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2169-1</guid>
        <source url="https://forum.rebol.info/t/getting-an-unset-variable/2169.rss">Getting an unset variable</source>
      </item>
  </channel>
</rss>
