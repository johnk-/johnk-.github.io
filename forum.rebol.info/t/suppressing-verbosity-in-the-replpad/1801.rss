<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Suppressing verbosity in the replpad</title>
    <link>https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801</link>
    <description>I am developing a replpad app but I want the users to go straight to a URL and start the app.  I&#39;d rather that they didn&#39;t have to type

    import @rx

when a lot of module stuff is sent to the console interrupting the interface, eg

    `== make module! [
        alpha: make bitset! #{00000000000000007FFFFFE07FFFFFE0}  
        rx: &#39;#[action! {rx} [drug]]  
        ...  
 `

Maybe `http://hostilefork.com/media/shared/replpad-js/@rx` would be better and if a module is provided then verbose mode is automatically suppressed.

Anyway, suggestions for a standardised way to run our apps?</description>
    
    <lastBuildDate>Mon, 02 May 2022 17:40:38 +0000</lastBuildDate>
    <category>Emscripten</category>
    <atom:link href="https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Suppressing verbosity in the replpad</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="gchiu" data-post="1" data-topic="1801">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/gchiu/40/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<p>Maybe <code>http://hostilefork.com/media/shared/replpad-js/@rx</code> would be better</p>
</blockquote>
</aside>
<p>This notation seems nice, but the way browsers work this can't be dispatched to a single script living at <code>http://hostilefork.com/media/shared/replpad-js/</code>.</p>
<p>When serving the ReplPad statically, the only way to do that is with the URI "query" and "fragment"  portions...so it has to be done with things that follow a question mark or a hash mark.  Such as <code>http://hostilefork.com/media/shared/replpad-js/?import=@rx</code> or similar.</p>
<p>In order to do better, there has to be actual server-side code before the page is fetched as part of the "dispatch", which somehow routes the information to the page.  That would be worth it for a hosted service that's trying to be as slick as possible...but the ReplPad is not being prescriptive about the server-side hosting at this time.</p>
<p>It's something we should keep in mind for <code>https://example.com/@rx</code> when things are streamlined.</p>
          <p><a href="https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801/3</link>
        <pubDate>Mon, 02 May 2022 17:40:38 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1801-3</guid>
        <source url="https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801.rss">Suppressing verbosity in the replpad</source>
      </item>
      <item>
        <title>Suppressing verbosity in the replpad</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p>if a module is provided then verbose mode is automatically suppressed.</p>
</blockquote>
<p><strong>My main thought about verbosity is that we should think about options beyond just "on" and "off".</strong></p>
<p>Verbose output is something that is helpful when debugging, but you don't always know in advance if you're going to end up in a situation that needs debugging or not.  So having a log running regardless is the best default option--then you can choose to view it after the fact.</p>
<p>This is demonstrated fairly well by the JavaScript console in browsers.  Users aren't troubled by it if all goes well...but if something goes wrong you can bring it up.  Errors are highlighted distinctly from just basic logging.</p>
<p>In the case of the ReplPad, we can actually leverage this by sending the information about module loads and such to the browser console--as opposed to the ReplPad console.  That seems like a reasonable default, and then maybe have a way to send it to the standard output.</p>
<p>When you're running in a desktop console, there could be options:</p>
<ul>
<li>Write informational logging output to a file</li>
<li>Mix it in with the console output</li>
<li>Just keep the last N lines of it in memory and be able to ask for it on an as-needed basis</li>
</ul>
<p><strong>One thing I worry about is superfluous logging that <em>isn't</em> visible getting out of hand and taking up memory and time...</strong> so there should be some way of knowing a lot of logging output is being made.  Not sure when these notices would be given, but perhaps something it says when it prints out a prompt.</p>
          <p><a href="https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801/2</link>
        <pubDate>Mon, 02 May 2022 15:17:53 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1801-2</guid>
        <source url="https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801.rss">Suppressing verbosity in the replpad</source>
      </item>
      <item>
        <title>Suppressing verbosity in the replpad</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>I am developing a replpad app but I want the users to go straight to a URL and start the app.  I'd rather that they didn't have to type</p>
<pre><code>import @rx
</code></pre>
<p>when a lot of module stuff is sent to the console interrupting the interface, eg</p>
<pre><code>`== make module! [
    alpha: make bitset! #{00000000000000007FFFFFE07FFFFFE0}  
    rx: '#[action! {rx} [drug]]  
    ...  
</code></pre>
<p>`</p>
<p>Maybe <code>http://hostilefork.com/media/shared/replpad-js/@rx</code> would be better and if a module is provided then verbose mode is automatically suppressed.</p>
<p>Anyway, suggestions for a standardised way to run our apps?</p>
          <p><a href="https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801/1</link>
        <pubDate>Thu, 28 Apr 2022 09:49:47 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1801-1</guid>
        <source url="https://forum.rebol.info/t/suppressing-verbosity-in-the-replpad/1801.rss">Suppressing verbosity in the replpad</source>
      </item>
  </channel>
</rss>
