<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What Does &quot;Literal&quot; Mean In Rebol&#39;s Model?</title>
    <link>https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598</link>
    <description>In programming, the term &quot;literal&quot; generally refers to when a source item expresses a fundamental value and doesn&#39;t need to be looked up in a variable.  It is essentially inert.

For C:

    int value = 10;  // 10 seen here is an &quot;integer literal&quot;
    printf(&quot;The value is %d&quot;, value);  // &quot;string literal&quot; + &quot;integer variable&quot;

But in Rebol&#39;s world, the notion of &quot;what&#39;s a literal&quot; is context-dependent, and can be very bent up.

    is-this-literal?: func [&#39;word [word!]] [
        print [&quot;The word was&quot; word &quot;- you tell me if that was literal!&quot;]
    ]

    &gt;&gt; is-this-literal? foo
    The word was foo - you tell me if that was literal!

So what do you think...is FOO a &quot;literal word&quot; or not?

The answer is that we can&#39;t particularly answer whether a value is &quot;literal&quot; or not unless we know how it is being used.  *The term has kind of lost its meaning.*

All we can really say in a particular situation is if a value is being used in a &quot;literal way&quot; or not.
 
In terms of naming, Rebol historically called quoted things &quot;LIT&quot; things.

    rebol2&gt;&gt; type? first [&#39;foo]
    == lit-word!

But the evaluator gave LIT-WORD!s a behavior...they&#39;d drop their quote mark:

    rebol2&gt;&gt; &#39;foo
    == foo

So important to notice: **&quot;inertness&quot; wasn&#39;t implied by what was being called &quot;literalness&quot;**</description>
    
    <lastBuildDate>Wed, 18 Aug 2021 14:05:52 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What Does &quot;Literal&quot; Mean In Rebol&#39;s Model?</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="1598">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>We should be calling them "LITERAL ARGUMENTS" and not "QUOTED ARGUMENTS"</p>
</blockquote>
</aside>
<p>Agreed, quoted also sounds if there is a closing quotation marker, which there isn't.</p>
          <p><a href="https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598/3</link>
        <pubDate>Wed, 18 Aug 2021 14:05:52 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1598-3</guid>
        <source url="https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598.rss">What Does &quot;Literal&quot; Mean In Rebol&#39;s Model?</source>
      </item>
      <item>
        <title>What Does &quot;Literal&quot; Mean In Rebol&#39;s Model?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="1598">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>The answer is that we can't particularly answer whether a value is "literal" or not unless we know how it is being used. <em>The term has kind of lost its meaning.</em></p>
</blockquote>
</aside>
<p>Coming back to this question, I think the only real meaningful use of literal is to describe when something is taken "as-is".</p>
<p>So what we've called "quoted parameters" are probably better called "literal parameters"</p>
<pre><code>&gt;&gt; foo: func ['arg] [:arg]

&gt;&gt; foo x
== x
</code></pre>
<p><strong>Getting away from the term "quoted argument" is didactically beneficial.</strong>  If anything, META arguments would be "quoted arguments"!  <img src="https://forum.rebol.info/images/emoji/twitter/crazy_face.png?v=9" title=":crazy_face:" class="emoji" alt=":crazy_face:"></p>
<pre><code>&gt;&gt; foo: func [^arg] [arg]

&gt;&gt; foo x
== 'x
</code></pre>
<p><em>(Don't take what I just said seriously, ^META parameters should not have been called quoted parameters.  <strong>(^ void)</strong> is <strong>null</strong> ... and <strong>(^ get/any 'asdfasdf)</strong> is <strong>~</strong> which is de-isotoped, but not quoted.)</em></p>
          <p><a href="https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598/2</link>
        <pubDate>Sun, 15 Aug 2021 11:46:45 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1598-2</guid>
        <source url="https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598.rss">What Does &quot;Literal&quot; Mean In Rebol&#39;s Model?</source>
      </item>
      <item>
        <title>What Does &quot;Literal&quot; Mean In Rebol&#39;s Model?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>In programming, the term "literal" generally refers to when a source item expresses a fundamental value and doesn't need to be looked up in a variable.  It is essentially inert.</p>
<p>For C:</p>
<pre><code>int value = 10;  // 10 seen here is an "integer literal"
printf("The value is %d", value);  // "string literal" + "integer variable"
</code></pre>
<p>But in Rebol's world, the notion of "what's a literal" is context-dependent, and can be very bent up.</p>
<pre><code>is-this-literal?: func ['word [word!]] [
    print ["The word was" word "- you tell me if that was literal!"]
]

&gt;&gt; is-this-literal? foo
The word was foo - you tell me if that was literal!
</code></pre>
<p>So what do you think...is FOO a "literal word" or not?</p>
<p>The answer is that we can't particularly answer whether a value is "literal" or not unless we know how it is being used.  <em>The term has kind of lost its meaning.</em></p>
<p>All we can really say in a particular situation is if a value is being used in a "literal way" or not.</p>
<p>In terms of naming, Rebol historically called quoted things "LIT" things.</p>
<pre><code>rebol2&gt;&gt; type? first ['foo]
== lit-word!
</code></pre>
<p>But the evaluator gave LIT-WORD!s a behavior...they'd drop their quote mark:</p>
<pre><code>rebol2&gt;&gt; 'foo
== foo
</code></pre>
<p>So important to notice: <strong>"inertness" wasn't implied by what was being called "literalness"</strong></p>
          <p><a href="https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598/1</link>
        <pubDate>Thu, 06 May 2021 13:53:49 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1598-1</guid>
        <source url="https://forum.rebol.info/t/what-does-literal-mean-in-rebols-model/1598.rss">What Does &quot;Literal&quot; Mean In Rebol&#39;s Model?</source>
      </item>
  </channel>
</rss>
