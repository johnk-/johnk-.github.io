<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The CIRCLED Dialect: Example of the Form</title>
    <link>https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849</link>
    <description>I was looking at this from the emscripten config file:

     ; Right now, either #web or #node (someday #wasm-edge ?)
     ;
     javascript-environment: #web


And I thought to myself: well that&#39;s kind of ugly.  The comment is having to list things that would be more obviously shown by just demonstrating the options:

    javascript-environment: circled [(#web) #node]

It could default to NULL if you circled nothing, but you could use MUST to suggest people needed to select something:

    &gt;&gt; number: must circled [#one #two #three]
    ** Error: MUST requires argument not to be NULL

## It&#39;s Almost *Too* Easy

When it&#39;s this easy, who wouldn&#39;t whip such things up?

    circled: lambda [block [block!] &lt;local&gt; result] [
        parse block [
            result: try thru subparse group! [
                &lt;any&gt; &lt;end&gt; | (fail &quot;Circled Items Must Be Singular&quot;)
            ]
            try [thru group! (fail &quot;Only One Circle&quot;)]
            accept (result)
        ]
    ]

    &gt;&gt; circled [a (b) c]
    == b

    &gt;&gt; circled [a b c]
    ; null

    &gt;&gt; circled [a (b c)]
    ** Error: Circled Items Must Be Singular

    &gt;&gt; circled [(a) b (c)]
    ** Error: Only One Circle

Remarkable plasticity, and I want to see these weapons come to the code golfing field [once they are adequately Rebmooshed](https://www.youtube.com/watch?v=iDKaz1iB9wQ).  :-)

----

This example tipped the balance to where I decided that matching **`&lt;end&gt;`** should be invisible.  Because I wanted a way to synthesize the result while doing the end match.  Writing **`elide &lt;end&gt;`** is possible, but there&#39;s essentially no cases in practice where you don&#39;t want to elide the end.

     &gt;&gt; parse [1 2] [&#39;1 &lt;end&gt; | (fail &quot;Not a 1 followed by the end&quot;)]
     ** Error: Not a 1 followed by the end

     &gt;&gt; parse [1] [&#39;1 &lt;end&gt; | (fail &quot;Not a 1 followed by the end&quot;)]
     == 1

The previous result was evaluating the `&lt;end&gt;` to the input position at that moment of being at the end--so effectively a series at its tail:

     &gt;&gt; parse [1] [&#39;1 &lt;end&gt;]
     == []  ; old behavior...how often would you want this?

If that&#39;s what you actually want (which no one ever did) you can can say **`&lt;end&gt; &lt;here&gt;`**.

     &gt;&gt; parse [1] [&#39;1 &lt;end&gt; &lt;here&gt;]
     == []</description>
    
    <lastBuildDate>Wed, 21 Feb 2024 10:47:05 +0000</lastBuildDate>
    <category>Show &amp; Tell</category>
    <atom:link href="https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The CIRCLED Dialect: Example of the Form</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I was looking at this from the emscripten config file:</p>
<pre><code> ; Right now, either #web or #node (someday #wasm-edge ?)
 ;
 javascript-environment: #web
</code></pre>
<p>And I thought to myself: well that's kind of ugly.  The comment is having to list things that would be more obviously shown by just demonstrating the options:</p>
<pre><code>javascript-environment: circled [(#web) #node]
</code></pre>
<p>It could default to NULL if you circled nothing, but you could use MUST to suggest people needed to select something:</p>
<pre><code>&gt;&gt; number: must circled [#one #two #three]
** Error: MUST requires argument not to be NULL
</code></pre>
<h2>
<a name="its-almost-too-easy-1" class="anchor" href="https://forum.rebol.info#its-almost-too-easy-1"></a>It's Almost <em>Too</em> Easy</h2>
<p>When it's this easy, who wouldn't whip such things up?</p>
<pre><code>circled: lambda [block [block!] &lt;local&gt; result] [
    parse block [
        result: try thru subparse group! [
            &lt;any&gt; &lt;end&gt; | (fail "Circled Items Must Be Singular")
        ]
        try [thru group! (fail "Only One Circle")]
        accept (result)
    ]
]

&gt;&gt; circled [a (b) c]
== b

&gt;&gt; circled [a b c]
; null

&gt;&gt; circled [a (b c)]
** Error: Circled Items Must Be Singular

&gt;&gt; circled [(a) b (c)]
** Error: Only One Circle
</code></pre>
<p>Remarkable plasticity, and I want to see these weapons come to the code golfing field <a href="https://www.youtube.com/watch?v=iDKaz1iB9wQ">once they are adequately Rebmooshed</a>.  <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20"></p>
<hr>
<p>This example tipped the balance to where I decided that matching <strong><code>&lt;end&gt;</code></strong> should be invisible.  Because I wanted a way to synthesize the result while doing the end match.  Writing <strong><code>elide &lt;end&gt;</code></strong> is possible, but there's essentially no cases in practice where you don't want to elide the end.</p>
<pre><code> &gt;&gt; parse [1 2] ['1 &lt;end&gt; | (fail "Not a 1 followed by the end")]
 ** Error: Not a 1 followed by the end

 &gt;&gt; parse [1] ['1 &lt;end&gt; | (fail "Not a 1 followed by the end")]
 == 1
</code></pre>
<p>The previous result was evaluating the <code>&lt;end&gt;</code> to the input position at that moment of being at the end--so effectively a series at its tail:</p>
<pre><code> &gt;&gt; parse [1] ['1 &lt;end&gt;]
 == []  ; old behavior...how often would you want this?
</code></pre>
<p>If that's what you actually want (which no one ever did) you can can say <strong><code>&lt;end&gt; &lt;here&gt;</code></strong>.</p>
<pre><code> &gt;&gt; parse [1] ['1 &lt;end&gt; &lt;here&gt;]
 == []
</code></pre>
          <p><a href="https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849/1</link>
        <pubDate>Sun, 26 Jun 2022 12:06:47 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1849-1</guid>
        <source url="https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849.rss">The CIRCLED Dialect: Example of the Form</source>
      </item>
  </channel>
</rss>
