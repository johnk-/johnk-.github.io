<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The CIRCLED Dialect: Example of the Form</title>
    <link>https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849</link>
    <description>I was looking at this from the emscripten config file:

     ; Right now, either #web or #node (someday #wasm-edge ?)
     ;
     javascript-environment: #web

And I thought to myself: well that&#39;s kind of ugly.  The comment is having to list things that would be more obviously shown by just demonstrating the options:

    javascript-environment: circled [(#web) #node]

Being dialected, it could even have visual hints as to whether many options are allowed, or just one.

    extensions: circled [[
       (javascript)
       (debugger)
        view
        jpeg
       (crypto)
    ]]

Or maybe it uses optional parameters to tell you how many you can have.

    toppings: circled 0..3 [(cheese) tomatoes (pickles) (lettuce) onions]

It could default to NULL if you circled nothing, but you could use MUST to suggest people needed to select something:

    &gt;&gt; number: must circled [#one #two #three]
    ** Error: MUST requires argument not to be NULL

## It&#39;s Almost *Too* Easy

When it&#39;s this easy, who wouldn&#39;t whip such things up?

Ultimately I believe this should work (once PARSE is renamed and there&#39;s [Terminal Parse Alternates](https://forum.rebol.info/t/parsing-alternates-should-must-match-to-end-be-considered/1850)):

    circled: lambda [block [block!]] [
        parse block [return [
             thru into group! [&lt;any&gt; | (fail &quot;Circle One&quot;)]
             maybe [thru group! (fail &quot;Circle One&quot;)]
        ]]
    ]

    &gt;&gt; circled [a (b) c]
    == b

    &gt;&gt; circled [a b c]
    ; null

    &gt;&gt; circled [(a) b (c)]
    ** Error: Circle One

    &gt;&gt; circled [a (b c)]
    ** Error: Circle One

But of course PARSE is called UPARSE right now, and there&#39;s a detail of alternates not being offered in blocks seeking completion before failing...that makes you need `elide &lt;end&gt;`, so for now:

    circled: lambda [block [block!]] [
        uparse block [return [
             thru into group! [&lt;any&gt; elide &lt;end&gt; | (fail &quot;Circle One&quot;)]
             maybe [thru group! (fail &quot;Circle One&quot;)]
        ]]
    ]

It finds one group to extract an element from, and extracts it via INTO.  Then it has a second clause that&#39;s optional--and if it doesn&#39;t match is invisible...but if it *does* match it fails.

Remarkable plasticity, and I want to see these weapons come to the code golfing field.  :-)</description>
    
    <lastBuildDate>Sun, 26 Jun 2022 12:54:54 +0000</lastBuildDate>
    <category>Dialects/DSLs</category>
    <atom:link href="https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The CIRCLED Dialect: Example of the Form</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I was looking at this from the emscripten config file:</p>
<pre><code> ; Right now, either #web or #node (someday #wasm-edge ?)
 ;
 javascript-environment: #web
</code></pre>
<p>And I thought to myself: well that's kind of ugly.  The comment is having to list things that would be more obviously shown by just demonstrating the options:</p>
<pre><code>javascript-environment: circled [(#web) #node]
</code></pre>
<p>Being dialected, it could even have visual hints as to whether many options are allowed, or just one.</p>
<pre><code>extensions: circled [[
   (javascript)
   (debugger)
    view
    jpeg
   (crypto)
]]
</code></pre>
<p>Or maybe it uses optional parameters to tell you how many you can have.</p>
<pre><code>toppings: circled 0..3 [(cheese) tomatoes (pickles) (lettuce) onions]
</code></pre>
<p>It could default to NULL if you circled nothing, but you could use MUST to suggest people needed to select something:</p>
<pre><code>&gt;&gt; number: must circled [#one #two #three]
** Error: MUST requires argument not to be NULL
</code></pre>
<h2>It's Almost <em>Too</em> Easy</h2>
<p>When it's this easy, who wouldn't whip such things up?</p>
<p>Ultimately I believe this should work (once PARSE is renamed and there's <a href="https://forum.rebol.info/t/parsing-alternates-should-must-match-to-end-be-considered/1850">Terminal Parse Alternates</a>):</p>
<pre><code>circled: lambda [block [block!]] [
    parse block [return [
         thru into group! [&lt;any&gt; | (fail "Circle One")]
         maybe [thru group! (fail "Circle One")]
    ]]
]

&gt;&gt; circled [a (b) c]
== b

&gt;&gt; circled [a b c]
; null

&gt;&gt; circled [(a) b (c)]
** Error: Circle One

&gt;&gt; circled [a (b c)]
** Error: Circle One
</code></pre>
<p>But of course PARSE is called UPARSE right now, and there's a detail of alternates not being offered in blocks seeking completion before failing...that makes you need <code>elide &lt;end&gt;</code>, so for now:</p>
<pre><code>circled: lambda [block [block!]] [
    uparse block [return [
         thru into group! [&lt;any&gt; elide &lt;end&gt; | (fail "Circle One")]
         maybe [thru group! (fail "Circle One")]
    ]]
]
</code></pre>
<p>It finds one group to extract an element from, and extracts it via INTO.  Then it has a second clause that's optional--and if it doesn't match is invisible...but if it <em>does</em> match it fails.</p>
<p>Remarkable plasticity, and I want to see these weapons come to the code golfing field.  <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849/1</link>
        <pubDate>Sun, 26 Jun 2022 12:06:47 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1849-1</guid>
        <source url="https://forum.rebol.info/t/the-circled-dialect-example-of-the-form/1849.rss">The CIRCLED Dialect: Example of the Form</source>
      </item>
  </channel>
</rss>
