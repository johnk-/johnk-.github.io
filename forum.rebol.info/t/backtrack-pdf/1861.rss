<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Backtrack: PDF</title>
    <link>https://forum.rebol.info/t/backtrack-pdf/1861</link>
    <description>This backtrack is semi-related to the [Zip Backtrack](https://forum.rebol.info/t/backtrack-zip/1860) and expands on the dialect principle used for the Zip/Build function.

It&#39;s a departure from the Parse-approach to dialecting and one that I took to try to sail a little closer to the way PDFs are structured.

[PDF Experiment](https://gist.github.com/rgchris/884be89a396a7e4259d1197ad172fcf6)

# Create

The `pdf/create` function takes a `block!` and evaluates its contents in a context containing helper functions. The result should be a completely modeled PDF document ready for serialization:

```rebol
doc: pdf/create [
    info [
        title &quot;A Document&quot;
        author &quot;@rgchris&quot;
    ]

    add-page 640x480 [
        ; supported colors:
        ; RGB 0.0.0 - 255.255.255
        ; Gray 0 - 100
        ; CMYK 0.0.0.0 - 100.100.100.100
        ;
        set-fill 0.100.100.0
        set-pen 0.0.0.0

        ; several helper functions are available in page context for
        ; altering the graphics state
        ;
        set-line-width 2

        ; other helper functions apply graphics to the page
        ;
        draw none non-zero [
            rectangle 20x20 600x440
        ]

        draw line none [
            rectangle 530x370 50x50
        ]

        set-dash-array [4 5] 2
        set-line-cap &#39;round

        draw line none [
            move-to 0x0
            curve-to
                as-pair 0 page/height
                as-pair page/width 0
                as-pair page/width page/height
        ]
    ]

    add-page 200x200 [
        set-pen 204.0.0
        set-fill 10
        set-line-width 2

        ; PUSH creates an isolated graphics state in which changes
        ; do not affect subsequent graphics operations
        ;
        push [
            set-pen 80

            draw line none [
                repeat offset 21 [
                    move-to as-pair 0 offset - 1 * 10 0
                    line-to as-pair 200 offset - 1 * -10 + page/height
                ]
            ]
        ]

        ; this retains the red pen from before the PUSH
        ;
        draw line even-odd [
            rectangle 20x85 30x30
        ]
    ]

    ; fonts/text not yet implemented, this is a no-op
    ;
    add-font /Helvetica [
        spec
    ]
]
```

Some functions can be used outside the `pdf/create` context:

```rebol
pdf/add-page doc 400x200 [
    set-pen 10

    draw line non-zero [
        move-to reduce [
            50 page/height - 50
        ]

        line-to 50x100
        line-to 100x100
        line-to 100x50
        close-path
    ]
]
```

The model can be serialized using the `pdf/render` function:

```rebol
probe pdf/render doc
```

# Relevance

The context-sensitive functions give both an appearance of dialecting and the transparency and rigor of being regular functions. I think the function specialization in Ren-C would really make this an efficient and scalable approach.</description>
    
    <lastBuildDate>Tue, 05 Jul 2022 11:39:08 +0000</lastBuildDate>
    <category>R3C</category>
    <atom:link href="https://forum.rebol.info/t/backtrack-pdf/1861.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Backtrack: PDF</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="3" data-topic="1861">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>It's sometimes useful to react based on first impressions (even if one is going to react with different ones later), and so I think it's worth just saying that the dashes seem suboptimal.</p>
</blockquote>
</aside>
<p>I do see the merit to this. My leaning in these experiments is towards idiomatically consistent code as opposed to full-on natural language, it's cheap, scalable, interoperable and largely tracks the PDF command set. If anything, this is the low-level interface—albeit with some methods of convenience—on which dialects/other shortcuts can be built.</p>
<p>A case could also be made for dropping the <code>set-</code> and <code>add-</code> prefixes which are only there as a hint anyway.</p>
          <p><a href="https://forum.rebol.info/t/backtrack-pdf/1861/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/backtrack-pdf/1861/6</link>
        <pubDate>Tue, 05 Jul 2022 11:39:08 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1861-6</guid>
        <source url="https://forum.rebol.info/t/backtrack-pdf/1861.rss">Backtrack: PDF</source>
      </item>
      <item>
        <title>Backtrack: PDF</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="gchiu" data-post="4" data-topic="1861" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/gchiu/40/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<p>What exactly is 'pdf/render' returning?</p>
</blockquote>
</aside>
<p>A PDF.</p>
<p>It's stored as an object tree that can be modified prior to serialization.</p>
          <p><a href="https://forum.rebol.info/t/backtrack-pdf/1861/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/backtrack-pdf/1861/5</link>
        <pubDate>Tue, 05 Jul 2022 11:04:41 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1861-5</guid>
        <source url="https://forum.rebol.info/t/backtrack-pdf/1861.rss">Backtrack: PDF</source>
      </item>
      <item>
        <title>Backtrack: PDF</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>What exactly is 'pdf/render' returning?</p>
          <p><a href="https://forum.rebol.info/t/backtrack-pdf/1861/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/backtrack-pdf/1861/4</link>
        <pubDate>Tue, 05 Jul 2022 10:43:27 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1861-4</guid>
        <source url="https://forum.rebol.info/t/backtrack-pdf/1861.rss">Backtrack: PDF</source>
      </item>
      <item>
        <title>Backtrack: PDF</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="rgchris" data-post="1" data-topic="1861">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<pre><code class="lang-auto">   add-page 640x480 [
        set-fill 0.100.100.0
        set-pen 0.0.0.0
        set-line-width 2
        draw none non-zero [
            rectangle 20x20 600x440
        ]
        draw line none [
            rectangle 530x370 50x50
        ]
        ...
</code></pre>
</blockquote>
</aside>
<p>It's sometimes useful to react based on first impressions (even if one is going to react with different ones later), and so I think it's worth just saying that the dashes seem suboptimal.</p>
<p>This does create a bit of a pickle when you're mixing DO code with a dialect, where something like SET has a meaning already.  It's like you can't have it both ways.</p>
<p>One thing I did in UPARSE was I distinguished the non-dialected function calls with a terminal slash, making use of the BLANK!-ended paths:</p>
<pre><code>&gt;&gt; if uparse [1020] [i: negate/ integer!] [print ["Success, negated is" i]]
Success, negated is -1020
</code></pre>
<p>This way, you can still have parameters interpreted via UPARSE (including not making the function call if the rule-based parameters can't all be fulfilled by matches).</p>
<p>So that adds another thought point to the standard of throwing in groups.</p>
<p>I'd definitely say when it comes to dialects that pushing on the words-separated-by-spaces should be a strong instinct (and here's a place that I've been influenced by your insistence...)</p>
<pre><code> add page 640x480 [
     set fill 0.100.100.0
     set pen 0.0.0.0
     set line-width 2
     draw none non-zero [  ; non obvious to the layperson what this means
         rectangle 20x20 600x440
     ]
     draw line none [  ; ...or this parameterization
         rectangle 530x370 50x50
     ]
     ...
</code></pre>
<p>(I can look up what those things mean, just trying to ask if there's some expression there that I'd look at and instinctively go "oh, I know what that is")</p>
          <p><a href="https://forum.rebol.info/t/backtrack-pdf/1861/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/backtrack-pdf/1861/3</link>
        <pubDate>Tue, 05 Jul 2022 01:21:43 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1861-3</guid>
        <source url="https://forum.rebol.info/t/backtrack-pdf/1861.rss">Backtrack: PDF</source>
      </item>
      <item>
        <title>Backtrack: PDF</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="rgchris" data-post="1" data-topic="1861">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/rgchris/40/14_2.png" class="avatar"> rgchris:</div>
<blockquote>
<p>The context-sensitive functions give both an appearance of dialecting and the transparency and rigor of being regular functions. I think the function specialization in Ren-C would really make this an efficient and scalable approach.</p>
</blockquote>
</aside>
<p>Likely relevant is that I'm pursuing "fully pluggable" evaluators; where you can reuse as much or little of the base evaluator behaviors in a dialect as you like.</p>
<p>This is much like how UPARSE is wired together with a <a href="https://forum.rebol.info/t/rebol-and-scopes-well-why-not/1751">map of COMBINATORs</a>.  There are generic ones (like the combinator for WORD! or GROUP! or SET-WORD!).  Then more specific ones, like for SOME and INTO.  You can override them or replace them entirely, and inherit behaviors for your own derived combinators (with some limitations, an overridden combinator cannot currently delegate variadically to a combinator with a different parameterization than its own...not saying it's impossible, but you can't do it at this moment).</p>
<p>By analogy, this would let you customize the base experience of running "DO" code as a map of EVALUATORs.</p>
<p>So if you wish to have something that's <em>"a lot like plain DO, except PATH!s act differently"</em> then you can run a block with a new mapping for PATH! =&gt; an evaluator that you write.  (That's something that Redbol needs, because the current compatibility method is bad and is holding Ren-C back.)</p>
<p>In the past, people have tried to accomplish evaluator re-use by looping and using DO/NEXT, maybe intervening a bit on steps they feel like tweaking.  I've grumbled that I don't think that's particularly great, because it enforces DO being an amnesiac that can't build up state (like new LET variables):</p>
<p><a href="https://forum.rebol.info/t/pivotal-design-question-is-evaluator-state-just-a-block/1496" class="inline-onebox">Pivotal Design Question: Is Evaluator State Just A Block?</a></p>
<p>There still needs to be binding, and I've said quite a bit on that, with a hard-core belief that we <em>do</em> need <a href="https://forum.rebol.info/t/rebol-and-scopes-well-why-not/1751">scopes and string interpolation</a>.  But I think some of these dialect behavior issues may be best dealt with via parameterized evaluation, vs. something more intended for users to provide variables to those dialects.</p>
          <p><a href="https://forum.rebol.info/t/backtrack-pdf/1861/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/backtrack-pdf/1861/2</link>
        <pubDate>Mon, 04 Jul 2022 21:40:25 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1861-2</guid>
        <source url="https://forum.rebol.info/t/backtrack-pdf/1861.rss">Backtrack: PDF</source>
      </item>
      <item>
        <title>Backtrack: PDF</title>
        <dc:creator><![CDATA[rgchris]]></dc:creator>
        <description><![CDATA[
            <p>This backtrack is semi-related to the <a href="https://forum.rebol.info/t/backtrack-zip/1860">Zip Backtrack</a> and expands on the dialect principle used for the Zip/Build function.</p>
<p>It's a departure from the Parse-approach to dialecting and one that I took to try to sail a little closer to the way PDFs are structured.</p>
<p><a href="https://gist.github.com/rgchris/884be89a396a7e4259d1197ad172fcf6">PDF Experiment</a></p>
<h1>Create</h1>
<p>The <code>pdf/create</code> function takes a <code>block!</code> and evaluates its contents in a context containing helper functions. The result should be a completely modeled PDF document ready for serialization:</p>
<pre><code class="lang-auto">doc: pdf/create [
    info [
        title "A Document"
        author "@rgchris"
    ]

    add-page 640x480 [
        ; supported colors:
        ; RGB 0.0.0 - 255.255.255
        ; Gray 0 - 100
        ; CMYK 0.0.0.0 - 100.100.100.100
        ;
        set-fill 0.100.100.0
        set-pen 0.0.0.0

        ; several helper functions are available in page context for
        ; altering the graphics state
        ;
        set-line-width 2

        ; other helper functions apply graphics to the page
        ;
        draw none non-zero [
            rectangle 20x20 600x440
        ]

        draw line none [
            rectangle 530x370 50x50
        ]

        set-dash-array [4 5] 2
        set-line-cap 'round

        draw line none [
            move-to 0x0
            curve-to
                as-pair 0 page/height
                as-pair page/width 0
                as-pair page/width page/height
        ]
    ]

    add-page 200x200 [
        set-pen 204.0.0
        set-fill 10
        set-line-width 2

        ; PUSH creates an isolated graphics state in which changes
        ; do not affect subsequent graphics operations
        ;
        push [
            set-pen 80

            draw line none [
                repeat offset 21 [
                    move-to as-pair 0 offset - 1 * 10 0
                    line-to as-pair 200 offset - 1 * -10 + page/height
                ]
            ]
        ]

        ; this retains the red pen from before the PUSH
        ;
        draw line even-odd [
            rectangle 20x85 30x30
        ]
    ]

    ; fonts/text not yet implemented, this is a no-op
    ;
    add-font /Helvetica [
        spec
    ]
]
</code></pre>
<p>Some functions can be used outside the <code>pdf/create</code> context:</p>
<pre><code class="lang-auto">pdf/add-page doc 400x200 [
    set-pen 10

    draw line non-zero [
        move-to reduce [
            50 page/height - 50
        ]

        line-to 50x100
        line-to 100x100
        line-to 100x50
        close-path
    ]
]
</code></pre>
<p>The model can be serialized using the <code>pdf/render</code> function:</p>
<pre><code class="lang-auto">probe pdf/render doc
</code></pre>
<h1>Relevance</h1>
<p>The context-sensitive functions give both an appearance of dialecting and the transparency and rigor of being regular functions. I think the function specialization in Ren-C would really make this an efficient and scalable approach.</p>
          <p><a href="https://forum.rebol.info/t/backtrack-pdf/1861/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/backtrack-pdf/1861/1</link>
        <pubDate>Mon, 04 Jul 2022 20:51:32 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1861-1</guid>
        <source url="https://forum.rebol.info/t/backtrack-pdf/1861.rss">Backtrack: PDF</source>
      </item>
  </channel>
</rss>
