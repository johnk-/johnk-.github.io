<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Red&#39;s Take on String Interpolation</title>
    <link>https://forum.rebol.info/t/reds-take-on-string-interpolation/2121</link>
    <description>[quote=&quot;hostilefork, post:8, topic:587&quot;]
**I&#39;ve started to feel that supporting string interpolation is fairly important.**
[/quote]

So Red is trying to attack string interpolation [via a macro](https://gitter.im/red/red?at=60d4df778a40b1172827e4ff), which apparently can happen &quot;before word binding&quot; in some way.

That kind of ties their hands representationally because macros always are signaled by ISSUE!s, so the callsites that want to use string interpolation must have a macro.

    &gt;&gt; probe expand-directives [#composite {&quot;(player)&quot; &quot;(vfile)&quot; --audio-file &quot;(afile)&quot;}]
    [rejoin [{&quot;} (player) {&quot; &quot;} (vfile) {&quot; --audio-file &quot;} (afile) {&quot;}]]

[Boris&#39;s remark about the usefulness of being able to do string interpolation](https://gitter.im/red/red?at=60d636eb8a40b117282ae530) in Rebol sums up probably how most of those who reject the idea at first would eventually come around:

&gt; can add that first time I saw Gregg&#39;s `#composite` my reaction was &quot;why would we ever want that?&quot;. But then with every `print` or `rejoin` I was using in my code I had this thought &quot;what if..&quot;. Then I started using my experimental implementation, and after some time I believe it&#39;s a total must have.

**But I still think this should be approached as a binding question.**   It&#39;s very difficult to play with bricks in the &quot;native&quot; way that Rebol has been and overlay a *predictable* and useful idea of a &quot;binding environment&quot;.  And keeping an open mind about it is necessary.</description>
    
    <lastBuildDate>Tue, 16 Jan 2024 09:23:00 +0000</lastBuildDate>
    <category>Redbol</category>
    <atom:link href="https://forum.rebol.info/t/reds-take-on-string-interpolation/2121.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Red&#39;s Take on String Interpolation</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="2121">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Red is continuing their investment in a kind of string interpolation:</p>
</blockquote>
</aside>
<p>There's a <a href="https://github.com/red/red/pull/5085">pull request</a> regarding this, where they give some good bad examples:</p>
<blockquote>
<p>Here are just a few common examples written using <code>rejoin</code> function:</p>
<pre><code>avcmd: rejoin [{"} player {" "} vfile {" --audio-file "} afile {"}]

print rejoin ["Download OK: '" remote 
    "' [" info/Content-Type ", " info/Content-Length " bytes]"]

do make error! rejoin [token1 " cannot follow " token2 
     " in the " name " part of " mold .mask]
</code></pre>
<p>Try to look at these expressions and visualize how the resulting string will look like, and if I've got all spaces and quotes right.  Not a human task, eh?</p>
</blockquote>
          <p><a href="https://forum.rebol.info/t/reds-take-on-string-interpolation/2121/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/reds-take-on-string-interpolation/2121/3</link>
        <pubDate>Fri, 08 Jul 2022 05:10:03 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2121-3</guid>
        <source url="https://forum.rebol.info/t/reds-take-on-string-interpolation/2121.rss">Red&#39;s Take on String Interpolation</source>
      </item>
      <item>
        <title>Red&#39;s Take on String Interpolation</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Red is continuing their investment in a kind of string interpolation:</p>
<p><a href="https://github.com/red/red/pull/5085" class="inline-onebox">FEAT: String interpolation by hiiamboris · Pull Request #5085 · red/red · GitHub</a></p>
<p>They are defaulting to parentheses instead of $, and escaping parentheses with backslash <code>(\on the inside, curiously\)</code></p>
<p>It's worth thinking about what a good default is, though ultimately I think it should be customizable (as with historical REWORD).  I had been considering plain parentheses for the same reasons at first, but leaned to $ just because of how popular it is in other languages for interpolation.</p>
<p>My concept is different because it is not a hardcoded preprocessor behavior, but making binding information available on strings as a map of words to values.  See <a href="https://forum.rebol.info/t/rebol-and-scopes-well-why-not/1751">"Rebol and Scopes: Well, why not?"</a> for thoughts on that distinction and the challenges it presents.</p>
          <p><a href="https://forum.rebol.info/t/reds-take-on-string-interpolation/2121/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/reds-take-on-string-interpolation/2121/2</link>
        <pubDate>Wed, 23 Feb 2022 19:18:05 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2121-2</guid>
        <source url="https://forum.rebol.info/t/reds-take-on-string-interpolation/2121.rss">Red&#39;s Take on String Interpolation</source>
      </item>
      <item>
        <title>Red&#39;s Take on String Interpolation</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="8" data-topic="587">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"><a href="https://forum.rebol.info/t/could-strings-have-context/587/8">Could strings have context?</a>
</div>
<blockquote>
<p><strong>I've started to feel that supporting string interpolation is fairly important.</strong></p>
</blockquote>
</aside>
<p>So Red is trying to attack string interpolation <a href="https://gitter.im/red/red?at=60d4df778a40b1172827e4ff">via a macro</a>, which apparently can happen "before word binding" in some way.</p>
<p>That kind of ties their hands representationally because macros always are signaled by ISSUE!s, so the callsites that want to use string interpolation must have a macro.</p>
<pre><code>&gt;&gt; probe expand-directives [#composite {"(player)" "(vfile)" --audio-file "(afile)"}]
[rejoin [{"} (player) {" "} (vfile) {" --audio-file "} (afile) {"}]]
</code></pre>
<p><a href="https://gitter.im/red/red?at=60d636eb8a40b117282ae530">Boris's remark about the usefulness of being able to do string interpolation</a> in Rebol sums up probably how most of those who reject the idea at first would eventually come around:</p>
<blockquote>
<p>can add that first time I saw Gregg's <code>#composite</code> my reaction was "why would we ever want that?". But then with every <code>print</code> or <code>rejoin</code> I was using in my code I had this thought "what if..". Then I started using my experimental implementation, and after some time I believe it's a total must have.</p>
</blockquote>
<p><strong>But I still think this should be approached as a binding question.</strong>   It's very difficult to play with bricks in the "native" way that Rebol has been and overlay a <em>predictable</em> and useful idea of a "binding environment".  And keeping an open mind about it is necessary.</p>
          <p><a href="https://forum.rebol.info/t/reds-take-on-string-interpolation/2121/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/reds-take-on-string-interpolation/2121/1</link>
        <pubDate>Sat, 26 Jun 2021 04:06:20 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2121-1</guid>
        <source url="https://forum.rebol.info/t/reds-take-on-string-interpolation/2121.rss">Red&#39;s Take on String Interpolation</source>
      </item>
  </channel>
</rss>
