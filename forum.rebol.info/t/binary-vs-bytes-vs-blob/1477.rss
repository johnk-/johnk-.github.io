<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>BINARY! vs. BYTES! vs BLOB!</title>
    <link>https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477</link>
    <description>It has occurred to me that it might be nice to have a datatype which represents a string of bits, where you don&#39;t have to have exactly multiples of 8 of them...and where positions were on a bit-level.

If there were such a type, it might be called BITS! to not conflict...but either way it does point out that BINARY! is kind of a misleading name.

Since today&#39;s BINARY! is a series managed in multiples of 8 bits, wouldn&#39;t it be better to call it BYTES! ?

I&#39;ll add that I&#39;m kind of leaning toward saying that the representation be **${FFFF}** or **$&quot;FFFF&quot;** as opposed to using **&amp;** to replace **#**.   This is more of a nod to historical $ sign for hex... leaves &amp; free for other applications...and gives the ability to put characters in quoted strings cleanly, like:
 
    rebElide(&quot;some-char: #{c}&quot;);

Although that particular case can be done without delimiters as **#c** ... but we need to work through what is and isn&#39;t legal to do without quotes or braces.</description>
    
    <lastBuildDate>Mon, 09 Sep 2024 08:09:25 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>BINARY! vs. BYTES! vs BLOB!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="3" data-topic="1477">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>But if you want to talk about trends out and about in the world, it seems that BLOB! is pretty common for data of arbitrary content.</p>
</blockquote>
</aside>
<p>So the number of reasons to call the datatype BLOB! has gone up.</p>
<p>With the <a href="https://forum.rebol.info/t/any-array-vs-any-list/1384/9">distinction between LIST! and array</a>, we now talk about a Rebol "List" as <em>having</em> an array (and an index, and a binding)... not <em>being</em> an array.</p>
<ul>
<li>
<p>Not only is choosing the more "nebulous" term better for suggesting its weird additional properties... but the shorter term is friendlier.</p>
</li>
<li>
<p>The terminology helps users, but also greatly helps the implementation be clear--you know what an Array is (a "Flex"-derived flexible data Array, implemented via "Stub") and know it as distinct from a List (a "Cell")</p>
</li>
</ul>
<p>We stand to reap a similar benefit by using Binary inside the implementation for the data store (the "Flex"-derived Binary), and calling the Cell a BLOB!</p>
<p>Giving users a shorter name that doesn't trip over the loaded term of "binary" seems like a clear win to me.</p>
          <p><a href="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477/4</link>
        <pubDate>Mon, 09 Sep 2024 07:38:13 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1477-4</guid>
        <source url="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477.rss">BINARY! vs. BYTES! vs BLOB!</source>
      </item>
      <item>
        <title>BINARY! vs. BYTES! vs BLOB!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="1477">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Since today's BINARY! is a series managed in multiples of 8 bits, wouldn't it be better to call it BYTES! ?</p>
</blockquote>
</aside>
<p>I'm going to bring this back up, because binary is a very overused term.</p>
<p>If I said "Hey, can you get me the binary for that?" I'd generally be asking for an <em>executable format file</em>.</p>
<p>The common language use of binary is to say "one of two options".  One might in this context imagine that the BINARY! type was actually LOGIC!.</p>
<p>And of course it can mean base-2, e.g. hexadecimal "FE" is "11111110" in binary</p>
<p><strong>With all the other renamings, I don't think it would hurt to have a better name for BINARY!</strong>  Redbol can of course stick with that and PAREN! and whatever else.</p>
<hr>
<p>I actually think BYTES! is not bad.</p>
<ul>
<li>
<p>It's plural.</p>
</li>
<li>
<p>It's shorter.</p>
</li>
<li>
<p>It's unambiguous (well, on today's machines; a "byte" could be 7 bits or otherwise on old machines.  But that's not what anyone would mean today--while the confusions over binary are still very present in use)</p>
</li>
<li>
<p>It directly mentions the granularity at which you can step through, insert, or remove items--you can manipulate it on the byte level, and only have round numbers of 8-bit bytes</p>
</li>
</ul>
<p>But if you want to talk about trends out and about in the world, it seems that BLOB! is pretty common for data of arbitrary content.</p>
<ul>
<li>
<p>It's one more character shorter.</p>
</li>
<li>
<p>It's what <a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob">JavaScript has decided to call such things</a>.</p>
</li>
<li>
<p>A lot of SQLs call it this too.</p>
</li>
</ul>
<p>I can't think of too many other obvious possibilities.  DATA! is really too generic.  CDATA! is an XML-ism that deserves to die along with the rest of XML.</p>
<p>Anyone have a visceral feeling about BLOB! vs. BYTES! vs. your-suggestion here?</p>
          <p><a href="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477/3</link>
        <pubDate>Sun, 03 Jul 2022 03:17:02 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1477-3</guid>
        <source url="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477.rss">BINARY! vs. BYTES! vs BLOB!</source>
      </item>
      <item>
        <title>BINARY! vs. BYTES! vs BLOB!</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>In COBOL the BINARY got replaced by COMPUTATIONAL or  COMP.</p>
<p>It is indeed a little remarkable that there is not an arbitrary length bits field. Just enough bits for all flags used. But then again the whole memory is divided in words of some bytes length.</p>
<p>I think I do remember the $ hex notation being used....</p>
          <p><a href="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477/2</link>
        <pubDate>Wed, 27 Jan 2021 20:20:12 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1477-2</guid>
        <source url="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477.rss">BINARY! vs. BYTES! vs BLOB!</source>
      </item>
      <item>
        <title>BINARY! vs. BYTES! vs BLOB!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>It has occurred to me that it might be nice to have a datatype which represents a string of bits, where you don't have to have exactly multiples of 8 of them...and where positions were on a bit-level.</p>
<p>If there were such a type, it might be called BITS! to not conflict...but either way it does point out that BINARY! is kind of a misleading name.</p>
<p>Since today's BINARY! is a series managed in multiples of 8 bits, wouldn't it be better to call it BYTES! ?</p>
<p>I'll add that I'm kind of leaning toward saying that the representation be <strong>${FFFF}</strong> or <strong>$"FFFF"</strong> as opposed to using <strong>&amp;</strong> to replace <strong>#</strong>.   This is more of a nod to historical $ sign for hex... leaves &amp; free for other applications...and gives the ability to put characters in quoted strings cleanly, like:</p>
<pre><code>rebElide("some-char: #{c}");
</code></pre>
<p>Although that particular case can be done without delimiters as <strong><span class="hashtag">#c</span></strong> ... but we need to work through what is and isn't legal to do without quotes or braces.</p>
          <p><a href="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477/1</link>
        <pubDate>Wed, 27 Jan 2021 00:47:03 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1477-1</guid>
        <source url="https://forum.rebol.info/t/binary-vs-bytes-vs-blob/1477.rss">BINARY! vs. BYTES! vs BLOB!</source>
      </item>
  </channel>
</rss>
