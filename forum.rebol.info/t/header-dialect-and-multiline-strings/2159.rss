<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Header dialect and multiline strings</title>
    <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159</link>
    <description>I&#39;ve been reading the threads about multiline strings and using {} for arrays, and I&#39;m thinking that the header is going to look rather messy given that&#39;s it&#39;s not uncommon to have multiline statements there.

    Rebol [
        Title: &quot;Your module title here&quot;
        Type: module
        Name: your-module
        Rights: -{
            Copyright 2012 REBOL Technologies
            Copyright 2017-2021 Ren-C Open Source Contributors
        }-
        License: -{
            Licensed under the Apache License, Version 2.0
            See: http://www.apache.org/licenses/LICENSE-2.0
        }-
        Description: \{
           Weirdly this does not look as good, despite dropping a character.
           
                printf(&quot;The char is } and it need not be escaped\n&quot;);

           So that&#39;s good.  And here we can do \n\n\n for escaped lines.
       }\
    ]

As an alternative I quite like the way yaml is written, it&#39;s very clean without a lot of funny distracting escape characters.  Can we consider using a yaml dialect for the header?

    Rebol -{
        Title: Your module title here
        Type: module
        Name: your-module

        Rights: |
            Copyright 2012 REBOL Technologies
            Copyright 2017-2021 Ren-C Open Source Contributors

        License: |
            Licensed under the Apache License, Version 2.0
            See: http://www.apache.org/licenses/LICENSE-2.0

        Description: |
           This would be YAML-based.
           
                printf(&quot;The char is } and it need not be escaped\n&quot;);

           So that&#39;s good.  And here we can do \n\n\n for escaped lines.
    }-</description>
    
    <lastBuildDate>Fri, 01 Mar 2024 21:08:33 +0000</lastBuildDate>
    <category>Modules</category>
    <atom:link href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Header dialect and multiline strings</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Maybe I shouldn't have called it YAML but we already have dialects that look a bit like this.. see <strong><a href="http://www.rebol.net/docs/makedoc.html">make-doc</a></strong>, so there's precedent.</p>
          <p><a href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/8</link>
        <pubDate>Fri, 01 Mar 2024 20:53:37 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2159-8</guid>
        <source url="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss">Header dialect and multiline strings</source>
      </item>
      <item>
        <title>Header dialect and multiline strings</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="6" data-topic="2159">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p><a href="https://github.com/metaeducation/ren-c/blob/852d9fb003c7a380323082c5b8c6a9148900ce2f/tools/make-librebol.r#L239">it's doing a great job in CSCAPE...</a></p>
</blockquote>
</aside>
<p>Hmm, this is interesting; I hadn’t quite realised this is already used. It does make me nervous though, since it means we can no longer use our usual tools for structuring programs.</p>
<p>(If I may philosophise for a moment… I feel there’s a big, gaping hole in my understanding of how we decide ‘what Rebol syntax is’, so to speak. Perhaps my caution around sigils and TYPE-BLOCK!s are a manifestation of that hole, as is this. I’ll make a new thread about it if I can figure out any clearer way to articulate my concerns.)</p>
<aside class="quote no-group" data-username="hostilefork" data-post="6" data-topic="2159">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Rebol has a lot going for it representationally, but losing plain braced strings does hurt a bit... when they were already a little ugly.</p>
</blockquote>
</aside>
<p>Losing plain braced strings does hurt, indeed… but compared to all the messiness YAML brings, it’s a very minor thing.</p>
          <p><a href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/7</link>
        <pubDate>Fri, 01 Mar 2024 12:53:19 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2159-7</guid>
        <source url="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss">Header dialect and multiline strings</source>
      </item>
      <item>
        <title>Header dialect and multiline strings</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="5" data-topic="2159">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>Well… insofar as I understand the concept, dialecting in Rebol amounts to reusing the constructs of the language in new ways, to create <a href="https://drdobbs.com/embedded-systems/the-rebol-scripting-language/184404172">context-dependent sublanguages</a> for solving specific problems</p>
</blockquote>
</aside>
<p>You're right that the principal win comes from accepting the parts in the box, and parsing BLOCK!s (not kicking into a custom text parser for your language and parsing TEXT!s...)</p>
<p>But the new binding model does make it more feasible to mix and match, where your mini-language does evaluations with escaped bits that LOAD and bind as code.  And <a href="https://github.com/metaeducation/ren-c/blob/852d9fb003c7a380323082c5b8c6a9148900ce2f/tools/make-librebol.r#L239">it's doing a great job in CSCAPE...</a></p>
<p>So I think we should lean into empowering it where possible, even if it isn't the primary pitch.</p>
<aside class="quote no-group" data-username="bradrn" data-post="5" data-topic="2159">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>The alternative is putting stuff in strings, which immediately loses all the advantages of Rebol’s rich set of datatypes.</p>
</blockquote>
</aside>
<p>So the concept I was thinking was that it would be possible to detect Rebol types, along the lines of:</p>
<pre><code>&gt;&gt; obj: yaml.load/rebolish -{
       Title: String " With } No { Delimiters "
       Description: |
           YAML lets you get away with this kind of thing.
           You don't } worry " about ' escaping
       Modes: [read write]
   }- 
== make object! [
    Title: -{String " With } No { Delimiters "}-
    Description: -{
        YAML lets you get away with this kind of thing.
        You don't } worry " about ' escaping
    }-
    Modes: [read write]
 ]

&gt;&gt; type of obj.Modes
== &amp;[block!]
</code></pre>
<p>Basically if it saw something like a bracket at the beginning of the content for a value, it would kick over into the Rebol interpretation...if you specified you wanted that mode of interpretation.</p>
<aside class="quote no-group" data-username="bradrn" data-post="3" data-topic="2159">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>If anything, Rebol strikes me as being a lot better than YAML. I often see people complaining about how confusing YAML is to read and write; there’s no need to import that confusion into Rebol when we already have perfectly good ways of writing data structures.</p>
</blockquote>
</aside>
<p>Rebol has a lot going for it representationally, but losing plain braced strings does hurt a bit... when they were already a little ugly.</p>
<p>But maybe that's just life.  It's hard to say when something first pops up if you'll get used to it or not... so I think it needs to be given time.</p>
          <p><a href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/6</link>
        <pubDate>Fri, 01 Mar 2024 11:07:19 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2159-6</guid>
        <source url="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss">Header dialect and multiline strings</source>
      </item>
      <item>
        <title>Header dialect and multiline strings</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="gchiu" data-post="4" data-topic="2159" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/gchiu/48/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<p>Given that it would be a dialect we could relax the rules as much as we want. Dialecting is one of Rebol's strengths.</p>
</blockquote>
</aside>
<p>Well… insofar as I understand the concept, dialecting in Rebol amounts to reusing the constructs of the language in new ways, to create <a href="https://drdobbs.com/embedded-systems/the-rebol-scripting-language/184404172">context-dependent sublanguages</a> for solving specific problems. As <a class="mention" href="https://forum.rebol.info/u/hostilefork">@hostilefork</a> put it:</p>
<aside class="quote no-group quote-modified" data-username="hostilefork" data-post="5" data-topic="2136">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"><a href="https://forum.rebol.info/t/fundamental-distinguishing-features-of-rebol/2136/5">Fundamental distinguishing features of Rebol</a></div>
<blockquote>
<p>It's a spectrum … Dialecting is that reliance on the types and the ordering to cue you into the semantics.</p>
</blockquote>
</aside>
<p>This is quite a different concept to ‘create your own totally separate language’. Rather, dialects are about giving different semantics to things which already look like Rebol programs. You can use dialects to help implement other languages (e.g. the <a href="https://github.com/hostilefork/rebol-whitespacers">Whitespace interpreter</a>), but it’s not the same thing.</p>
<p>So, if you wanted to integrate YAML into Rebol, the natural way to do that is to add YAML as a new literal syntax, which you can then use as the basis for dialects. But I’ve already explained why that’s a bad idea. The alternative is putting stuff in strings, which immediately loses all the advantages of Rebol’s rich set of datatypes.</p>
          <p><a href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/5</link>
        <pubDate>Fri, 01 Mar 2024 04:56:35 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2159-5</guid>
        <source url="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss">Header dialect and multiline strings</source>
      </item>
      <item>
        <title>Header dialect and multiline strings</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Given that it would be a dialect we could relax the rules as much as we want. Dialecting is one of Rebol's strengths.</p>
          <p><a href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/4</link>
        <pubDate>Fri, 01 Mar 2024 04:42:47 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2159-4</guid>
        <source url="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss">Header dialect and multiline strings</source>
      </item>
      <item>
        <title>Header dialect and multiline strings</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="2159">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Putting a YAML parser in the box, and having it available to call it up in places where Rebol is weak by comparison, is actually a pretty compelling idea.</p>
</blockquote>
</aside>
<p>Not sure I agree. YAML syntax in many ways strikes me as almost the opposite of Rebol conventions, for instance:</p>
<ul>
<li>It’s indentation-sensitive</li>
<li>Its syntax is fairly rigid, not free-form at all</li>
<li>Each data structure can be written in numerous different ways</li>
<li>Parser needs to do a lot of work, e.g. to resolve cross-references between elements</li>
</ul>
<p>If anything, Rebol strikes me as being a lot better than YAML. I often see people complaining about how confusing YAML is to read and write; there’s no need to import that confusion into Rebol when we already have perfectly good ways of writing data structures.</p>
          <p><a href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/3</link>
        <pubDate>Fri, 01 Mar 2024 00:13:00 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2159-3</guid>
        <source url="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss">Header dialect and multiline strings</source>
      </item>
      <item>
        <title>Header dialect and multiline strings</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>So the header would be scanned and loaded as Rebol, from the YAML.  Hmm.</p>
<p>Putting a YAML parser in the box, and having it available to call it up in places where Rebol is weak by comparison, is actually a pretty compelling idea.</p>
<p>YAML's success shows that the Rebol-inspired JSON isn't always a fit, and even with FENCE! we'll probably not match up in some cases.</p>
<p>The parser could have options to assume that if you said <strong><code>field: [a b c]</code></strong> or similar, to treat that as a BLOCK! instead of raw text.  (Though it should be able to do "pure Yaml" if that's what people want.)</p>
<p>It's a bit of a sacrilege in the "all is Rebol" groupthink, but we should take this idea seriously.</p>
          <p><a href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/2</link>
        <pubDate>Thu, 29 Feb 2024 15:16:16 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2159-2</guid>
        <source url="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss">Header dialect and multiline strings</source>
      </item>
      <item>
        <title>Header dialect and multiline strings</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>I've been reading the threads about multiline strings and using {} for arrays, and I'm thinking that the header is going to look rather messy given that's it's not uncommon to have multiline statements there.</p>
<pre><code>Rebol [
    Title: "Your module title here"
    Type: module
    Name: your-module
    Rights: -{
        Copyright 2012 REBOL Technologies
        Copyright 2017-2021 Ren-C Open Source Contributors
    }-
    License: -{
        Licensed under the Apache License, Version 2.0
        See: http://www.apache.org/licenses/LICENSE-2.0
    }-
    Description: \{
       Weirdly this does not look as good, despite dropping a character.
       
            printf("The char is } and it need not be escaped\n");

       So that's good.  And here we can do \n\n\n for escaped lines.
   }\
]
</code></pre>
<p>As an alternative I quite like the way yaml is written, it's very clean without a lot of funny distracting escape characters.  Can we consider using a yaml dialect for the header?</p>
<pre><code>Rebol -{
    Title: Your module title here
    Type: module
    Name: your-module

    Rights: |
        Copyright 2012 REBOL Technologies
        Copyright 2017-2021 Ren-C Open Source Contributors

    License: |
        Licensed under the Apache License, Version 2.0
        See: http://www.apache.org/licenses/LICENSE-2.0

    Description: |
       This would be YAML-based.
       
            printf("The char is } and it need not be escaped\n");

       So that's good.  And here we can do \n\n\n for escaped lines.
}-
</code></pre>
          <p><a href="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159/1</link>
        <pubDate>Wed, 28 Feb 2024 07:17:13 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2159-1</guid>
        <source url="https://forum.rebol.info/t/header-dialect-and-multiline-strings/2159.rss">Header dialect and multiline strings</source>
      </item>
  </channel>
</rss>
