<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What to Call Lone Tilde (~)</title>
    <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216</link>
    <description>So this little guy doesn&#39;t have a name:

![1896_tilde|250x250, 50%](upload://lPs2dyWS6kN1weGeGoU7SyMbh5a.png)

Yes it&#39;s a &quot;tilde&quot;, but if there&#39;s a TILDE definition I think it should be talking about the character.

    &gt;&gt; print [&quot;name&quot; tilde &quot;me&quot;]
    name ~ me

    &gt;&gt; char? tilde
    == ~true~  ; anti

We&#39;re talking about something that evaluates to the antiform of blank (the contents of an unset variable):

    &gt;&gt; eval [~]
    == ~  ; anti

## QUASI-BLANK?

It&#39;s an *accurate* name... 

    &gt;&gt; quasi _
    == ~

But if you&#39;re going to be testing for them easily in a block, you want something shorter.

Carl went on a bit of a bizarre track by deciding that #[none] was unweildy in blocks, and he liked zeros better... single characters... so [he started using zeros instead of nones, and made ZERO? accept everything](http://www.rebol.net/r3blogs/0112.html).

&gt; *I started using a lot more zeros in my data structures, especially those that had to be loaded from a file or database, because I knew that zero loaded more efficiently than NONE (no hash was required).*
&gt;
&gt; *For example, where I would once create REBOL-stored DB records like this:*
&gt;
&gt;     [&quot;name&quot; none none]
&gt;
&gt; *I would use:*
&gt;
&gt;     [&quot;name&quot; 0 0]
&gt;
&gt; *Because using 0 does not require a hash-and-compare operation (as does the word NONE) nor does it require binding (as does the value NONE)... nor is it the long-form literal #[none], that seems just a bit too cumbersome to my coding style.*

You&#39;re getting a lot of single-character choices in Ren-C, and which one you use kind of depends on what you want.

QUASI-BLANK is as ornery as it can be while being legal to appear in a block.  e.g. if you try to ask it something like EMPTY? you&#39;ll get an error:

    &gt;&gt; block: [&quot;name&quot; ~ ~]

    &gt;&gt; empty? second block
    ** Script Error: empty? expects [blank! any-series? object! port! bitset! map!]
          for its series argument

If you use BLANK! you have not just a different look, but more routines that are willing to think of it as being some kind of emptiness:

    &gt;&gt; block: [&quot;name&quot; _ _]

    &gt;&gt; empty? second block
    == ~true~  ; anti

There&#39;s also #, which is effectively the zero character.

    &gt;&gt; block: [&quot;name&quot; # #]

    &gt;&gt; append #{DECAFBAD} second block
    == #{DECAFBAD00}

    &gt;&gt; append &quot;Hello&quot; second block
    ** Script Error: #{00} bytes illegal in ANY-STRING?, use BINARY!

## Does It Need A Name?

Something that makes it desirable for QUASI-BLANK to have a name is that because it&#39;s evaluative, you can&#39;t just compare to it directly without quoting it.

    if &#39;~ = second block [...]

BLANK! and the NUL character don&#39;t have that problem.

    if _ = second block [...]

    if # = second block [...]

But still, Rebol tries to reduce the symboly-ness, and that looks nicer if there&#39;s a test you&#39;re going to be performing a lot:

    if blank? second block [...]

So I think that QUASI-BLANK needs a nice short name, to help avoid people writing sequences like **`&#39;~ =`** often in their code.</description>
    
    <lastBuildDate>Mon, 26 Aug 2024 20:28:48 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="10" data-topic="2216">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>In the past, this has definitely made me feel uneasy: after all, why should five specific words get special treatment, while <code>~foobar~</code> etc. remain unused? But I can’t think of any better way to do it.</p>
</blockquote>
</aside>
<p>It's probably the endpoint for the medium.</p>
<p>We're starting to reach a point on decisions like this where if this model doesn't work, I won't be the one designing whatever comes next.</p>
<hr>
<p><em>"A designer knows he has achieved perfection not when there is nothing left to add, but when there is nothing left to take away."</em> - <strong>Antoine de Saint-Exupery</strong></p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/13</link>
        <pubDate>Mon, 26 Aug 2024 20:28:48 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-13</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="7" data-topic="2216">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>You could tell the console to display them differently, but the symbols for those things are fixed.</p>
<p>I've wondered if there's anything that can be done about that.</p>
</blockquote>
</aside>
<p>It’s an interesting point, certainly. In most languages these are hardcoded into the syntax… but Ren-C is unusual in making them antiforms of specific words. <code>~true~</code> etc. aren’t syntax, but literals.</p>
<p>In the past, this has definitely made me feel uneasy: after all, why should five specific words get special treatment, while <code>~foobar~</code> etc. remain unused? But I can’t think of any better way to do it.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/10</link>
        <pubDate>Sun, 25 Aug 2024 03:17:23 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-10</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="vnzio" data-post="5" data-topic="2216">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/vnzio/48/388_2.png" class="avatar"> vnzio:</div>
<blockquote>
<p>RIEN is recursive name</p>
<p>RIEN A DÉCLARER= Nothing To Declare</p>
</blockquote>
</aside>
<p>You can certainly call it that.  <img src="https://forum.rebol.info/images/emoji/twitter/slight_smile.png?v=12" title=":slight_smile:" class="emoji" alt=":slight_smile:" loading="lazy" width="20" height="20">  Not just when you're writing about it in French, but also you can define RIEN and RIEN? in your own personal includes library.</p>
<p>But this brings up an interesting point... which is that NOTHING has to be a function.  Because if it were just a value holding an antiform trash you'd get an error by accessing it.</p>
<p>So you will have to use a GET-WORD! when you assign it:</p>
<pre><code>&gt;&gt; rien: :nothing
== ~#[frame! []]~  ; anti 
</code></pre>
<p>And it will look like a function if you fetch it with a GET-WORD! and not a plain WORD!.</p>
<pre><code>&gt;&gt; rien? rien
== ~true~  ; anti

&gt;&gt; rien? :rien
== ~false~  ; anti

&gt;&gt; action? :rien
== ~true~  ; anti
</code></pre>
<aside class="quote no-group" data-username="bradrn" data-post="6" data-topic="2216">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>Alas, not everyone speaks French…</p>
</blockquote>
</aside>
<p>It's nice that <strong><code>~</code></strong> is symbolic.  So <strong><code>return: [~]</code></strong> and such are universal.</p>
<p>But that's where the universality stops.  The antiwords ~true~, ~false~, ~null~, ~void~ are hardcoded.</p>
<p>You could tell the console to display them differently, but the symbols for those things are fixed.</p>
<p>I've wondered if there's anything that can be done about that.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/7</link>
        <pubDate>Sun, 25 Aug 2024 03:11:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-7</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <p>Alas, not everyone speaks French…</p>
<p>(Mind you, if PHP can get away with PAAMAYIM_NEKUDOTAYIM, then maybe it’s alright!)</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/6</link>
        <pubDate>Sun, 25 Aug 2024 03:07:39 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-6</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[vnzio]]></dc:creator>
        <description><![CDATA[
            <p>RIEN is recursive name</p>
<p>RIEN A DÉCLARER= Nothing To Declare</p>
<p>Rien<br>
Is<br>
Empty<br>
Nothing</p>
<p>(<a href="https://youtu.be/Q3Kvu6Kgp88?si=OsIFYO4fAAhi-wua" rel="noopener nofollow ugc">Edith Piaf approves this name</a>)</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/5</link>
        <pubDate>Sun, 25 Aug 2024 03:05:36 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-5</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Conceptually, it's better to give it a name for what it represents, vs. what it "looks like".</p>
<p>Tilde is too literal in my book.</p>
<p>Rebol2 called <code>(...)</code> a PAREN! and I disliked that as much as I would have disliked <code>[...]</code> being called BRACK!  So I changed it to GROUP!.</p>
<p>TRASH is fitting here.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/4</link>
        <pubDate>Sun, 25 Aug 2024 02:20:39 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-4</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="2216">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Yes it's a "tilde", but if there's a TILDE definition I think it should be talking about the character.</p>
</blockquote>
</aside>
<p>Why? It makes perfect sense to me to define TILDE as <code>~</code> and let the character be denoted as <code>"~"</code> (or whatever the syntax is, I forget).</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/3</link>
        <pubDate>Sun, 25 Aug 2024 02:18:39 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-3</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>So I hate to say it, because it would mean shuffling names around <em>again</em>.  But maybe the lone tilde that is reified and you can put in a block should take the name TRASH...</p>
<pre><code>&gt;&gt; trash? second ["name" ~ ~]
== ~true~  ; anti
</code></pre>
<p>So we wouldn't be able to use trash for the antiform state anymore.  <img src="https://forum.rebol.info/images/emoji/twitter/man_facepalming.png?v=12" title=":man_facepalming:" class="emoji" alt=":man_facepalming:" loading="lazy" width="20" height="20"></p>
<h2>
<a name="i-refuse-to-call-the-antiform-state-unset-1" class="anchor" href="https://forum.rebol.info#i-refuse-to-call-the-antiform-state-unset-1"></a>I <em>refuse</em> to call the antiform state UNSET!</h2>
<p>That I will not budge on.</p>
<h2>
<a name="but-what-about-nothing-2" class="anchor" href="https://forum.rebol.info#but-what-about-nothing-2"></a>But What About... NOTHING ?</h2>
<ul>
<li>
<p>TRASH evaluates to NOTHING</p>
</li>
<li>
<p>A variable that is unset holds NOTHING</p>
</li>
<li>
<p>META of NOTHING is TRASH</p>
</li>
<li>
<p>If a function evaluates to NOTHING, the Console has nothing to display</p>
</li>
</ul>
<h2>
<a name="claude-loves-ithttpsforumrebolinfotwhat-to-call-the-unstable-antiform-of-empty-block22046uhostilefork-i-love-it-dammit-angry-3" class="anchor" href="https://forum.rebol.info#claude-loves-ithttpsforumrebolinfotwhat-to-call-the-unstable-antiform-of-empty-block22046uhostilefork-i-love-it-dammit-angry-3"></a><a href="https://forum.rebol.info/t/what-to-call-the-unstable-antiform-of-empty-block/2204/6">Claude loves it.</a>  I love it.  DAMMIT.  <img src="https://forum.rebol.info/images/emoji/twitter/angry.png?v=12" title=":angry:" class="emoji" alt=":angry:" loading="lazy" width="20" height="20">
</h2>
<p>I don't think it's a problem that there are three words starting with N here: NULL, NOTHING, and NIHIL.  They're distinct, and I think the meanings are quite learnable.</p>
<p>So fine, hell.  Here we go with another name change.</p>
<p>I knew I spoke too soon when I said I was settled!</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/2</link>
        <pubDate>Sat, 24 Aug 2024 18:25:08 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-2</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
      <item>
        <title>What to Call Lone Tilde (~)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>So this little guy doesn't have a name:</p>
<p><img src="https://forum.rebol.info/uploads/default/original/1X/98fe977bff93e2b3dfd91a030a3c088d925cc1ec.png" alt="1896_tilde" data-base62-sha1="lPs2dyWS6kN1weGeGoU7SyMbh5a" width="125" height="125"></p>
<p>Yes it's a "tilde", but if there's a TILDE definition I think it should be talking about the character.</p>
<pre><code>&gt;&gt; print ["name" tilde "me"]
name ~ me

&gt;&gt; char? tilde
== ~true~  ; anti
</code></pre>
<p>We're talking about something that evaluates to the antiform of blank (the contents of an unset variable):</p>
<pre><code>&gt;&gt; eval [~]
== ~  ; anti
</code></pre>
<h2><a name="p-7381-quasi-blank-1" class="anchor" href="https://forum.rebol.info#p-7381-quasi-blank-1"></a>QUASI-BLANK?</h2>
<p>It's an <em>accurate</em> name...</p>
<pre><code>&gt;&gt; quasi _
== ~
</code></pre>
<p>But if you're going to be testing for them easily in a block, you want something shorter.</p>
<p>Carl went on a bit of a bizarre track by deciding that #[none] was unweildy in blocks, and he liked zeros better... single characters... so <a href="http://www.rebol.net/r3blogs/0112.html">he started using zeros instead of nones, and made ZERO? accept everything</a>.</p>
<blockquote>
<p><em>I started using a lot more zeros in my data structures, especially those that had to be loaded from a file or database, because I knew that zero loaded more efficiently than NONE (no hash was required).</em></p>
<p><em>For example, where I would once create REBOL-stored DB records like this:</em></p>
<pre><code>["name" none none]
</code></pre>
<p><em>I would use:</em></p>
<pre><code>["name" 0 0]
</code></pre>
<p><em>Because using 0 does not require a hash-and-compare operation (as does the word NONE) nor does it require binding (as does the value NONE)... nor is it the long-form literal #[none], that seems just a bit too cumbersome to my coding style.</em></p>
</blockquote>
<p>You're getting a lot of single-character choices in Ren-C, and which one you use kind of depends on what you want.</p>
<p>QUASI-BLANK is as ornery as it can be while being legal to appear in a block.  e.g. if you try to ask it something like EMPTY? you'll get an error:</p>
<pre><code>&gt;&gt; block: ["name" ~ ~]

&gt;&gt; empty? second block
** Script Error: empty? expects [blank! any-series? object! port! bitset! map!]
      for its series argument
</code></pre>
<p>If you use BLANK! you have not just a different look, but more routines that are willing to think of it as being some kind of emptiness:</p>
<pre><code>&gt;&gt; block: ["name" _ _]

&gt;&gt; empty? second block
== ~true~  ; anti
</code></pre>
<p>There's also #, which is effectively the zero character.</p>
<pre><code>&gt;&gt; block: ["name" # #]

&gt;&gt; append #{DECAFBAD} second block
== #{DECAFBAD00}

&gt;&gt; append "Hello" second block
** Script Error: #{00} bytes illegal in ANY-STRING?, use BINARY!
</code></pre>
<h2><a name="p-7381-does-it-need-a-name-2" class="anchor" href="https://forum.rebol.info#p-7381-does-it-need-a-name-2"></a>Does It Need A Name?</h2>
<p>Something that makes it desirable for QUASI-BLANK to have a name is that because it's evaluative, you can't just compare to it directly without quoting it.</p>
<pre><code>if '~ = second block [...]
</code></pre>
<p>BLANK! and the NUL character don't have that problem.</p>
<pre><code>if _ = second block [...]

if # = second block [...]
</code></pre>
<p>But still, Rebol tries to reduce the symboly-ness, and that looks nicer if there's a test you're going to be performing a lot:</p>
<pre><code>if blank? second block [...]
</code></pre>
<p>So I think that QUASI-BLANK needs a nice short name, to help avoid people writing sequences like <strong><code>'~ =</code></strong> often in their code.</p>
          <p><a href="https://forum.rebol.info/t/what-to-call-lone-tilde/2216/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/what-to-call-lone-tilde/2216/1</link>
        <pubDate>Sat, 24 Aug 2024 18:00:23 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2216-1</guid>
        <source url="https://forum.rebol.info/t/what-to-call-lone-tilde/2216.rss">What to Call Lone Tilde (~)</source>
      </item>
  </channel>
</rss>
