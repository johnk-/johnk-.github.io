<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>(U)PARSE + CALL: Controlling Of Interactive CLI Apps</title>
    <link>https://forum.rebol.info/t/u-parse-call-controlling-of-interactive-cli-apps/1816</link>
    <description>A long time ago (e.g. college), I used something in Tcl called EXPECT...which was a great way of driving interactive console applications.

You&#39;d specify the patterns you wanted to wait on (that came from the app&#39;s stdout), and script the responses to be fed to stdin, in an interactive fashion.

Today people think a lot more about exposing functionality through APIs (with whatever Java or XML and such).  So it&#39;s more rare that you have to resort to writing &quot;stdio robots&quot;.

But it&#39;s a pretty easy-to-absorb test case, and could be a real showcase for UPARSE...as well as a good challenge for a renewed PORT! model.

I found this code from @Brett on Trello, where the need for an R3 version of CALL was being articulated.  It gives some EXPECT-like functionality:

https://github.com/codebybrett/r3-scripts/blob/master/call-server.r

This seems like a good domain to build some simple-but-impressive demos for... in the &quot;layperson could have built this robot&quot; sense (if we can push it to that point).</description>
    
    <lastBuildDate>Sat, 14 May 2022 04:52:57 +0000</lastBuildDate>
    <category>General Tools</category>
    <atom:link href="https://forum.rebol.info/t/u-parse-call-controlling-of-interactive-cli-apps/1816.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>(U)PARSE + CALL: Controlling Of Interactive CLI Apps</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A long time ago (e.g. college), I used something in Tcl called EXPECT...which was a great way of driving interactive console applications.</p>
<p>You'd specify the patterns you wanted to wait on (that came from the app's stdout), and script the responses to be fed to stdin, in an interactive fashion.</p>
<p>Today people think a lot more about exposing functionality through APIs (with whatever Java or XML and such).  So it's more rare that you have to resort to writing "stdio robots".</p>
<p>But it's a pretty easy-to-absorb test case, and could be a real showcase for UPARSE...as well as a good challenge for a renewed PORT! model.</p>
<p>I found this code from <a class="mention" href="/u/brett">@Brett</a> on Trello, where the need for an R3 version of CALL was being articulated.  It gives some EXPECT-like functionality:</p>
<aside class="onebox githubblob">
  <header class="source">
      <a href="https://github.com/codebybrett/r3-scripts/blob/master/call-server.r" target="_blank" rel="noopener">github.com</a>
  </header>
  <article class="onebox-body">
    <h4><a href="https://github.com/codebybrett/r3-scripts/blob/master/call-server.r" target="_blank" rel="noopener">codebybrett/r3-scripts/blob/master/call-server.r</a></h4>
<pre><code class="lang-r">REBOL [
	Title: "call-server"
	File: %call-server.r
	Author: "Brett Handley"
	Date: 22-Jun-2013
	Purpose: "Provides a way to capture output from console program and send input to interactive console programs."
	License: {

		Copyright 2013 Brett Handley

		Licensed under the Apache License, Version 2.0 (the "License");
		you may not use this file except in compliance with the License.
		You may obtain a copy of the License at

			http://www.apache.org/licenses/LICENSE-2.0

		Unless required by applicable law or agreed to in writing, software
		distributed under the License is distributed on an "AS IS" BASIS,
		WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
		See the License for the specific language governing permissions and
</code></pre>

  This file has been truncated. <a href="https://github.com/codebybrett/r3-scripts/blob/master/call-server.r" target="_blank" rel="noopener">show original</a>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>This seems like a good domain to build some simple-but-impressive demos for... in the "layperson could have built this robot" sense (if we can push it to that point).</p>
          <p><a href="https://forum.rebol.info/t/u-parse-call-controlling-of-interactive-cli-apps/1816/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/u-parse-call-controlling-of-interactive-cli-apps/1816/1</link>
        <pubDate>Sat, 14 May 2022 04:52:57 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1816-1</guid>
        <source url="https://forum.rebol.info/t/u-parse-call-controlling-of-interactive-cli-apps/1816.rss">(U)PARSE + CALL: Controlling Of Interactive CLI Apps</source>
      </item>
  </channel>
</rss>
