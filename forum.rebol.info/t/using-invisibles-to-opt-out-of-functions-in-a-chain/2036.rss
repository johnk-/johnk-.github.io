<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Using Invisibles To Opt Out of Functions In a Chain</title>
    <link>https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036</link>
    <description>One idea for using invisibles is to chain functions where you make some functions disappear from the chain if they&#39;re not needed.

Imagine an image processor where you apply sequential effects but only the ones specify as refinements.

    imagemagick: func [ data 
        /monochrome
        /sharpen
        /blur
        /pixelise
    ][
        ... code ..
        sharpen: either sharpen [:sharpenf] [:nihil]
        blur: either blur [:blurf] [:nihil]
        pixelise: either pixelize [:pixelf] [:nihil]

        return sharpen blur pixelise data
    ]

    imagemagick/sharpen imagedata

...giving a much cleaner look.  If the refinements are absent, the functions just disappear.</description>
    
    <lastBuildDate>Fri, 08 Dec 2023 02:08:05 +0000</lastBuildDate>
    <category>Show &amp; Tell</category>
    <atom:link href="https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Using Invisibles To Opt Out of Functions In a Chain</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="gchiu" data-post="1" data-topic="2036">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/gchiu/40/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<pre><code>sharpen: either sharpen [:sharpenf] [:nihil]
blur: either blur [:blurf] [:nihil]
pixelise: either pixelize [:pixelf] [:nihil]

return sharpen blur pixelise data
</code></pre>
</blockquote>
</aside>
<p>This kind of application no longer works, as it was a casualty of scaling back what "invisibility" could do.  <img src="https://forum.rebol.info/images/emoji/twitter/frowning.png?v=12" title=":frowning:" class="emoji" alt=":frowning:" loading="lazy" width="20" height="20"></p>
<p>"Non-Interstitial Invisibility" was removed for good reasons that are outlined here:</p>
<p><a href="https://forum.rebol.info/t/invisibility-reviewed-through-modern-eyes/2034" class="inline-onebox">Invisibility Reviewed Through Modern Eyes</a></p>
<p>So to have invisibles vaporize anything, you'd need to go through a COMPOSE or REDUCE step and then DO the result... so not that succinct.  CHAIN is a better bet here.</p>
<p>Though at time of writing, you can get the original intent with macros:</p>
<pre><code>sharpen: macro [] [return if sharpen [sharpenf]]
blur: macro [] [return if blur [blurf]]
pixelise: macro [] [return if pizelize [pixelf]]

return sharpen blur pixelise data
</code></pre>
          <p><a href="https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036/3</link>
        <pubDate>Fri, 08 Dec 2023 02:08:05 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2036-3</guid>
        <source url="https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036.rss">Using Invisibles To Opt Out of Functions In a Chain</source>
      </item>
      <item>
        <title>Using Invisibles To Opt Out of Functions In a Chain</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="gchiu" data-post="1" data-topic="2036">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/gchiu/40/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<p>One idea for using invisibles is to chain functions where you make some functions disappear from the chain if they're not needed.</p>
</blockquote>
</aside>
<p>This is a creative idea... and I think this sort of creativity is what makes the language fun... having so many different ways to attack problems!</p>
<p>But in this particular case, you could actually use CHAIN to build the composite function, and it might be more obvious:</p>
<pre><code>imagemagick: func [
    data 
    /monochrome
    /sharpen
    /blur
    /pixelise
][
     ... code ..
    return run chain reduce [
        if sharpen [:sharpenf]
        if blur [:blurf]
        if pixelize [:pixelf]
    ] data
]
</code></pre>
          <p><a href="https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036/2</link>
        <pubDate>Sun, 25 Jun 2023 23:56:19 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2036-2</guid>
        <source url="https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036.rss">Using Invisibles To Opt Out of Functions In a Chain</source>
      </item>
      <item>
        <title>Using Invisibles To Opt Out of Functions In a Chain</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>One idea for using invisibles is to chain functions where you make some functions disappear from the chain if they're not needed.</p>
<p>Imagine an image processor where you apply sequential effects but only the ones specify as refinements.</p>
<pre><code>imagemagick: func [ data 
    /monochrome
    /sharpen
    /blur
    /pixelise
][
    ... code ..
    sharpen: either sharpen [:sharpenf] [:nihil]
    blur: either blur [:blurf] [:nihil]
    pixelise: either pixelize [:pixelf] [:nihil]

    return sharpen blur pixelise data
]

imagemagick/sharpen imagedata
</code></pre>
<p>...giving a much cleaner look.  If the refinements are absent, the functions just disappear.</p>
          <p><a href="https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036/1</link>
        <pubDate>Mon, 14 May 2018 21:20:56 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2036-1</guid>
        <source url="https://forum.rebol.info/t/using-invisibles-to-opt-out-of-functions-in-a-chain/2036.rss">Using Invisibles To Opt Out of Functions In a Chain</source>
      </item>
  </channel>
</rss>
