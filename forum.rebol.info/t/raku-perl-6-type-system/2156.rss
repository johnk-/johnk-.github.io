<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Raku (Perl 6) Type System</title>
    <link>https://forum.rebol.info/t/raku-perl-6-type-system/2156</link>
    <description>[quote=&quot;bradrn, post:19, topic:2151&quot;]
That’s why I think it’s a good idea to keep TYPE OF a direct reflection of the heart-byte, and use other constructions for code which needs other things.
[/quote]

I’ve just discovered a bit of prior art for this, in the form of Raku (i.e., the language formerly known as Perl 6). Its equivalent to TYPE OF, namely [WHAT](https://docs.raku.org/language/mop#WHAT), returns only the ‘type object’ of which the value is an instance. By contrast, type matching (and pattern matching) is done using [ACCEPTS](https://docs.raku.org/type/Mu#method_ACCEPTS) with a [signature literal](https://docs.raku.org/language/signatures), which is a much more flexible syntax allowing all kinds of constraints to be expressed.

Actually, now that I think of it, Raku signature literals strike me as quite a nice approach. For Ren-C, they suggest the idea of having a ‘type-matching dialect’… though, then again, I guess that’s something I [already suggested above](https://forum.rebol.info/t/ugly-types-less-ugly-than-history-can-we-do-better/2151/2).</description>
    
    <lastBuildDate>Sun, 25 Feb 2024 20:31:17 +0000</lastBuildDate>
    <category>Foreign Inspiration</category>
    <atom:link href="https://forum.rebol.info/t/raku-perl-6-type-system/2156.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Raku (Perl 6) Type System</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="19" data-topic="2151">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/bradrn/40/365_2.png" class="avatar"><a href="https://forum.rebol.info/t/ugly-types-less-ugly-than-history-can-we-do-better/2151/19">Ugly Types: Less Ugly Than History, Can We Do Better?</a>
</div>
<blockquote>
<p>That’s why I think it’s a good idea to keep TYPE OF a direct reflection of the heart-byte, and use other constructions for code which needs other things.</p>
</blockquote>
</aside>
<p>I’ve just discovered a bit of prior art for this, in the form of Raku (i.e., the language formerly known as Perl 6). Its equivalent to TYPE OF, namely <a href="https://docs.raku.org/language/mop#WHAT">WHAT</a>, returns only the ‘type object’ of which the value is an instance. By contrast, type matching (and pattern matching) is done using <a href="https://docs.raku.org/type/Mu#method_ACCEPTS">ACCEPTS</a> with a <a href="https://docs.raku.org/language/signatures">signature literal</a>, which is a much more flexible syntax allowing all kinds of constraints to be expressed.</p>
<p>Actually, now that I think of it, Raku signature literals strike me as quite a nice approach. For Ren-C, they suggest the idea of having a ‘type-matching dialect’… though, then again, I guess that’s something I <a href="https://forum.rebol.info/t/ugly-types-less-ugly-than-history-can-we-do-better/2151/2">already suggested above</a>.</p>
          <p><a href="https://forum.rebol.info/t/raku-perl-6-type-system/2156/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/raku-perl-6-type-system/2156/1</link>
        <pubDate>Sun, 25 Feb 2024 12:53:56 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2156-1</guid>
        <source url="https://forum.rebol.info/t/raku-perl-6-type-system/2156.rss">Raku (Perl 6) Type System</source>
      </item>
  </channel>
</rss>
