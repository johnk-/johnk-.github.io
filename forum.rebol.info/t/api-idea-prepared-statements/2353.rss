<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>API Idea: Prepared Statements</title>
    <link>https://forum.rebol.info/t/api-idea-prepared-statements/2353</link>
    <description>I am not a C programmer but (or maybe that&#39;s why) I am [all for a string based api](https://forum.rebol.info/t/limiting-api-entry-points-in-favor-of-exchanging-strings/540).

From other discussions it seems that a more direct api seems to be seen to be more performant. If  performance is important, could there be something like [prepared statements](https://en.wikipedia.org/wiki/Prepared_statement)?

    rebElide(&quot;f: function[a] [return a * 2]&quot;);
    handle = rebPrepare(&quot;print [(f #1) #2]&quot;);
    rebCall(handle, 5, &quot;apples&quot;);

And this prints

    10 apples

I have no idea if this is possible, and if it would work, just putting the idea out there.</description>
    
    <lastBuildDate>Thu, 19 Dec 2024 14:57:43 +0000</lastBuildDate>
    <category>Language Bridging</category>
    <atom:link href="https://forum.rebol.info/t/api-idea-prepared-statements/2353.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>API Idea: Prepared Statements</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="IngoHohmann" data-post="1" data-topic="2353">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forum.rebol.info/user_avatar/forum.rebol.info/ingohohmann/48/195_2.png" class="avatar"> IngoHohmann:</div>
<blockquote>
<pre data-code-wrap="plaintext"><code class="lang-plaintext">rebElide("f: function[a] [return a * 2]");
handle = rebPrepare("print [(f #1) #2]");
rebCall(handle, 5, "apples");
</code></pre>
</blockquote>
</aside>
<p>Looking at this question 7 years later...I think we're not going to get too much better than functions for the "prepared statement handle", in terms of "parameterized thing you can execute".</p>
<pre><code>rebElide("f: function[a] [return a * 2]");
Value* printer = rebValue("lambda [a label] [print [(f a) label]]");
rebElide(printer, 5, "-{apples}-");
</code></pre>
<p>The good news is that you should be able to use <a href="https://forum.rebol.info/t/looking-into-a-usermode-pointfree/1236">innovations like POINTFREE</a> (or whatever it's called), or any other in-language conveniences to define these functions.</p>
<pre><code>rebElide("f: function[a] [return a * 2]");
Value* printer = rebValue("pointfree [print [(f _) _]]");  // single scan
rebElide(printer, 5, "-{apples}-");  // not scanning POINTFREE/PRINT
rebElide(printer, 10, "-{bananas}-");  // not scanning POINTFREE/PRINT
rebElide(printer, 15, "-{kiwis}-");  // not scanning POINTFREE/PRINT
</code></pre>
<p>It's not completely known how that will work, but this is pretty much what's on the table for "prepared statements"...just various convenient usermode function generators.</p>
<h2><a name="p-7977-convenience-entry-points-possible-1" class="anchor" href="https://forum.rebol.info#p-7977-convenience-entry-points-possible-1"></a>Convenience Entry Points Possible...</h2>
<p>I've mentioned the idea of <a href="https://forum.rebol.info/t/limiting-api-entry-points-in-favor-of-exchanging-strings/540/4">making macros to make these calls briefer</a>.</p>
<pre><code>#define rebPointfree(...)  rebValue("pointfree [", __VA_ARGS__, "]")

rebPointfree("print [(f _) _]")
</code></pre>
<p>So that should be able to syntactically match the brevity of <a class="mention" href="https://forum.rebol.info/u/ingohohmann">@IngoHohmann</a> 's <strong><code>rebPrepare()</code></strong></p>
          <p><a href="https://forum.rebol.info/t/api-idea-prepared-statements/2353/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/api-idea-prepared-statements/2353/2</link>
        <pubDate>Thu, 19 Dec 2024 14:12:01 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2353-2</guid>
        <source url="https://forum.rebol.info/t/api-idea-prepared-statements/2353.rss">API Idea: Prepared Statements</source>
      </item>
      <item>
        <title>API Idea: Prepared Statements</title>
        <dc:creator><![CDATA[IngoHohmann]]></dc:creator>
        <description><![CDATA[
            <p>I am not a C programmer but (or maybe that's why) I am <a href="https://forum.rebol.info/t/limiting-api-entry-points-in-favor-of-exchanging-strings/540">all for a string based api</a>.</p>
<p>From other discussions it seems that a more direct api seems to be seen to be more performant. If  performance is important, could there be something like <a href="https://en.wikipedia.org/wiki/Prepared_statement">prepared statements</a>?</p>
<pre><code>rebElide("f: function[a] [return a * 2]");
handle = rebPrepare("print [(f #1) #2]");
rebCall(handle, 5, "apples");
</code></pre>
<p>And this prints</p>
<pre><code>10 apples
</code></pre>
<p>I have no idea if this is possible, and if it would work, just putting the idea out there.</p>
          <p><a href="https://forum.rebol.info/t/api-idea-prepared-statements/2353/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/api-idea-prepared-statements/2353/1</link>
        <pubDate>Thu, 01 Mar 2018 16:38:55 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2353-1</guid>
        <source url="https://forum.rebol.info/t/api-idea-prepared-statements/2353.rss">API Idea: Prepared Statements</source>
      </item>
  </channel>
</rss>
