<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Name for rule to count how many times a PARSE rule matches?</title>
    <link>https://forum.rebol.info/t/name-for-rule-to-count-how-many-times-a-parse-rule-matches/1581</link>
    <description>There are cases where you want to know how many of a certain match there are.

Here&#39;s an example:

     uparse &quot;&lt;&lt;&lt;stuff&gt;&gt;&gt;&quot; [
         (n: 0)
         some [&quot;&lt;&quot; (n: n + 1)]
         x: between here n &quot;&gt;&quot;
     ]

Here I&#39;m just trying to match the number of `&gt;` on the right to how many `&lt;` were on the left.

*(Note: I still think this INTEGER! abstracting of rules is confusing to read.  Is a REPEAT/LOOP keyword missing that would help?  [I&#39;ve written about this, please register an opinion.](https://forum.rebol.info/t/is-integer-in-parse-too-obfuscating/1578))*

## This Feels Like It Needs A (Value-Bearing) Rule

Maybe call it TALLY ?

     uparse &quot;&lt;&lt;&lt;stuff&gt;&gt;&gt;&quot; [
         n: tally &quot;&lt;&quot;
         x: between here n &quot;&gt;&quot;
     ]

I&#39;m reluctant to call it COUNT since that&#39;s used so often as a variable name / noun.  But TALLY seems like fair game.

[**For now, it&#39;s checked in as TALLY for UPARSE**](https://github.com/metaeducation/ren-c/commit/937eb630ee0e976ba6db3a8003d804fbfa2eedd5)

But the main thing to focus on here is just how much killer leverage we get when parse rules can fit into this extensible framework.  [And my major point I raised about synthesizing values that are not restricted to the type of the input.](https://forum.rebol.info/t/lessons-from-encapping-improving-binary-parse/1577)</description>
    
    <lastBuildDate>Sun, 15 May 2022 00:52:51 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/name-for-rule-to-count-how-many-times-a-parse-rule-matches/1581.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Name for rule to count how many times a PARSE rule matches?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="hostilefork" data-post="1" data-topic="1581">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>There are cases where you want to know how many of a certain match there are.<br>
...<br>
For now, it's checked in as TALLY for UPARSE</p>
</blockquote>
</aside>
<p>So oddly enough, TALLY without paying attention to the result can be used as the replacement for historical instances of ANY or WHILE.</p>
<pre><code>&gt;&gt; uparse "aaaccc" [some "a" tally "b" tally "c"]
== 3

&gt;&gt; uparse "aaaccc" [some "a" tally "b" some "c" tally "d"]
== 0
</code></pre>
<p><em>"Count the number of times this matches"</em> along with ignoring the count is pretty lightweight, and perhaps some would consider it idiomatic for <strong>opt some</strong></p>
<pre><code>opt some
tally    ; three fewer characters, same as WHILE
</code></pre>
<p>I don't care for the tradeoff myself...but...it's worth pointing out that many result-bearing constructs have their results ignored.</p>
<p>But I certainly would prefer seeing people embracing this idiom to having a single-arity WHILE in PARSE!</p>
          <p><a href="https://forum.rebol.info/t/name-for-rule-to-count-how-many-times-a-parse-rule-matches/1581/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/name-for-rule-to-count-how-many-times-a-parse-rule-matches/1581/2</link>
        <pubDate>Sun, 15 May 2022 00:24:52 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1581-2</guid>
        <source url="https://forum.rebol.info/t/name-for-rule-to-count-how-many-times-a-parse-rule-matches/1581.rss">Name for rule to count how many times a PARSE rule matches?</source>
      </item>
      <item>
        <title>Name for rule to count how many times a PARSE rule matches?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>There are cases where you want to know how many of a certain match there are.</p>
<p>Here's an example:</p>
<pre><code> uparse "&lt;&lt;&lt;stuff&gt;&gt;&gt;" [
     (n: 0)
     some ["&lt;" (n: n + 1)]
     x: between here n "&gt;"
 ]
</code></pre>
<p>Here I'm just trying to match the number of <code>&gt;</code> on the right to how many <code>&lt;</code> were on the left.</p>
<p><em>(Note: I still think this INTEGER! abstracting of rules is confusing to read.  Is a REPEAT/LOOP keyword missing that would help?  <a href="https://forum.rebol.info/t/is-integer-in-parse-too-obfuscating/1578">I've written about this, please register an opinion.</a>)</em></p>
<h2>This Feels Like It Needs A (Value-Bearing) Rule</h2>
<p>Maybe call it TALLY ?</p>
<pre><code> uparse "&lt;&lt;&lt;stuff&gt;&gt;&gt;" [
     n: tally "&lt;"
     x: between here n "&gt;"
 ]
</code></pre>
<p>I'm reluctant to call it COUNT since that's used so often as a variable name / noun.  But TALLY seems like fair game.</p>
<p><a href="https://github.com/metaeducation/ren-c/commit/937eb630ee0e976ba6db3a8003d804fbfa2eedd5"><strong>For now, it's checked in as TALLY for UPARSE</strong></a></p>
<p>But the main thing to focus on here is just how much killer leverage we get when parse rules can fit into this extensible framework.  <a href="https://forum.rebol.info/t/lessons-from-encapping-improving-binary-parse/1577">And my major point I raised about synthesizing values that are not restricted to the type of the input.</a></p>
          <p><a href="https://forum.rebol.info/t/name-for-rule-to-count-how-many-times-a-parse-rule-matches/1581/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/name-for-rule-to-count-how-many-times-a-parse-rule-matches/1581/1</link>
        <pubDate>Mon, 12 Apr 2021 03:54:09 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1581-1</guid>
        <source url="https://forum.rebol.info/t/name-for-rule-to-count-how-many-times-a-parse-rule-matches/1581.rss">Name for rule to count how many times a PARSE rule matches?</source>
      </item>
  </channel>
</rss>
