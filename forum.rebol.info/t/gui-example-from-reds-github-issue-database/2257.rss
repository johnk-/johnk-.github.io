<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>GUI Example From Red&#39;s GitHub Issue Database</title>
    <link>https://forum.rebol.info/t/gui-example-from-reds-github-issue-database/2257</link>
    <description>I&#39;ve said I&#39;m going to endure the pain of looking at GUI dialect code on a weekly basis, and my first attempt to do so was [2 weeks ago](https://forum.rebol.info/t/cave-in-gui-game-in-red/2209/1), so I guess I am overdue...

Here is some code from an Issue in Red&#39;s GitHub: **[&quot;VID on Ubuntu Doesn&#39;t Right Align&quot;](https://github.com/red/red/issues/5511)**

    view [
      group-box 3 [
        text blue white right &quot;Before Stream: &quot;
        beforeStreamDisplay: text blue white &quot;None&quot;
        button &quot;Select file&quot; [beforeStreamDisplay/text: (to string! request-file)]

        text blue white right &quot;Delta Stream: &quot;
        deltaStreamDisplay: text blue white &quot;None&quot;
        button &quot;Select file&quot; [deltaStreamDisplay/text: (to string! request-file)]
      ]
      panel 3 [
        text blue white right &quot;Before Stream: &quot;
        f-3: text blue white &quot;None&quot;
        button &quot;Select file&quot; [f-3/text: (to string! request-file)]

        text blue white right &quot;Delta Stream: &quot;
        f-4: text blue white &quot;None&quot;
        button &quot;Select file&quot; [f-4/text: (to string! request-file)]
      ] return
    ]

The result of that is:

![340416458-8a27fe88-9fa4-4a08-9f82-cf0782e13b17|574x141, 75%](upload://ckxm9zYNEMxQIJISX5246OnJJPY.png)

I tried the code on my local Red EXE on Windows, and it did work.

---

## Let&#39;s Try And Unpack That

So it says **view [...]**.  My understanding is that VIEW&#39;s job is to handle a tree of layout objects.  So I&#39;m going to guess that the LAYOUT instruction is implicit, and that will do the same thing as **view layout [...]**

----

:star: **YES** ... I am correct

---

## What&#39;s The Point of the RETURN at the End of The Layout?

I&#39;ve never liked &quot;RETURN&quot; being reused to mean &quot;end current row and start a new one&quot;.  Though it&#39;s a sort of in-your-face &quot;the dialect can use words however it wants&quot; example.

But the RETURN in this example has nothing that comes after it.  I&#39;m assuming that if you delete that RETURN it has no effect.

---

:star: **YES** ... as far as I can tell removing it has no effect.  But it seems to be put there intentionally.  Perhaps it&#39;s just a habit people get into in order to say &quot;hey, this is as wide as this layout should be, if you&#39;re going to add any more stuff to this example it should be on a new &#39;line&#39;.&quot;

![340416458-8a27fe88-9fa4-4a08-9f82-cf0782e13b17|574x141, 75%](upload://ckxm9zYNEMxQIJISX5246OnJJPY.png)

---

## What&#39;s The Number After the Panel or Group-Box?

So at the top level here, you&#39;ve got two panel thingies.  One of these uses a group box and the other doesn&#39;t.

    view [
      group-box 3 [...]
      panel 3 [...]
      return
    ]

Hence I guess that GROUP-BOX is derived from or otherwise inherits its PANEL-ness?

Although what you&#39;re getting here are grids, they&#39;re passing just **3** instead of **3x2**.  I guess because the 3 is enough to say how many sub-elements you&#39;re going to have until kicking it over to a new row.  So if you left it off, that would just put everything all in a horizontal line?

---

:star: **YES** ... well looky there, I guessed right.

![image|690x66, 100%](upload://ioC1SwYNNxCUREhStOiH3Prrmxt.png)

So supplying the INTEGER! argument to GROUP-BOX and PANEL saves you on the need to put a &quot;RETURN&quot; when you want there to be a break.

---
## What Other Parameters Do PANEL and GROUP-BOX Have?

The [Red Documentation for VID](https://github.com/red/docs/blob/master/en/vid.adoc#7-panels) tells us:

    panel &lt;options&gt; [&lt;content&gt;]

    &lt;options&gt; : optional list of settings for the panel.
    &lt;content&gt; : panel&#39;s VID content description (block!).

...and...

    group-box &lt;divider&gt; &lt;options&gt; [&lt;body&gt;]

    &lt;divider&gt; : optional number of row or columns (integer!).
    &lt;options&gt; : optional list of settings for the panel.
    &lt;body&gt;    : panel&#39;s VID content description (block!).

Uh, okay.  Well it seems to me that PANEL was willing to take the &quot;divider&quot; INTEGER! even though it doesn&#39;t say it takes it.  And there&#39;s no mention of what `&lt;options&gt;` we have, here.  [Rebol Documentation for VID](https://www.rebol.com/docs/view-guide.html) isn&#39;t much more helpful.

(But it seems that whatever `&lt;options&gt;` we do have, it would be confusing if any of them involved blocks.)

They set the color on TEXT with just naming colors after it (background, foreground).  Could I do that, e.g. **`group-box 3 orange purple`** and get the box outline to be drawn in purple on an orange background?  If I removed the colors from one of the texts, would it too be purple on orange?

---
:man_shrugging: **HALF-RIGHT** ... background is orange, but it seems to ignore the purpleness entirely.  Neither the line drawing the group box nor the text inside the panel inherited the purple.

![image|571x140, 75%](upload://lSoe1L1ijaJCON5qK7H9HK5ExOX.png)

---

## What If I Gave an Invalid Color?

Perhaps it doesn&#39;t know `purple` and wanted `magenta` or something, and just didn&#39;t give an error.  What happens if I give it mispelled colors, like **`group-box 3 ornage grene`**?

One would hope it would fail.  But would it fail at the LAYOUT level, or would LAYOUT build a structure that VIEW would choke on?

I&#39;d idly guess that VIEW expects not color WORD!s but to have things resolved to TUPLE!s in the layout objects, so I&#39;m going to guess that GET-ting the words in LAYOUT production would fail... so I&#39;ll just try that in a LAYOUT with no VIEW.

---

 :star: **YES** ... I am good at this guessing game.

      red&gt;&gt; layout [group-box 3 ornage grene [...]]
      *** Script Error: VID - invalid syntax at: [
          ornage grene [
             text right &quot;Before Stream: &quot; beforeStreamDisplay: text blue white

---

## BUTTON Runs The Code In The Block When Pushed

Okay, in the &quot;fairly obvious&quot; department, I am guessing that if I push the button, it will run the code in the block.

---

:neutral_face: **YES** ... but don&#39;t think I deserve any particular gold star for that insight.

![image|690x384, 75%](upload://eXJGp2zqdx9SWPnitZVRwrjm7kS.png)

The file selection box is the one provided by the OS.  It is modal--you can&#39;t move the Red window around or interact to it while the dialog is up.  Multiple selection of files is not enabled by default.  The options for REQUEST-FILE are:

    REFINEMENTS:
         /title       =&gt; Window title.
            text         [string!] 
         /file        =&gt; Default file name or directory.
            name         [string! file!] 
         /filter      =&gt; Block of filters (filter-name filter).
            list         [block!] 
         /save        =&gt; File save mode.
         /multi       =&gt; Allows multiple file selection, returned as a block.

*(I&#39;ll mention that Ren-C has [REQUEST-FILE for Windows and Linux/GTK](https://github.com/metaeducation/ren-c/blob/8516f0fca8ddce40a97e7647a087dc55e065cf3b/extensions/view/mod-view.c#L92).  It was in the Atronix build and I retooled it to leverage the libRebol API pretty nicely, and improved some things about it.  But I don&#39;t use it for anything.)*

---

## Okay, I&#39;m Bored

I think I pretty well understand this example.

Looking at the [original issue](https://github.com/red/red/issues/5511), though, I&#39;m empathetic to SkySpiral7&#39;s complaint.

If you write:

    view [
       text right &quot;Short&quot; return
       text right &quot;Much longer text&quot;
    ]

And get:

![340153948-e25ce4c2-8bef-492c-832d-e1af9f7f9547|140x115](upload://1UYHbM327G3gvu3gvN29gyl2Via.png)

Then that seems wrong to me.  If something that simple doesn&#39;t work how you&#39;d *expect* it to, what good is this thing?

And it seems like something more semiotic could be used here for RETURN.

    view [
       text right &quot;Short&quot;
       |
       text right &quot;Much longer text&quot;
    ]

If single bar is too slight or used for something else, maybe double bar.

    view [
       text right &quot;Short&quot;
       ||
       text right &quot;Much longer text&quot;
    ]

Dashes? Equals?

    view [
       text right &quot;Short&quot;
       ===
       text right &quot;Much longer text&quot;
    ]</description>
    
    <lastBuildDate>Sat, 07 Sep 2024 05:53:29 +0000</lastBuildDate>
    <category>GUI</category>
    <atom:link href="https://forum.rebol.info/t/gui-example-from-reds-github-issue-database/2257.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>GUI Example From Red&#39;s GitHub Issue Database</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I've said I'm going to endure the pain of looking at GUI dialect code on a weekly basis, and my first attempt to do so was <a href="https://forum.rebol.info/t/cave-in-gui-game-in-red/2209/1">2 weeks ago</a>, so I guess I am overdue...</p>
<p>Here is some code from an Issue in Red's GitHub: <strong><a href="https://github.com/red/red/issues/5511">"VID on Ubuntu Doesn't Right Align"</a></strong></p>
<pre><code>view [
  group-box 3 [
    text blue white right "Before Stream: "
    beforeStreamDisplay: text blue white "None"
    button "Select file" [beforeStreamDisplay/text: (to string! request-file)]

    text blue white right "Delta Stream: "
    deltaStreamDisplay: text blue white "None"
    button "Select file" [deltaStreamDisplay/text: (to string! request-file)]
  ]
  panel 3 [
    text blue white right "Before Stream: "
    f-3: text blue white "None"
    button "Select file" [f-3/text: (to string! request-file)]

    text blue white right "Delta Stream: "
    f-4: text blue white "None"
    button "Select file" [f-4/text: (to string! request-file)]
  ] return
]
</code></pre>
<p>The result of that is:</p>
<p><img src="https://forum.rebol.info/uploads/default/original/1X/566c6c3f848924e0fee6bb811e5a0c1d46f33492.png" alt="340416458-8a27fe88-9fa4-4a08-9f82-cf0782e13b17" data-base62-sha1="ckxm9zYNEMxQIJISX5246OnJJPY" width="430" height="105"></p>
<p>I tried the code on my local Red EXE on Windows, and it did work.</p>
<hr>
<h2><a name="p-7590-lets-try-and-unpack-that-1" class="anchor" href="https://forum.rebol.info#p-7590-lets-try-and-unpack-that-1"></a>Let's Try And Unpack That</h2>
<p>So it says <strong>view [...]</strong>.  My understanding is that VIEW's job is to handle a tree of layout objects.  So I'm going to guess that the LAYOUT instruction is implicit, and that will do the same thing as <strong>view layout [...]</strong></p>
<hr>
<p><img src="https://forum.rebol.info/images/emoji/twitter/star.png?v=12" title=":star:" class="emoji" alt=":star:" loading="lazy" width="20" height="20"> <strong>YES</strong> ... I am correct</p>
<hr>
<h2><a name="p-7590-whats-the-point-of-the-return-at-the-end-of-the-layout-2" class="anchor" href="https://forum.rebol.info#p-7590-whats-the-point-of-the-return-at-the-end-of-the-layout-2"></a>What's The Point of the RETURN at the End of The Layout?</h2>
<p>I've never liked "RETURN" being reused to mean "end current row and start a new one".  Though it's a sort of in-your-face "the dialect can use words however it wants" example.</p>
<p>But the RETURN in this example has nothing that comes after it.  I'm assuming that if you delete that RETURN it has no effect.</p>
<hr>
<p><img src="https://forum.rebol.info/images/emoji/twitter/star.png?v=12" title=":star:" class="emoji" alt=":star:" loading="lazy" width="20" height="20"> <strong>YES</strong> ... as far as I can tell removing it has no effect.  But it seems to be put there intentionally.  Perhaps it's just a habit people get into in order to say "hey, this is as wide as this layout should be, if you're going to add any more stuff to this example it should be on a new 'line'."</p>
<p><img src="https://forum.rebol.info/uploads/default/original/1X/566c6c3f848924e0fee6bb811e5a0c1d46f33492.png" alt="340416458-8a27fe88-9fa4-4a08-9f82-cf0782e13b17" data-base62-sha1="ckxm9zYNEMxQIJISX5246OnJJPY" width="430" height="105"></p>
<hr>
<h2><a name="p-7590-whats-the-number-after-the-panel-or-group-box-3" class="anchor" href="https://forum.rebol.info#p-7590-whats-the-number-after-the-panel-or-group-box-3"></a>What's The Number After the Panel or Group-Box?</h2>
<p>So at the top level here, you've got two panel thingies.  One of these uses a group box and the other doesn't.</p>
<pre><code>view [
  group-box 3 [...]
  panel 3 [...]
  return
]
</code></pre>
<p>Hence I guess that GROUP-BOX is derived from or otherwise inherits its PANEL-ness?</p>
<p>Although what you're getting here are grids, they're passing just <strong>3</strong> instead of <strong>3x2</strong>.  I guess because the 3 is enough to say how many sub-elements you're going to have until kicking it over to a new row.  So if you left it off, that would just put everything all in a horizontal line?</p>
<hr>
<p><img src="https://forum.rebol.info/images/emoji/twitter/star.png?v=12" title=":star:" class="emoji" alt=":star:" loading="lazy" width="20" height="20"> <strong>YES</strong> ... well looky there, I guessed right.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://forum.rebol.info/uploads/default/original/1X/80ef66a274a8f35e1f148fb7b3651538b6748f2b.png" data-download-href="https://forum.rebol.info/uploads/default/80ef66a274a8f35e1f148fb7b3651538b6748f2b" title="image"><img src="https://forum.rebol.info/uploads/default/original/1X/80ef66a274a8f35e1f148fb7b3651538b6748f2b.png" alt="image" data-base62-sha1="ioC1SwYNNxCUREhStOiH3Prrmxt" width="690" height="66" data-dominant-color="CECEF1"></a></div><p></p>
<p>So supplying the INTEGER! argument to GROUP-BOX and PANEL saves you on the need to put a "RETURN" when you want there to be a break.</p>
<hr>
<h2><a name="p-7590-what-other-parameters-do-panel-and-group-box-have-4" class="anchor" href="https://forum.rebol.info#p-7590-what-other-parameters-do-panel-and-group-box-have-4"></a>What Other Parameters Do PANEL and GROUP-BOX Have?</h2>
<p>The <a href="https://github.com/red/docs/blob/master/en/vid.adoc#7-panels">Red Documentation for VID</a> tells us:</p>
<pre><code>panel &lt;options&gt; [&lt;content&gt;]

&lt;options&gt; : optional list of settings for the panel.
&lt;content&gt; : panel's VID content description (block!).
</code></pre>
<p>...and...</p>
<pre><code>group-box &lt;divider&gt; &lt;options&gt; [&lt;body&gt;]

&lt;divider&gt; : optional number of row or columns (integer!).
&lt;options&gt; : optional list of settings for the panel.
&lt;body&gt;    : panel's VID content description (block!).
</code></pre>
<p>Uh, okay.  Well it seems to me that PANEL was willing to take the "divider" INTEGER! even though it doesn't say it takes it.  And there's no mention of what <code>&lt;options&gt;</code> we have, here.  <a href="https://www.rebol.com/docs/view-guide.html">Rebol Documentation for VID</a> isn't much more helpful.</p>
<p>(But it seems that whatever <code>&lt;options&gt;</code> we do have, it would be confusing if any of them involved blocks.)</p>
<p>They set the color on TEXT with just naming colors after it (background, foreground).  Could I do that, e.g. <strong><code>group-box 3 orange purple</code></strong> and get the box outline to be drawn in purple on an orange background?  If I removed the colors from one of the texts, would it too be purple on orange?</p>
<hr>
<p><img src="https://forum.rebol.info/images/emoji/twitter/man_shrugging.png?v=12" title=":man_shrugging:" class="emoji" alt=":man_shrugging:" loading="lazy" width="20" height="20"> <strong>HALF-RIGHT</strong> ... background is orange, but it seems to ignore the purpleness entirely.  Neither the line drawing the group box nor the text inside the panel inherited the purple.</p>
<p><img src="https://forum.rebol.info/uploads/default/original/1X/9953a0e6e9f23aaa31e5b6915bb4bacdae40b86b.png" alt="image" data-base62-sha1="lSoe1L1ijaJCON5qK7H9HK5ExOX" width="428" height="105"></p>
<hr>
<h2><a name="p-7590-what-if-i-gave-an-invalid-color-5" class="anchor" href="https://forum.rebol.info#p-7590-what-if-i-gave-an-invalid-color-5"></a>What If I Gave an Invalid Color?</h2>
<p>Perhaps it doesn't know <code>purple</code> and wanted <code>magenta</code> or something, and just didn't give an error.  What happens if I give it mispelled colors, like <strong><code>group-box 3 ornage grene</code></strong>?</p>
<p>One would hope it would fail.  But would it fail at the LAYOUT level, or would LAYOUT build a structure that VIEW would choke on?</p>
<p>I'd idly guess that VIEW expects not color WORD!s but to have things resolved to TUPLE!s in the layout objects, so I'm going to guess that GET-ting the words in LAYOUT production would fail... so I'll just try that in a LAYOUT with no VIEW.</p>
<hr>
<p><img src="https://forum.rebol.info/images/emoji/twitter/star.png?v=12" title=":star:" class="emoji" alt=":star:" loading="lazy" width="20" height="20"> <strong>YES</strong> ... I am good at this guessing game.</p>
<pre><code>  red&gt;&gt; layout [group-box 3 ornage grene [...]]
  *** Script Error: VID - invalid syntax at: [
      ornage grene [
         text right "Before Stream: " beforeStreamDisplay: text blue white
</code></pre>
<hr>
<h2><a name="p-7590-button-runs-the-code-in-the-block-when-pushed-6" class="anchor" href="https://forum.rebol.info#p-7590-button-runs-the-code-in-the-block-when-pushed-6"></a>BUTTON Runs The Code In The Block When Pushed</h2>
<p>Okay, in the "fairly obvious" department, I am guessing that if I push the button, it will run the code in the block.</p>
<hr>
<p><img src="https://forum.rebol.info/images/emoji/twitter/neutral_face.png?v=12" title=":neutral_face:" class="emoji" alt=":neutral_face:" loading="lazy" width="20" height="20"> <strong>YES</strong> ... but don't think I deserve any particular gold star for that insight.</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://forum.rebol.info/uploads/default/original/1X/68df1e138012f752c797df7d03ea46aa6d8901ca.png" data-download-href="https://forum.rebol.info/uploads/default/68df1e138012f752c797df7d03ea46aa6d8901ca" title="image"><img src="https://forum.rebol.info/uploads/default/optimized/1X/68df1e138012f752c797df7d03ea46aa6d8901ca_2_517x288.png" alt="image" data-base62-sha1="eXJGp2zqdx9SWPnitZVRwrjm7kS" width="517" height="288" srcset="https://forum.rebol.info/uploads/default/optimized/1X/68df1e138012f752c797df7d03ea46aa6d8901ca_2_517x288.png, https://forum.rebol.info/uploads/default/optimized/1X/68df1e138012f752c797df7d03ea46aa6d8901ca_2_775x432.png 1.5x, https://forum.rebol.info/uploads/default/original/1X/68df1e138012f752c797df7d03ea46aa6d8901ca.png 2x" data-dominant-color="F2F1F4"></a></div><p></p>
<p>The file selection box is the one provided by the OS.  It is modal--you can't move the Red window around or interact to it while the dialog is up.  Multiple selection of files is not enabled by default.  The options for REQUEST-FILE are:</p>
<pre><code>REFINEMENTS:
     /title       =&gt; Window title.
        text         [string!] 
     /file        =&gt; Default file name or directory.
        name         [string! file!] 
     /filter      =&gt; Block of filters (filter-name filter).
        list         [block!] 
     /save        =&gt; File save mode.
     /multi       =&gt; Allows multiple file selection, returned as a block.
</code></pre>
<p><em>(I'll mention that Ren-C has <a href="https://github.com/metaeducation/ren-c/blob/8516f0fca8ddce40a97e7647a087dc55e065cf3b/extensions/view/mod-view.c#L92">REQUEST-FILE for Windows and Linux/GTK</a>.  It was in the Atronix build and I retooled it to leverage the libRebol API pretty nicely, and improved some things about it.  But I don't use it for anything.)</em></p>
<hr>
<h2><a name="p-7590-okay-im-bored-7" class="anchor" href="https://forum.rebol.info#p-7590-okay-im-bored-7"></a>Okay, I'm Bored</h2>
<p>I think I pretty well understand this example.</p>
<p>Looking at the <a href="https://github.com/red/red/issues/5511">original issue</a>, though, I'm empathetic to SkySpiral7's complaint.</p>
<p>If you write:</p>
<pre><code>view [
   text right "Short" return
   text right "Much longer text"
]
</code></pre>
<p>And get:</p>
<p><img src="https://forum.rebol.info/uploads/default/original/1X/0d730c52ad4aab92b8539cab1df80139ef311aca.png" alt="340153948-e25ce4c2-8bef-492c-832d-e1af9f7f9547" data-base62-sha1="1UYHbM327G3gvu3gvN29gyl2Via" width="140" height="115"></p>
<p>Then that seems wrong to me.  If something that simple doesn't work how you'd <em>expect</em> it to, what good is this thing?</p>
<p>And it seems like something more semiotic could be used here for RETURN.</p>
<pre><code>view [
   text right "Short"
   |
   text right "Much longer text"
]
</code></pre>
<p>If single bar is too slight or used for something else, maybe double bar.</p>
<pre><code>view [
   text right "Short"
   ||
   text right "Much longer text"
]
</code></pre>
<p>Dashes? Equals?</p>
<pre><code>view [
   text right "Short"
   ===
   text right "Much longer text"
]
</code></pre>
          <p><a href="https://forum.rebol.info/t/gui-example-from-reds-github-issue-database/2257/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/gui-example-from-reds-github-issue-database/2257/1</link>
        <pubDate>Sat, 07 Sep 2024 05:02:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-2257-1</guid>
        <source url="https://forum.rebol.info/t/gui-example-from-reds-github-issue-database/2257.rss">GUI Example From Red&#39;s GitHub Issue Database</source>
      </item>
  </channel>
</rss>
