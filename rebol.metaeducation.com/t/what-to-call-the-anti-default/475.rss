<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What to call the anti-DEFAULT?</title>
    <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475</link>
    <description>DEFAULT exists to run a block of code to give something a value if it doesn&#39;t have one already.

     &gt;&gt; x: ~
     &gt;&gt; x: default [10 + 20]
     &gt;&gt; print x
     30

     &gt;&gt; x: &lt;some-tag&gt;
     &gt;&gt; x: default [10 + 20]
     &gt;&gt; print x
     &lt;some-tag&gt;

@gchiu at one time asked for an *&quot;anti-default&quot;*.  Rather than make the decision of whether to overwrite or not based on the content of the variable and only sometimes evaluate the block...*always* evaluate the block, then decide whether to overwrite or not based on the result of that evaluation.

The name suggested for it was **UPDATE**:

    &gt;&gt; x: &lt;some-tag&gt;
    &gt;&gt; x: update if false [&lt;unused-tag&gt;]
    &gt;&gt; print x
    &lt;some-tag&gt;

     &gt;&gt; x: &lt;some-tag&gt;
     &gt;&gt; x: update if true [10 + 20]
     &gt;&gt; print x
     30

This seems very useful to me.  While simple conditionals can move assignments into the block of code, e.g. `x: if c [v]` =&gt; `if c [x: v]`, more complex instances might have several points they&#39;d have to selectively do the same assignment:

    number-of-variants: update case [
        whatever1 [do some stuff, 1020]  ; update for this case
        whatever2 [do some stuff, void]  ; don&#39;t update in this case
        whatever3 [do some stuff, 304]  ; update for this case 
    ]  ; don&#39;t update if no matches

But what we noticed was that UPDATE has been taken for a somewhat esoteric port action that I don&#39;t think anyone is using at the moment.

  http://www.rebol.com/docs/words/wupdate.html

I&#39;m not totally getting it, as it seems sort of like a WAIT statement, a SYNC, a FLUSH, a FETCH... I dunno.  UPDATE seems a strange word to grab when there&#39;s this nice other function for it.

It&#39;s in use... but the only mentions are internal.  It&#39;s what native port actors use to [&quot;respond to WAKE-UP&quot;](https://github.com/metaeducation/ren-c/blob/master/src/core/n-io.c#L448).  The name could be bumped to ON-WAKE-UP.</description>
    
    <lastBuildDate>Wed, 07 May 2025 14:43:56 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What to call the anti-DEFAULT?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="8" data-topic="475">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p><strong>I Want This Function, So PERHAPS It's Time To Just Add It</strong></p>
<p>We've been talking about it for SIX YEARS.</p>
</blockquote>
</aside>
<p>Make that seven.  <img src="https://rebol.metaeducation.com/images/emoji/twitter/roll_eyes.png?v=14" title=":roll_eyes:" class="emoji" alt=":roll_eyes:" loading="lazy" width="20" height="20"></p>
<p>But I had the thought--and this is an important thought to have now vs. later...</p>
<h2><a name="p-8218-retake-maybe-maybe-optional-1" class="anchor" href="https://rebol.metaeducation.com#p-8218-retake-maybe-maybe-optional-1"></a>RETAKE MAYBE, MAYBE =&gt; OPT(IONAL)</h2>
<p>Today's MAYBE turns nulls into voids, with a shorthand of ?:</p>
<pre><code>&gt;&gt; append [a b c] maybe pick [c d] 3
== [a b c]

&gt;&gt; append [a b c] ? pick [c d] 3
== [a b c]
</code></pre>
<p>This could alternatively be OPTIONAL or OPT or ?</p>
<pre><code>&gt;&gt; append [a b c] optional pick [c d] 3
== [a b c]

&gt;&gt; append [a b c] opt pick [c d] 3
== [a b c]

&gt;&gt; append [a b c] ? pick [c d] 3
== [a b c]
</code></pre>
<p>Then we could imagine MAYBE being this updater thing, where it seems pretty literate:</p>
<pre><code>&gt;&gt; x: &lt;foo&gt;

&gt;&gt; x: maybe switch 1 + 2 [0 ["a"] 3 ["b"]]
== "b"

&gt;&gt; x: maybe switch 3 + 4 [0 ["c"] 3 ["d"]]
== "b"
</code></pre>
<p>But today's OPTIONAL in PARSE does not produce VOID, it actually produces NULL.  Most of the time it doesn't matter because you're not taking the assignment.</p>
<p>But would there be uses of an OPT parse giving you void?</p>
<pre><code>&gt;&gt; append [a b c] parse [d e] [opt across some word!]
== [a b c [d e]]

&gt;&gt; append [a b c] parse [1 2] [opt across some word!]
== [a b c]
</code></pre>
<p>You don't get a parallel to this today by saying <strong><code>opt parse [...]</code></strong> because that will void any reason that the parse didn't succeed.  You may have erroring cases that you want to error as a non-match, and some branches in your rules that want to give void.  It's strictly more powerful--and now that I look at it, likely <em>very</em> useful.</p>
<p>There was <a href="https://rebol.metaeducation.com/t/could-we-replace-parses-opt-with-try/1888">an abandoned attempt to use TRY in PARSE instead of OPT</a>, that I decided I didn't like because <strong><code>[try "s"]</code></strong> seemed weirder than the more declarative <strong><code>[opt "s"]</code></strong>.   But here we could have both options... one that gave you VOID and the other that gives you NULL.</p>
<p>Then MAYBE would be free for this cool updater construct that I really want...</p>
<p>Not only do I think this doesn't look bad, but I like the availability of the OPT shorthand vs. written out MAYBE if you want it.  And PARSE could define ? as a synonym for OPTIONAL as well.</p>
<p><img src="https://rebol.metaeducation.com/images/emoji/twitter/thinking.png?v=14" title=":thinking:" class="emoji only-emoji" alt=":thinking:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/9">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/9</link>
        <pubDate>Wed, 07 May 2025 14:33:17 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-475-9</guid>
        <source url="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss">What to call the anti-DEFAULT?</source>
      </item>
      <item>
        <title>What to call the anti-DEFAULT?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I found a 2020 thread where I just repeated this idea...again.  In that post I called it PERHAPS.  Which I like a bit better as a part of speech than MIGHT.</p>
<aside class="quote no-group" data-username="hostilefork" data-post="4" data-topic="475">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Writing <strong>might x: (...)</strong> may make it look a bit more like it's the assignment which might happen, at the cost of making it look like it might assign the block literally.</p>
</blockquote>
</aside>
<p>Eeeeh.  No.  Seeing the <strong><code>x: (...)</code></strong> looks too much like the assignment is a done deal before MIGHT (or whatever) has a chance to say anything about it.</p>
<p>I should point out that now things like CASE and SWITCH return NULL again, so PERHAPS would either have to consider both VOID and NULL as non-updating states... or you'd have to put MAYBE on nulls.</p>
<pre><code>x: perhaps case [...]
</code></pre>
<h2><a name="p-7637-i-want-this-function-so-perhaps-its-time-to-just-add-it-1" class="anchor" href="https://rebol.metaeducation.com#p-7637-i-want-this-function-so-perhaps-its-time-to-just-add-it-1"></a>I Want This Function, So PERHAPS It's Time To Just Add It</h2>
<p>We've been talking about it for SIX YEARS.</p>
          <p><a href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/8">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/8</link>
        <pubDate>Wed, 11 Sep 2024 10:47:20 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-475-8</guid>
        <source url="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss">What to call the anti-DEFAULT?</source>
      </item>
      <item>
        <title>What to call the anti-DEFAULT?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>Well, instead of <code>might</code> we could use <code>could</code>.</p>
          <p><a href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/7">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/7</link>
        <pubDate>Mon, 22 Jan 2018 06:32:40 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-475-7</guid>
        <source url="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss">What to call the anti-DEFAULT?</source>
      </item>
      <item>
        <title>What to call the anti-DEFAULT?</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Use your magic wand<br>
x: DIBBEDEEDABBEDEEBOO [...]</p>
<p>Yes MIGHT is a good candidate.<br>
Introduce it and if a better option comes along it can always be replaced by that.</p>
          <p><a href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/5">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/5</link>
        <pubDate>Sat, 20 Jan 2018 11:22:51 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-475-5</guid>
        <source url="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss">What to call the anti-DEFAULT?</source>
      </item>
      <item>
        <title>What to call the anti-DEFAULT?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="https://rebol.metaeducation.com/u/gchiu">@gchiu</a> suggests MIGHT</p>
<p>I think I like it.  Though one thought is that <strong>x: might (...)</strong> has the problem of it sounding a bit like the thing that might happen or not is the code in the block running, vs the assignment that might happen.</p>
<p><em>(Writing <strong>might x: (...)</strong> may make it look a bit more like it's the assignment which might happen, at the cost of making it look like it might assign the block literally.  :-/)</em></p>
<p>Anyway, MIGHT is my favorite so far.</p>
          <p><a href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/4">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/4</link>
        <pubDate>Fri, 19 Jan 2018 21:05:35 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-475-4</guid>
        <source url="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss">What to call the anti-DEFAULT?</source>
      </item>
      <item>
        <title>What to call the anti-DEFAULT?</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>UPDATE also is used for database manipulation.<br>
TLUAFED as anti DEFAULT.<br>
Or some other creative option, INGEST, TAKE-IN, TRY-ASSIGN<br>
I like WHATEVER too.</p>
          <p><a href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/3</link>
        <pubDate>Fri, 19 Jan 2018 18:30:38 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-475-3</guid>
        <source url="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss">What to call the anti-DEFAULT?</source>
      </item>
      <item>
        <title>What to call the anti-DEFAULT?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>I'm suggesting <code>something</code> for the anti-default though</p>
<pre><code>&gt;&gt; help something
something is a WORD! bound to a context, but has no value.
</code></pre>
<p>for the reason that <a href="https://philosophy.stackexchange.com/questions/8173/can-something-come-out-of-nothing-or-not-why">something can not come out of nothing</a></p>
<p>Alternatives include <code>becomes</code> and <code>be</code> which aren't used.</p>
          <p><a href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/2</link>
        <pubDate>Thu, 18 Jan 2018 03:47:01 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-475-2</guid>
        <source url="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss">What to call the anti-DEFAULT?</source>
      </item>
      <item>
        <title>What to call the anti-DEFAULT?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>DEFAULT exists to run a block of code to give something a value if it doesn't have one already.</p>
<pre><code> &gt;&gt; x: ~
 &gt;&gt; x: default [10 + 20]
 &gt;&gt; print x
 30

 &gt;&gt; x: &lt;some-tag&gt;
 &gt;&gt; x: default [10 + 20]
 &gt;&gt; print x
 &lt;some-tag&gt;
</code></pre>
<p><a class="mention" href="https://rebol.metaeducation.com/u/gchiu">@gchiu</a> at one time asked for an <em>"anti-default"</em>.  Rather than make the decision of whether to overwrite or not based on the content of the variable and only sometimes evaluate the block...<em>always</em> evaluate the block, then decide whether to overwrite or not based on the result of that evaluation.</p>
<p>The name suggested for it was <strong>UPDATE</strong>:</p>
<pre><code>&gt;&gt; x: &lt;some-tag&gt;
&gt;&gt; x: update if false [&lt;unused-tag&gt;]
&gt;&gt; print x
&lt;some-tag&gt;

 &gt;&gt; x: &lt;some-tag&gt;
 &gt;&gt; x: update if true [10 + 20]
 &gt;&gt; print x
 30
</code></pre>
<p>This seems very useful to me.  While simple conditionals can move assignments into the block of code, e.g. <code>x: if c [v]</code> =&gt; <code>if c [x: v]</code>, more complex instances might have several points they'd have to selectively do the same assignment:</p>
<pre><code>number-of-variants: update case [
    whatever1 [do some stuff, 1020]  ; update for this case
    whatever2 [do some stuff, void]  ; don't update in this case
    whatever3 [do some stuff, 304]  ; update for this case 
]  ; don't update if no matches
</code></pre>
<p>But what we noticed was that UPDATE has been taken for a somewhat esoteric port action that I don't think anyone is using at the moment.</p>
<p><a href="http://www.rebol.com/docs/words/wupdate.html" class="inline-onebox">REBOL: Update - Function Summary</a></p>
<p>I'm not totally getting it, as it seems sort of like a WAIT statement, a SYNC, a FLUSH, a FETCH... I dunno.  UPDATE seems a strange word to grab when there's this nice other function for it.</p>
<p>It's in use... but the only mentions are internal.  It's what native port actors use to <a href="https://github.com/metaeducation/ren-c/blob/master/src/core/n-io.c#L448">"respond to WAKE-UP"</a>.  The name could be bumped to ON-WAKE-UP.</p>
          <p><a href="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475/1</link>
        <pubDate>Thu, 18 Jan 2018 00:51:07 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-475-1</guid>
        <source url="https://rebol.metaeducation.com/t/what-to-call-the-anti-default/475.rss">What to call the anti-DEFAULT?</source>
      </item>
  </channel>
</rss>
