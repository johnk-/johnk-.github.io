<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>(TRANSCODE &quot;&quot;) should be empty BLOCK!, not NULL</title>
    <link>https://rebol.metaeducation.com/t/transcode-should-be-empty-block-not-null/2495</link>
    <description>I faced a circumstance in the CONSOLE, where I wanted to know if you entered nothing.  e.g. if you just hit enter:

    &gt;&gt;     ; &lt;-- hit enter here

    &gt;&gt;

So it just cycled, the prompt, no `==` output.

If you actually loaded the empty code as `[]` and evaluated it, then you would get a GHOST!.

    &gt;&gt;   ; &lt;-- hit enter here
    == \~,~\  ; antiform comma! (&quot;ghost!&quot;)
 
    &gt;&gt;

I found that annoying.  However, if you actually did put something in there that evaluated to ghost, I wanted to see it:

    &gt;&gt; comment &quot;for example&quot;
    == \~,~\  ; antiform comma! (&quot;ghost!&quot;)
 
    &gt;&gt;

So sure, I could write:

     let code: transcode ...whatever...

     if [] = code [  ; nothing loaded
         ...cycle prompt, don&#39;t evaluate...
     ]

But I got the feeling that a TRANSCODE of an empty string (or string that is all comments&quot;) is probably one of those edge cases that people are probably not expecting... and if it happens you probably need special handling.  So making it have better error locality and handling by being NULL seemed like a good idea.

So I changed it to return NULL if nothing was transcoded.

    if not code [  ; (or `if null? code`, or `code else [...]` etc.)
        ...nothing loaded, cycle prompt, don&#39;t evaluate...
    ]

BUT having experienced some of the epicycles beyond the console, I think this was a mistake.

## Transcode Has A Lot Of ERROR! Returns

If **`try transcode ...`** is going to be useful at all, you probably don&#39;t want to conflate the many potential errors it can return with just returning null because it was a valid empty input.

And in the basic case, an empty script is a valid script.  It does nothing.

Emptiness is easy enough to test for.  So I think that&#39;s what should be done here.</description>
    
    <lastBuildDate>Thu, 19 Jun 2025 21:35:02 +0000</lastBuildDate>
    <category>Lexer</category>
    <atom:link href="https://rebol.metaeducation.com/t/transcode-should-be-empty-block-not-null/2495.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>(TRANSCODE &quot;&quot;) should be empty BLOCK!, not NULL</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I faced a circumstance in the CONSOLE, where I wanted to know if you entered nothing.  e.g. if you just hit enter:</p>
<pre><code>&gt;&gt;     ; &lt;-- hit enter here

&gt;&gt;
</code></pre>
<p>So it just cycled, the prompt, no <code>==</code> output.</p>
<p>If you actually loaded the empty code as <code>[]</code> and evaluated it, then you would get a GHOST!.</p>
<pre><code>&gt;&gt;   ; &lt;-- hit enter here
== \~,~\  ; antiform comma! ("ghost!")

&gt;&gt;
</code></pre>
<p>I found that annoying.  However, if you actually did put something in there that evaluated to ghost, I wanted to see it:</p>
<pre><code>&gt;&gt; comment "for example"
== \~,~\  ; antiform comma! ("ghost!")

&gt;&gt;
</code></pre>
<p>So sure, I could write:</p>
<pre><code> let code: transcode ...whatever...

 if [] = code [  ; nothing loaded
     ...cycle prompt, don't evaluate...
 ]
</code></pre>
<p>But I got the feeling that a TRANSCODE of an empty string (or string that is all comments") is probably one of those edge cases that people are probably not expecting... and if it happens you probably need special handling.  So making it have better error locality and handling by being NULL seemed like a good idea.</p>
<p>So I changed it to return NULL if nothing was transcoded.</p>
<pre><code>if not code [  ; (or `if null? code`, or `code else [...]` etc.)
    ...nothing loaded, cycle prompt, don't evaluate...
]
</code></pre>
<p>BUT having experienced some of the epicycles beyond the console, I think this was a mistake.</p>
<h2><a name="p-8447-transcode-has-a-lot-of-error-returns-1" class="anchor" href="https://rebol.metaeducation.com#p-8447-transcode-has-a-lot-of-error-returns-1"></a>Transcode Has A Lot Of ERROR! Returns</h2>
<p>If <strong><code>try transcode ...</code></strong> is going to be useful at all, you probably don't want to conflate the many potential errors it can return with just returning null because it was a valid empty input.</p>
<p>And in the basic case, an empty script is a valid script.  It does nothing.</p>
<p>Emptiness is easy enough to test for.  So I think that's what should be done here.</p>
          <p><a href="https://rebol.metaeducation.com/t/transcode-should-be-empty-block-not-null/2495/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/transcode-should-be-empty-block-not-null/2495/1</link>
        <pubDate>Thu, 19 Jun 2025 21:35:02 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2495-1</guid>
        <source url="https://rebol.metaeducation.com/t/transcode-should-be-empty-block-not-null/2495.rss">(TRANSCODE &quot;&quot;) should be empty BLOCK!, not NULL</source>
      </item>
  </channel>
</rss>
