<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Module Headers and Quoting: The Final Verdict</title>
    <link>https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677</link>
    <description>So there&#39;s been a long historical fight on whether you need quotes on module header fields...:

    Rebol [
        Title: {Your title here}
        Type: &#39;Module
        Name: &#39;Your-Module-Name-Here
    ]

...or if you don&#39;t, and you can just say:

    Rebol [
        Title: {Your title here}
        Type: Module
        Name: Your-Module-Name-Here
    ]

This wasn&#39;t a tremendously huge problem in historical Rebol, because the standard fields did not take WORD! types.  The issue was on the rise with the `Type:` and `Name:` fields in modules.

**While I have flipped back and forth on which I support, I have never flipped on the idea that this has to be a standardardized.**

But today, I think my verdict on which way to go is pretty clear.

## Just Say No! &lt;sub&gt;(To Ticks In Unevaluated Contexts)&lt;/sub&gt;

It&#39;s visual pollution that serves no purpose.

Really, this is a dialect in a BLOCK!.  It uses SET-WORD!s.  It is not an OBJECT!.

You can make an object out of it, but you need to be careful about it.  Not only do you not have to evaluate module headers, *you should not evaluate module headers*.

It seems to me that the TO OBJECT! conversions can handle this; it fits the bill of my rule of TO not doing evaluation.  So the old &quot;CONSTRUCT&quot; operation can go.

## Exception: When Quotes are Part of the Dialect

If you come up with your own header field, used for your own script type&#39;s purposes, use quotes if you want...if the quoting has meaning.

Maybe you have some kind of generic thing like `initial-value:` up top in the header.  And that can be ANY-VALUE!, so anything you want to run a test on--for instance.  If you have:

    Initial-Value: &#39;&#39;&#39;&#39;&#39;&lt;foo&gt;

Then that&#39;s fine.  But for fields like the module&#39;s type, there is no such distinction in meaning intended by &#39;Module vs. Module.  So that&#39;s different.</description>
    
    <lastBuildDate>Tue, 29 Apr 2025 08:45:56 +0000</lastBuildDate>
    <category>Modules</category>
    <atom:link href="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Module Headers and Quoting: The Final Verdict</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <h1><a name="p-8186-conclusions-1" class="anchor" href="https://rebol.metaeducation.com#p-8186-conclusions-1"></a>Conclusions</h1>
<hr>
<p>It seems people haven't been clamoring for consensus about this.  The only person I could find raising the issue in bug databases <strong><a href="https://github.com/metaeducation/rebol-issues/issues/2176">was... uh... me.</a></strong>  <img src="https://rebol.metaeducation.com/images/emoji/twitter/roll_eyes.png?v=14" title=":roll_eyes:" class="emoji" alt=":roll_eyes:" loading="lazy" width="20" height="20"></p>
<h2><a name="p-8186-unevaluated-headers-are-a-win-2" class="anchor" href="https://rebol.metaeducation.com#p-8186-unevaluated-headers-are-a-win-2"></a>Unevaluated Headers Are A Win</h2>
<p>There does seem to have been a shift from Rebol2 and the understandings of <code>rebol.org</code> in the R3-Alpha world to use WORD!s instead of LIT-WORD!.</p>
<p>I'll observe <strong><code>license: none</code></strong> makes more sense than <strong><code>license: null</code></strong> ... and I actually think this ties into the "not evaluated" nature of the situation.  NONE is (now) more obviously a WORD! in an enumeration, <em>that isn't expected to be evaluated</em>.</p>
<p>We also know that TRUE and FALSE and YES and NO and ON and OFF aren't meant to be "evaluated" (directly) either.  So "scant" evaluation is obsoleted by Ren-C.... we make the simplifying leap from <em>"headers are barely evaluated"</em> to <em>"headers are not evaluated at all"</em>.</p>
<p>That means <code>system.standard.header</code> can be dropped completely.  Instead, just have a world where a "null" header field can be presumed to be a field that's not there at all.  (e.g. via TRY getting that field.)</p>
<p>Fully unevaluated headers... gold star.  <img src="https://rebol.metaeducation.com/images/emoji/twitter/star.png?v=14" title=":star:" class="emoji" alt=":star:" loading="lazy" width="20" height="20"></p>
<h2><a name="p-8186-i-dont-think-the-lowercase-keys-are-a-big-loss-3" class="anchor" href="https://rebol.metaeducation.com#p-8186-i-dont-think-the-lowercase-keys-are-a-big-loss-3"></a>I Don't Think The Lowercase Keys Are A Big Loss</h2>
<p>The best argument for retaining the capitalization of keys is <a class="mention" href="https://rebol.metaeducation.com/u/rgchris">@rgchris</a>'s point about the convenience of FORM-ing e.g. HTTP headers.  But if casing doesn't matter, I think we should probably rethink that as using the case that works with the binding in the system... and generate the casing you want (e.g. by a PROPERCASE OF function) on output.</p>
<p>And I don't think the lowercasing is a big loss:</p>
<pre><code>Rebol [
    title: "Test parsing"
    file: %test-parsing.r
    copyright: [2012 "Saphirion AG"]
    license: {
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0
    }
    author: "Ladislav Mecir"
    purpose: "Test framework"
]
</code></pre>
<p>It does look <em>different</em>, but when you consider all the simplifications -and- not havin to type the capital letters, doesn't it start to feel more consistent?  <em>(If you look at it through newbie eyes, vs. just "what you're used to"...)</em></p>
<pre><code>Rebol [
    Title: "Test parsing"
    File: %test-parsing.r
    Copyright: [2012 "Saphirion AG"]
    License: {
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0
    }
    Author: "Ladislav Mecir"
    Purpose: "Test framework"
]
</code></pre>
<p>When you put them side-by-side, I don't see a big enough benefit to the propercasing to justify it.  And hey, easier typing.</p>
          <p><a href="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/6">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/6</link>
        <pubDate>Tue, 29 Apr 2025 08:45:56 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1677-6</guid>
        <source url="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677.rss">Module Headers and Quoting: The Final Verdict</source>
      </item>
      <item>
        <title>Module Headers and Quoting: The Final Verdict</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <h1><a name="p-8185-summary-of-perspectives-1" class="anchor" href="https://rebol.metaeducation.com#p-8185-summary-of-perspectives-1"></a>SUMMARY OF PERSPECTIVES</h1>
<hr>
<p>My bias is <strong><code>[type: module]</code></strong> over <strong><code>[Type: 'module]</code></strong> when technical and aesthetic issues are taken into account.  <a class="mention" href="https://rebol.metaeducation.com/u/iarnold">@iArnold</a> agrees.</p>
<h2><a name="p-8185-oldes-rebol3-2" class="anchor" href="https://rebol.metaeducation.com#p-8185-oldes-rebol3-2"></a>Oldes Rebol3</h2>
<p>It seems that Oldes may be ahead of the curve here... <a href="https://github.com/Oldes/Rebol3/blob/9970dbebcb2731b6f00465a48ce04974478531a7/src/modules/github.reb">e.g. in his GitHub Module</a>:</p>
<pre><code>REBOL [
    version: 0.2.0
    title: "Rebol/GitHub utilities"
    name: github
    type: module
    date: 8-Nov-2024
    needs: json
    home: https://github.com/Oldes/Rebol-GitHub
    exports: [
        github-query
        github-repo
        github-run
        github-get
        github-post
        github-edit
    ]
]
</code></pre>
<p>I have stated that despite our seeming disagreement, retrospectively I've noticed that I more often agree with his comments on old threads or bugs than I do with other people on the thread who aren't me.</p>
<blockquote>
<p><strong>UPDATE:</strong> Maybe I spoke too soon, I was browsing through his commits and on March 29th he added ANY-WORD! as the type for module names, labeling it <a href="https://github.com/Oldes/Rebol3/commit/76ee1e3f82fd34543aba0558f871802ea3b8c62a">"FIX: Allow lit-word as module name in header"</a>.  So he thinks it should be allowed for some reason, though doesn't explain why.</p>
</blockquote>
<h2><a name="p-8185-chriss-002-3" class="anchor" href="https://rebol.metaeducation.com#p-8185-chriss-002-3"></a>Chris's $0.02</h2>
<p>In another thread, <a class="mention" href="https://rebol.metaeducation.com/u/rgchris">@rgchris</a> observed:</p>
<aside class="quote no-group quote-modified" data-username="rgchris" data-post="10" data-topic="1439">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/rgchris/48/14_2.png" class="avatar"><a href="https://rebol.metaeducation.com/t/case-insensitivity-vs-case-preservation-cant-have-both/1439/10">Case Insensitivity vs. Case-Preservation (can't have both?)</a></div>
<blockquote>
<p>In terms of my own case insensitivity, I use initial caps for headers (including <code>Rebol []</code>) as it has a formality to it but would balk at having to use said caps in accessing that information anywhere in the script <code>system.script.header.title</code>.</p>
<p>The other place I use it in a mixed way is representing HTTP headers: <code>header-proto: make object! [Content-Type: "text/html"]</code>—there are benefits when it comes to FORM-ing headers in such a way, but again, would feel icky to access them that way in paths: <code>header-proto.content-type</code></p>
</blockquote>
</aside>
<p>There's a bit of ambivalence there...which he can clarify.  But the greater aversion appears to be having to use the uppercased keys on access:</p>
<pre><code>Rebol [title: "text/html"]  ; a bit sad it's a little less formal than Title:

system.script.header.Title  ; measurably more annoying ("would balk at")
</code></pre>
<p>So if the keys must match the access--and you only get the two choices--seems he'd go with the lowercase keys in the header.</p>
<p>Worth noting is that <a href="https://stackoverflow.com/questions/7718476/are-http-headers-content-type-c-case-sensitive">HTTP headers are case-insensitive</a>.  But the issue of wanting to FORM a header with the caps is something to be aware of.  Yet maybe this is a job for applying PROPERCASE on those keys when serializing them, vs. making header objects themselves carry that responsibility...?</p>
<h2><a name="p-8185-carls-brianhs-rebol3-examples-4" class="anchor" href="https://rebol.metaeducation.com#p-8185-carls-brianhs-rebol3-examples-4"></a>Carl's (BrianH's?) Rebol3 Examples</h2>
<p><a href="https://www.rebol.com/docs/core23/rebolcore-5.html#section-5">In the Rebol2 documentation on script headers</a>, Carl doesn't have any examples of words.  But he does say (emphasis mine):</p>
<blockquote>
<p>When a script is loaded, <strong>the header block is evaluated</strong> and its words are set to their defined values. These values are used by the interpreter and can also be used by the script itself.</p>
</blockquote>
<p>So that runs up against my feeling that the header block should specifically <em>not</em> be thought of as being "evaluated" (in the sense of DO)... rather as a dialect.</p>
<p>But looking at the <a href="https://www.rebol.com/r3/docs/concepts/modules-defining.html">Rebol3 documentation for modules</a>, we see plain words... how much of this is Carl's leaning or Brian Hawley's one has to guess:</p>
<pre><code>REBOL [
    Title: "Stock Trading Module"
    Name: stock-trade
    Version: 1.2.0
    Type: module
    Exports: [buy sell]
]
</code></pre>
<p>There's not a lot of examples of this in the Rebol3 sources themselves.  But we do see for instance <a href="https://github.com/rebol/rebol/blob/25033f897b2bd466068d7663563cd3ff64740b94/src/mezz/sys-load.r#L12"><strong>[Context: sys]</strong></a> and <a href="https://github.com/rebol/rebol/blob/25033f897b2bd466068d7663563cd3ff64740b94/src/boot/draw.r#L12-L14"><strong>[Name: draw, Type: extension, Exports: none]</strong></a>.</p>
<p><a href="https://github.com/earl/rebol3/blob/a1699b19407bafdc6abbc8fcc47f9f30924a6405/modules/extload.r3">And an example that comes up from @earl</a> is consistent with this.  So I'd</p>
<h2><a name="p-8185-rebolorg-guidance-on-module-headers-5" class="anchor" href="https://rebol.metaeducation.com#p-8185-rebolorg-guidance-on-module-headers-5"></a><code>Rebol.org</code> Guidance On Module Headers</h2>
<p>I cached it here:</p>
<p><a href="https://rebol.metaeducation.com/t/cache-of-rebol-org-writeup-of-standard-header-fields/1674" class="inline-onebox">Cache of rebol.org Writeup of Standard Header Fields</a></p>
<p>It makes explicit mention of LIT-WORD! in four places:</p>
<blockquote>
<p><strong>platform:</strong> - The platform(s) on which this script will run. Can be a lit-word or block.</p>
<p><strong>type:</strong> - Says what type of thing the script is, or how it is used. What its purpose is. Can be a lit-word or block.</p>
<p><strong>domain:</strong> - What application area(s) the script addresses. (...) Can be a lit-word or block.</p>
<p><strong>license:</strong> - Conditions under which the script can be used. See <a href="http://www.opensource.org/licenses/index.html">http://www.opensource.org/licenses/index.html</a> for information about various open source licenses. A string, lit-word, block, or none.</p>
</blockquote>
<p>You wind up with kind of evaluation rules, where NONE isn't an enumeration value but something that gets "looked up" in "scant evaluation"...so it does look like evaluation:</p>
<pre><code>library: [
    level: 'intermediate
    platform: 'all
    type: [tutorial tool]
    domain: [ftp game]
    tested-under: none
    support: none
    license: none
    see-also: none
]
</code></pre>
<h2><a name="p-8185-red-source-code-6" class="anchor" href="https://rebol.metaeducation.com#p-8185-red-source-code-6"></a>Red Source Code</h2>
<p>Red doesn't seem to make very aggressive use of headers in its own sources. They do propercase the keys, and the Needs field uses a LIT-WORD!s in the header... at least in the examples I can find... <a href="https://github.com/red/red/blob/8f9baa70b7bcc911b0236df532c3ba9f6dd3918f/tests/TUI/tui.red">such as their recent Textual UI stuff</a></p>
<pre><code>Red [
    Title: "Red TUI test script"
    Needs: 'View
    Config: [GUI-engine: 'terminal]
]
</code></pre>
<p>Red doesn't seem to error if you say <code>[Needs: view]</code>, but it also doesn't error if you say <code>[Needs: asdf]</code>.  Sigh, am I going to look to see what is happening, <a href="https://github.com/red/red/blob/8f9baa70b7bcc911b0236df532c3ba9f6dd3918f/encapper/compiler.r#L4928">yes... okay here</a></p>
<pre><code>list: select header first [Needs:]
find [word! lit-word! block!] type?/word list  ;-- do not process other types
</code></pre>
<p>So explicitly tolerating WORD! and LIT-WORD!, for whatever that is worth.</p>
<h2><a name="p-8185-boriss-scripts-7" class="anchor" href="https://rebol.metaeducation.com#p-8185-boriss-scripts-7"></a>Boris's Scripts</h2>
<p>I look at <span class="mention">@hiiamboris</span>'s stuff as an example of a "prolific modern adopter with strong opinions".</p>
<p><a href="https://codeberg.org/hiiamboris/red-common/src/commit/5121c8934b1ef053df75e9628b564c7a0017baf2/assert.red">He typically uses lowercase keys, plus no quotes on WORD!s</a>:</p>
<pre><code>Red [
    title: "#ASSERT macro and ASSERT mezzanine"
    purpose: "Allow embedding sanity checks into the code..."
    author: @hiiamboris
    license: BSD-3
    provides: assert
    notes: {
        ...
    }
]
</code></pre>
<p>But it's not 100 consistent. <a href="https://codeberg.org/hiiamboris/retris/src/commit/5f08eacfe63de82ed357c79058a2348ff597830f/retris.red">e.g. in his Tetris clone</a>, he puts the apostrophe on view...and on the license as well:</p>
<pre><code>Red [
    title: "Tetris Redborn!"
    description: "Red Tetris Game YAY!"
    author: @hiiamboris
    license: 'MIT
    version: 1.0.0
    needs: 'view
]	
</code></pre>
<p><a href="https://codeberg.org/hiiamboris/red-spaces/src/commit/8be7198d8f6e6e52f84dd0778c93ac93c597e933/programs/parsee.red">Then on his PARSE visualizer</a> he puts the needs in a block, but still quotes the license:</p>
<pre><code>Red [
    title: "ParSEE"
    description: "Parsing flow visual analysis tool"
    purpose: "Never again debug Parse rules using randomly inserted print statements"
    author: @hiiamboris
    license: 'BSD-3
    needs: [View]
    notes: {
       ...
   }
]
</code></pre>
<p><a href="https://github.com/red/red/issues/5397">In a bug he reports</a> he seems aware you can write just <strong><code>[needs: view]</code></strong> without the quote.</p>
          <p><a href="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/5">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/5</link>
        <pubDate>Tue, 29 Apr 2025 08:14:25 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1677-5</guid>
        <source url="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677.rss">Module Headers and Quoting: The Final Verdict</source>
      </item>
      <item>
        <title>Module Headers and Quoting: The Final Verdict</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="iArnold" data-post="3" data-topic="1677">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/iarnold/48/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p><strong>type: module</strong><br>
looks even better.</p>
</blockquote>
</aside>
<p>This is worth talking about, especially in light of the question of if binding is going to wind up being case-sensitive.</p>
<p>I have a hard time telling if I actually prefer the capitalization or am just used to it.  :-/</p>
<p>For the moment there are bigger things to focus on, but this will have to be reasoned about someday.</p>
          <p><a href="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/4">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/4</link>
        <pubDate>Sun, 22 Aug 2021 20:44:33 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1677-4</guid>
        <source url="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677.rss">Module Headers and Quoting: The Final Verdict</source>
      </item>
      <item>
        <title>Module Headers and Quoting: The Final Verdict</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="1677">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Discussion of the capitalization of the keys is something that needs study as well. But it seems to be following email header conventions... e.g. <strong>From: bob@wherever</strong></p>
</blockquote>
</aside>
<p>Well no capitalization is fine. Next thing would be CamelCase.<br>
<strong>type: module</strong><br>
looks even better.</p>
          <p><a href="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/3</link>
        <pubDate>Sun, 22 Aug 2021 19:40:39 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1677-3</guid>
        <source url="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677.rss">Module Headers and Quoting: The Final Verdict</source>
      </item>
      <item>
        <title>Module Headers and Quoting: The Final Verdict</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I will also add that I think <strong>Type: module</strong> looks better than <strong>Type: Module</strong>.</p>
<p>Discussion of the capitalization of the keys is something that needs study as well.  But it seems to be following email header conventions... e.g. <strong>From: bob@wherever</strong></p>
<p>The script library doesn't really enforce any consistency on these points, but right side words are pretty much always lowercase.</p>
          <p><a href="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/2</link>
        <pubDate>Sun, 22 Aug 2021 00:27:51 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1677-2</guid>
        <source url="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677.rss">Module Headers and Quoting: The Final Verdict</source>
      </item>
      <item>
        <title>Module Headers and Quoting: The Final Verdict</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>So there's been a long historical fight on whether you need quotes on module header fields...:</p>
<pre><code>Rebol [
    Title: {Your title here}
    Type: 'Module
    Name: 'Your-Module-Name-Here
]
</code></pre>
<p>...or if you don't, and you can just say:</p>
<pre><code>Rebol [
    Title: {Your title here}
    Type: Module
    Name: Your-Module-Name-Here
]
</code></pre>
<p>This wasn't a tremendously huge problem in historical Rebol, because the standard fields did not take WORD! types.  The issue was on the rise with the <code>Type:</code> and <code>Name:</code> fields in modules.</p>
<p><strong>While I have flipped back and forth on which I support, I have never flipped on the idea that this has to be a standardardized.</strong></p>
<p>But today, I think my verdict on which way to go is pretty clear.</p>
<h2><a name="p-5402-just-say-no-subto-ticks-in-unevaluated-contextssub-1" class="anchor" href="https://rebol.metaeducation.com#p-5402-just-say-no-subto-ticks-in-unevaluated-contextssub-1"></a>Just Say No! <sub>(To Ticks In Unevaluated Contexts)</sub></h2>
<p>It's visual pollution that serves no purpose.</p>
<p>Really, this is a dialect in a BLOCK!.  It uses SET-WORD!s.  It is not an OBJECT!.</p>
<p>You can make an object out of it, but you need to be careful about it.  Not only do you not have to evaluate module headers, <em>you should not evaluate module headers</em>.</p>
<p>It seems to me that the TO OBJECT! conversions can handle this; it fits the bill of my rule of TO not doing evaluation.  So the old "CONSTRUCT" operation can go.</p>
<h2><a name="p-5402-exception-when-quotes-are-part-of-the-dialect-2" class="anchor" href="https://rebol.metaeducation.com#p-5402-exception-when-quotes-are-part-of-the-dialect-2"></a>Exception: When Quotes are Part of the Dialect</h2>
<p>If you come up with your own header field, used for your own script type's purposes, use quotes if you want...if the quoting has meaning.</p>
<p>Maybe you have some kind of generic thing like <code>initial-value:</code> up top in the header.  And that can be ANY-VALUE!, so anything you want to run a test on--for instance.  If you have:</p>
<pre><code>Initial-Value: '''''&lt;foo&gt;
</code></pre>
<p>Then that's fine.  But for fields like the module's type, there is no such distinction in meaning intended by 'Module vs. Module.  So that's different.</p>
          <p><a href="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677/1</link>
        <pubDate>Sun, 22 Aug 2021 00:12:43 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1677-1</guid>
        <source url="https://rebol.metaeducation.com/t/module-headers-and-quoting-the-final-verdict/1677.rss">Module Headers and Quoting: The Final Verdict</source>
      </item>
  </channel>
</rss>
