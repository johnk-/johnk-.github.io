<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Should WORD! Allow Sigils at non-HEAD Positions?</title>
    <link>https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490</link>
    <description>Rebol2, R3-Alpha, and Red have always let you put apostrophes in WORD! if they&#39;re not at the head.

* That gives you weird WORD!s like **`didn&#39;t`** and **`isn&#39;t`**. 

* It also lets us and words with apostrophes to indicate &quot;prime&quot; and &quot;double-prime&quot; derivitave things, like **`f&#39;`** or **`f&#39;&#39;`**

So Ren-C has allowed this as well.

But now, we&#39;re in the era of Sigils.  What reasoning would there be to allow [$ ^ @] in WORD!s at non-head positions?

Well... it would give slightly more compatibility with [WebAssembly Text Format](https://rebol.metaeducation.com/t/webassembly-text-format-wat/2223).  They have identifiers with $ in the name...

*  [I saw **$FUNCSIG$ii** as a real example](https://medium.com/ax1al/learning-and-trying-to-reverse-web-assembly-for-fun-da98fdf962e8)

* Things like **`$$`** or **`$$a`** would still be illegal, though you could say **`$a$`** as a TIED! WORD! with spelling &quot;a$&quot;

But given some recent applications of [using $ to do bound PICKs](https://rebol.metaeducation.com/t/reacting-to-tie-to-automate-binding/2462/3?u=hostilefork), I came to wonder if we could shorthand:

    b: 10

    block: [a b c]

    assert [10 = get pick:bind block 2]

A plain PICK could be shorthanded as **`second`**.  So you could say **`second:bind`**, since SECOND is a specialization of PICK.

But I thought that maybe **`second$`** could make an okay shorthand for **`second:bind`**
     
    assert [10 = get second$ block]

And in turn, that made me think **`pick$`** would be a generically useful shorthand for **`pick:bind`**

It&#39;s certainly more communicative than **`pick*`**.

Whether these shorthands go in the box or not, I don&#39;t really know what the benefit is to prohibiting them.</description>
    
    <lastBuildDate>Tue, 17 Jun 2025 14:39:32 +0000</lastBuildDate>
    <category>Lexer</category>
    <atom:link href="https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Should WORD! Allow Sigils at non-HEAD Positions?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>They seem ugly until you consider the convenience.</p>
<p>Ending in <code>$</code> is not not a bad name for "this thing, but bound":</p>
<pre><code>foo: func [var [word!] ...] [
    var$: bind context var
    ...
]
</code></pre>
          <p><a href="https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490/3</link>
        <pubDate>Tue, 17 Jun 2025 14:39:32 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2490-3</guid>
        <source url="https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490.rss">Should WORD! Allow Sigils at non-HEAD Positions?</source>
      </item>
      <item>
        <title>Should WORD! Allow Sigils at non-HEAD Positions?</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="2490">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Whether these shorthands go in the box or not, I don't really know what the benefit is to prohibiting them.</p>
</blockquote>
</aside>
<p>I agree â€” I think they should be allowed as a normal component of WORD!s.</p>
<p>(Note that Haskell also allows apostrophes in identifiers, and I get plenty use out of that. Similarly, Lispers like to name things with question marks and asterisks, since those are allowed in Lisps.)</p>
          <p><a href="https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490/2</link>
        <pubDate>Tue, 17 Jun 2025 10:43:14 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2490-2</guid>
        <source url="https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490.rss">Should WORD! Allow Sigils at non-HEAD Positions?</source>
      </item>
      <item>
        <title>Should WORD! Allow Sigils at non-HEAD Positions?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Rebol2, R3-Alpha, and Red have always let you put apostrophes in WORD! if they're not at the head.</p>
<ul>
<li>
<p>That gives you weird WORD!s like <strong><code>didn't</code></strong> and <strong><code>isn't</code></strong>.</p>
</li>
<li>
<p>It also lets us and words with apostrophes to indicate "prime" and "double-prime" derivitave things, like <strong><code>f'</code></strong> or <strong><code>f''</code></strong></p>
</li>
</ul>
<p>So Ren-C has allowed this as well.</p>
<p>But now, we're in the era of Sigils.  What reasoning would there be to allow [$ ^ @] in WORD!s at non-head positions?</p>
<p>Well... it would give slightly more compatibility with <a href="https://rebol.metaeducation.com/t/webassembly-text-format-wat/2223">WebAssembly Text Format</a>.  They have identifiers with $ in the name...</p>
<ul>
<li>
<p><a href="https://medium.com/ax1al/learning-and-trying-to-reverse-web-assembly-for-fun-da98fdf962e8">I saw <strong>$FUNCSIG$ii</strong> as a real example</a></p>
</li>
<li>
<p>Things like <strong><code>$$</code></strong> or <strong><code>$$a</code></strong> would still be illegal, though you could say <strong><code>$a$</code></strong> as a TIED! WORD! with spelling "a$"</p>
</li>
</ul>
<p>But given some recent applications of <a href="https://rebol.metaeducation.com/t/reacting-to-tie-to-automate-binding/2462/3">using $ to do bound PICKs</a>, I came to wonder if we could shorthand:</p>
<pre><code>b: 10

block: [a b c]

assert [10 = get pick:bind block 2]
</code></pre>
<p>A plain PICK could be shorthanded as <strong><code>second</code></strong>.  So you could say <strong><code>second:bind</code></strong>, since SECOND is a specialization of PICK.</p>
<p>But I thought that maybe <strong><code>second$</code></strong> could make an okay shorthand for <strong><code>second:bind</code></strong></p>
<pre><code>assert [10 = get second$ block]
</code></pre>
<p>And in turn, that made me think <strong><code>pick$</code></strong> would be a generically useful shorthand for <strong><code>pick:bind</code></strong></p>
<p>It's certainly more communicative than <strong><code>pick*</code></strong>.</p>
<p>Whether these shorthands go in the box or not, I don't really know what the benefit is to prohibiting them.</p>
          <p><a href="https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490/1</link>
        <pubDate>Tue, 17 Jun 2025 02:15:49 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2490-1</guid>
        <source url="https://rebol.metaeducation.com/t/should-word-allow-sigils-at-non-head-positions/2490.rss">Should WORD! Allow Sigils at non-HEAD Positions?</source>
      </item>
  </channel>
</rss>
