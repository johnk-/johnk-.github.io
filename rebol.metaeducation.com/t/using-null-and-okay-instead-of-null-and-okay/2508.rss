<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Using ~null~ and ~okay~ instead of NULL and OKAY</title>
    <link>https://rebol.metaeducation.com/t/using-null-and-okay-instead-of-null-and-okay/2508</link>
    <description>When I first proposed some of the ideas like quasiforms, they were quite foreign.

Now they&#39;re familiar.  Given their familiarity, I start to wonder if the &quot;weird&quot; nature of null and okay is tolerable for source code.  e.g. might you write:

     var: ~null~

...instead of...:

    var: null

It&#39;s a bit annoying to type, but if you get used to it, it&#39;s not necessarily bad to stand out in that way.

Not that this should matter too much, but using `~null~` is inherently faster.  There&#39;s no variable to look up... you&#39;re just turning a WORD! at the quasiform lift level to the antiform lift level.  (Technically that does require validation, since not all quasi-words are legal anti-words, but this validation can be arbitrarily fast.)

One negative side of using the quasiforms is it may add noise where it&#39;s not something you want to emphasize.  As such, maybe this is a decision to be made on a case-by-case basis... do you want to draw attention or not, like... &quot;HEY, I&#39;m setting this to NULL and that&#39;s an important point!&quot;

Not sure.  But I find myself tempted to use the quasiform now and again, and usually decide to back it out because I feel like it should be &quot;always do it&quot; or &quot;never do it&quot;.  But maybe that&#39;s the worng dichotomy.</description>
    
    <lastBuildDate>Mon, 14 Jul 2025 07:33:24 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://rebol.metaeducation.com/t/using-null-and-okay-instead-of-null-and-okay/2508.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Using ~null~ and ~okay~ instead of NULL and OKAY</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>When I first proposed some of the ideas like quasiforms, they were quite foreign.</p>
<p>Now they're familiar.  Given their familiarity, I start to wonder if the "weird" nature of null and okay is tolerable for source code.  e.g. might you write:</p>
<pre><code> var: ~null~
</code></pre>
<p>...instead of...:</p>
<pre><code>var: null
</code></pre>
<p>It's a bit annoying to type, but if you get used to it, it's not necessarily bad to stand out in that way.</p>
<p>Not that this should matter too much, but using <code>~null~</code> is inherently faster.  There's no variable to look up... you're just turning a WORD! at the quasiform lift level to the antiform lift level.  (Technically that does require validation, since not all quasi-words are legal anti-words, but this validation can be arbitrarily fast.)</p>
<p>One negative side of using the quasiforms is it may add noise where it's not something you want to emphasize.  As such, maybe this is a decision to be made on a case-by-case basis... do you want to draw attention or not, like... "HEY, I'm setting this to NULL and that's an important point!"</p>
<p>Not sure.  But I find myself tempted to use the quasiform now and again, and usually decide to back it out because I feel like it should be "always do it" or "never do it".  But maybe that's the worng dichotomy.</p>
          <p><a href="https://rebol.metaeducation.com/t/using-null-and-okay-instead-of-null-and-okay/2508/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/using-null-and-okay-instead-of-null-and-okay/2508/1</link>
        <pubDate>Mon, 14 Jul 2025 07:33:24 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2508-1</guid>
        <source url="https://rebol.metaeducation.com/t/using-null-and-okay-instead-of-null-and-okay/2508.rss">Using ~null~ and ~okay~ instead of NULL and OKAY</source>
      </item>
  </channel>
</rss>
