<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Racket&#39;s Language-Oriented Programming</title>
    <link>https://rebol.metaeducation.com/t/rackets-language-oriented-programming/2143</link>
    <description>Racket has something called [&quot;Language-Oriented Programming&quot;](https://school.racket-lang.org/2019/plan/mon-mor-lecture.html).  @bradrn brought it up, and wrote:

[quote=&quot;bradrn, post:10, topic:2136&quot;]
I think there’s an interesting contrast to be made here to [Racket](https://racket-lang.org/)’s ‘language-orientated programming’ (basically a different name for dialecting). Racket people talk a lot about defining new languages to solve problems, just like Rebol… but in practice, I’m not sure how much they actually do it. Part of the problem may be that those new languages *are* very different to base Racket — so not only do you have to write the interpreter, you have to write the parser as well. By contrast, since Rebol dialects have a similar free-form nature as Rebol code, you can get away with minimal parsing and no lexing, which in turn makes dialecting easier to achieve. (Still not as easy as macros, though.)
[/quote]

So I&#39;ve moved that here to a thread to discuss Racket, if there are any interesting ideas there.</description>
    
    <lastBuildDate>Thu, 01 Feb 2024 00:55:02 +0000</lastBuildDate>
    <category>Foreign Inspiration</category>
    <atom:link href="https://rebol.metaeducation.com/t/rackets-language-oriented-programming/2143.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Racket&#39;s Language-Oriented Programming</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Racket has something called <a href="https://school.racket-lang.org/2019/plan/mon-mor-lecture.html">"Language-Oriented Programming"</a>.  <a class="mention" href="https://rebol.metaeducation.com/u/bradrn">@bradrn</a> brought it up, and wrote:</p>
<aside class="quote no-group quote-modified" data-username="bradrn" data-post="10" data-topic="2136">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/bradrn/48/365_2.png" class="avatar"><a href="https://rebol.metaeducation.com/t/fundamental-distinguishing-features-of-rebol/2136/10">Fundamental distinguishing features of Rebol</a></div>
<blockquote>
<p>I think there’s an interesting contrast to be made here to <a href="https://racket-lang.org/">Racket</a>’s ‘language-orientated programming’ (basically a different name for dialecting). Racket people talk a lot about defining new languages to solve problems, just like Rebol… but in practice, I’m not sure how much they actually do it. Part of the problem may be that those new languages <em>are</em> very different to base Racket — so not only do you have to write the interpreter, you have to write the parser as well. By contrast, since Rebol dialects have a similar free-form nature as Rebol code, you can get away with minimal parsing and no lexing, which in turn makes dialecting easier to achieve. (Still not as easy as macros, though.)</p>
</blockquote>
</aside>
<p>So I've moved that here to a thread to discuss Racket, if there are any interesting ideas there.</p>
          <p><a href="https://rebol.metaeducation.com/t/rackets-language-oriented-programming/2143/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/rackets-language-oriented-programming/2143/1</link>
        <pubDate>Thu, 01 Feb 2024 00:54:23 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2143-1</guid>
        <source url="https://rebol.metaeducation.com/t/rackets-language-oriented-programming/2143.rss">Racket&#39;s Language-Oriented Programming</source>
      </item>
      <item>
        <title>Racket&#39;s Language-Oriented Programming</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="bradrn" data-post="10" data-topic="2136">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/bradrn/48/365_2.png" class="avatar"><a href="https://rebol.metaeducation.com/t/fundamental-distinguishing-features-of-rebol/2136/10">Fundamental distinguishing features of Rebol</a></div>
<blockquote>
<p>I think there’s an interesting contrast to be made here to <a href="https://racket-lang.org/">Racket</a>’s ‘language-orientated programming’ (basically a different name for dialecting). Racket people talk a lot about defining new languages to solve problems, just like Rebol… but in practice, I’m not sure how much they actually do it. Part of the problem may be that those new languages <em>are</em> very different to base Racket — so not only do you have to write the interpreter, you have to write the parser as well. By contrast, since Rebol dialects have a similar free-form nature as Rebol code, you can get away with minimal parsing and no lexing, which in turn makes dialecting easier to achieve. (Still not as easy as macros, though.)</p>
</blockquote>
</aside>
<p>Further on this… I double-checked with someone who actually uses Racket, and it turns out that my summary here is way off the mark. Racket’s ‘language-oriented programming’ is really just glorified macros, which like all macros output regular Racket code. You don’t need to write an interpreter at all, although if you really want to change the syntax you can do that by writing your own frontend.</p>
<p>So in a way it’s almost the opposite of Rebol dialects… those use the standard parser but nonstandard evaluation rules, whereas Racket’s languages are new frontends which produce ordinary Racket code.</p>
          <p><a href="https://rebol.metaeducation.com/t/rackets-language-oriented-programming/2143/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/rackets-language-oriented-programming/2143/2</link>
        <pubDate>Wed, 31 Jan 2024 08:28:37 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2143-2</guid>
        <source url="https://rebol.metaeducation.com/t/rackets-language-oriented-programming/2143.rss">Racket&#39;s Language-Oriented Programming</source>
      </item>
  </channel>
</rss>
