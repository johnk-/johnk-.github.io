<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Get_Xxx_Flag() vs Has_Xxx_Flag() ?</title>
    <link>https://rebol.metaeducation.com/t/get-xxx-flag-vs-has-xxx-flag/2358</link>
    <description>Kind of a fiddly naming issue, but there are a lot of places where flag-testing helpers are defined, which usually have 4 variants like this:

    #define Set_Details_Flag(p,name) \
        Set_Flavor_Flag(DETAILS, ensure(Details*, (p)), name)

    #define Get_Details_Flag(p,name) \
        Get_Flavor_Flag(DETAILS, ensure(Details*, (p)), name)

    #define Clear_Details_Flag(p,name) \
        Clear_Flavor_Flag(DETAILS, ensure(Details*, (p)), name)

    #define Not_Details_Flag(p,name) \
        Not_Flavor_Flag(DETAILS, ensure(Details*, (p)), name)

The savings add up for having things like the NOT form, it unclutters things pretty well:

    Not_Details_Flag(details, CAN_BE_DISPATCHED_AS_INTRINSIC)
    // vs
    not Get_Details_Flag(details, CAN_BE_DISPATCHED_AS_INTRINSIC)

I hadn&#39;t really questioned these.  But lately I&#39;ve been wondering... would HAS be better than GET?

    if (Has_Details_Flag(...)) ...

    if (Get_Details_Flag(...)) ...

It&#39;s a subtle semantics thing.  You could argue that even if a flag is not set, the structure still *has* the flag.

But is &quot;if Get(...)&quot; like asking if the get operation itself succeeded?  :frowning: 

Of course, in the interpreter we have taken for granted that **`if get $var`** isn&#39;t asking if you successfully got the variable, but whether the variable&#39;s contents are null or not.  And **`has obj field`** is really asking about the presence or absence of the field.

When I first thought of it, I was thinking that HAS was better.  But after writing this I&#39;m kind of thinking GET may be the more consistent choice after all.

To be painfully precise, we&#39;d call it: **`Is_Details_Flag_Set(...)`**... but I certainly prefer **`Get_Details_Flag(...)`** to that.</description>
    
    <lastBuildDate>Sun, 22 Dec 2024 16:29:39 +0000</lastBuildDate>
    <category>C/C++ Implementation</category>
    <atom:link href="https://rebol.metaeducation.com/t/get-xxx-flag-vs-has-xxx-flag/2358.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Get_Xxx_Flag() vs Has_Xxx_Flag() ?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Kind of a fiddly naming issue, but there are a lot of places where flag-testing helpers are defined, which usually have 4 variants like this:</p>
<pre><code>#define Set_Details_Flag(p,name) \
    Set_Flavor_Flag(DETAILS, ensure(Details*, (p)), name)

#define Get_Details_Flag(p,name) \
    Get_Flavor_Flag(DETAILS, ensure(Details*, (p)), name)

#define Clear_Details_Flag(p,name) \
    Clear_Flavor_Flag(DETAILS, ensure(Details*, (p)), name)

#define Not_Details_Flag(p,name) \
    Not_Flavor_Flag(DETAILS, ensure(Details*, (p)), name)
</code></pre>
<p>The savings add up for having things like the NOT form, it unclutters things pretty well:</p>
<pre><code>Not_Details_Flag(details, CAN_BE_DISPATCHED_AS_INTRINSIC)
// vs
not Get_Details_Flag(details, CAN_BE_DISPATCHED_AS_INTRINSIC)
</code></pre>
<p>I hadn't really questioned these.  But lately I've been wondering... would HAS be better than GET?</p>
<pre><code>if (Has_Details_Flag(...)) ...

if (Get_Details_Flag(...)) ...
</code></pre>
<p>It's a subtle semantics thing.  You could argue that even if a flag is not set, the structure still <em>has</em> the flag.</p>
<p>But is "if Get(...)" like asking if the get operation itself succeeded?  <img src="https://rebol.metaeducation.com/images/emoji/twitter/frowning.png?v=14" title=":frowning:" class="emoji" alt=":frowning:" loading="lazy" width="20" height="20"></p>
<p>Of course, in the interpreter we have taken for granted that <strong><code>if get $var</code></strong> isn't asking if you successfully got the variable, but whether the variable's contents are null or not.  And <strong><code>has obj field</code></strong> is really asking about the presence or absence of the field.</p>
<p>When I first thought of it, I was thinking that HAS was better.  But after writing this I'm kind of thinking GET may be the more consistent choice after all.</p>
<p>To be painfully precise, we'd call it: <strong><code>Is_Details_Flag_Set(...)</code></strong>... but I certainly prefer <strong><code>Get_Details_Flag(...)</code></strong> to that.</p>
          <p><a href="https://rebol.metaeducation.com/t/get-xxx-flag-vs-has-xxx-flag/2358/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/get-xxx-flag-vs-has-xxx-flag/2358/1</link>
        <pubDate>Sun, 22 Dec 2024 16:29:39 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2358-1</guid>
        <source url="https://rebol.metaeducation.com/t/get-xxx-flag-vs-has-xxx-flag/2358.rss">Get_Xxx_Flag() vs Has_Xxx_Flag() ?</source>
      </item>
  </channel>
</rss>
