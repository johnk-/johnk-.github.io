<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Bitten By Right Side Evaluation First</title>
    <link>https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301</link>
    <description>I was writing some code like this:

    while [not tail? info] [
        if find leaders info.1.name [
            leader-protos.(info.1.name): take info
        ] else [
            info: next info
        ]
    ]

Due to the post title you probably already see the bug.  TAKE INFO on the right hand side runs *before* the **info.1.name**.  So it&#39;s inserting under the next name.

I think we can (and should) precalculate the groups on the left hand side.  Basically walk the tuple and push its elements to the stack before doing the right hand side evaluation.</description>
    
    <lastBuildDate>Sun, 29 Sep 2024 13:00:36 +0000</lastBuildDate>
    <category>Semantics</category>
    <atom:link href="https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Bitten By Right Side Evaluation First</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Some history: Rebol2 did not have the idea of allowing groups in paths.</p>
<p>You could put GET-WORD! in paths, and they would be looked up:</p>
<pre><code>rebol2&gt;&gt; block: [a b c]
== [a b c]

rebol2&gt;&gt; index: 2
== 2

rebol2&gt;&gt; block/:index
== b
</code></pre>
<p><em>(Ren-C actually prohibited GET-WORD!s in paths, though interestingly the syntax is becoming legal again with CHAIN!...though it won't have anything to do with "getting")</em></p>
<p>But generally when you said <strong><code>block/index</code></strong> it took you literally:</p>
<pre><code>rebol2&gt;&gt; block: [foo 10 index 20 bar 30]
== [foo 10 index 20 bar 30]

rebol2&gt;&gt; block/index
== 20
</code></pre>
<p>DocKimbel believes (or at least, at one time said) that adding GROUP!s<sub><code>*cough*</code> <img src="https://rebol.metaeducation.com/images/emoji/twitter/nauseated_face.png?v=14" title=":nauseated_face:" class="emoji" alt=":nauseated_face:" loading="lazy" width="20" height="20"> <code>PAREN!</code>s</sub> into paths was a mistake because it complicated the model.  I don't think it was a mistake, but it certainly did bring a lot of questions... including the order of evaluation questions.</p>
<p>Some stuff from way back:</p>
<p><a href="https://github.com/metaeducation/rebol-issues/issues/2275" class="inline-onebox">Parenthesized expressions on left for SET-PATH! evaluate after right hand expressions · Issue #2275 · metaeducation/rebol-issues · GitHub</a></p>
<p>We can look at fundamental behaviors, like:</p>
<pre><code>obj: some-obj
obj.field: (obj: some-other-obj, 20)
</code></pre>
<p>You might argue that you need to lookup OBJ to the instance of the object it resolves to and remember that, before running the right hand side which disrupts it.  That is technically possible for objects...but if you resolve "immediate" values like TIME! or DATE! and forget the variable that held the immediate, they can't write back to them...due to the fact that all the bits for those types live in the cell, so there's no abstract "address" to resolve to.  The closest thing you have to an address is the name of the variable, and then you're back to lookup semantics again.</p>
<p>Anyway, the easier bit to do is to resolve the left hand side groups.  But if the left hand side is <em>fully</em> resolved in a way the right hand side can't disrupt, that involves some sacrifices on immediate writeback that are probably not worth making, in the grand scheme of things.</p>
          <p><a href="https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301/3</link>
        <pubDate>Sun, 29 Sep 2024 01:53:25 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2301-3</guid>
        <source url="https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301.rss">Bitten By Right Side Evaluation First</source>
      </item>
      <item>
        <title>Bitten By Right Side Evaluation First</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <p>What if the RHS alters the index? Then the LHS could be left pointing to an unexpected element.</p>
          <p><a href="https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301/2</link>
        <pubDate>Sun, 29 Sep 2024 00:59:40 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2301-2</guid>
        <source url="https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301.rss">Bitten By Right Side Evaluation First</source>
      </item>
      <item>
        <title>Bitten By Right Side Evaluation First</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I was writing some code like this:</p>
<pre><code>while [not tail? info] [
    if find leaders info.1.name [
        leader-protos.(info.1.name): take info
    ] else [
        info: next info
    ]
]
</code></pre>
<p>Due to the post title you probably already see the bug.  TAKE INFO on the right hand side runs <em>before</em> the <strong>info.1.name</strong>.  So it's inserting under the next name.</p>
<p>I think we can (and should) precalculate the groups on the left hand side.  Basically walk the tuple and push its elements to the stack before doing the right hand side evaluation.</p>
          <p><a href="https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301/1</link>
        <pubDate>Sat, 28 Sep 2024 17:53:43 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2301-1</guid>
        <source url="https://rebol.metaeducation.com/t/bitten-by-right-side-evaluation-first/2301.rss">Bitten By Right Side Evaluation First</source>
      </item>
  </channel>
</rss>
