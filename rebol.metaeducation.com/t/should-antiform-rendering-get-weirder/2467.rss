<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Should Antiform Rendering Get Weirder?</title>
    <link>https://rebol.metaeducation.com/t/should-antiform-rendering-get-weirder/2467</link>
    <description>I&#39;ve wondered this before, but I will wonder it again:

**Should Antiforms Render in the Monochrome Text Console in a Way That Makes Them More Obviously Distinct From Quasiforms, Besides Just The Comment?**

Today:

    &gt;&gt; spread [a b]
    == ~(a b)~  ; anti

    &gt;&gt; spread [a b]
    == ~(a b)~  ; antiform (splice!)   &lt;-- more verbose console setting

In the absence of color or other cues, should there could be &quot;even worse&quot; notations to help emphasize &quot;that&#39;s not representable&quot;.  

Backslashes can&#39;t load, so...

    &gt;&gt; ~null~
    == \~null~\  ; antiform (keyword!)

    &gt;&gt; spread [a b]
    == \~(a b)~\  ; antiform (splice!)

## It Needs The Tildes, Still...

It needs to keep the tildes, because if it didn&#39;t, then `~` antiforms would vanish:

    &gt;&gt; ~
    == \~\  ; antiform (trash!) &quot;tripwire&quot;  &lt;-- just `\\` would be bad

*(At an implementation level of the `QUOTE_BYTE`, it is the case that if you had to ask if antiforms were either quasi or not... they are quasi.  e.g. they don&#39;t have the NONQUASI_BIT set.)*

## Potential For Better Guidance In Errors

I really think that in the earliest introductions of antiforms, it helps if they&#39;re not too easily conflated with quasiforms

If they type `~null~` thinking it&#39;s an antiform, and then see `~null~  ; antiform`  They might think antiform is just a label, and they got what they typed &quot;as is&quot; vs a totally distinct evaluation product.

With the uglier notation, if someone happened to think *&quot;I&#39;m making an antiform, like I saw on the forum...&quot;*

    &gt;&gt; \~(a b)~\
    ** Error: Antiforms have no true representation, and can&#39;t be LOAD-ed
    ** For more information, see: https://...

Antiforms are (apparently) a tough concept for some people to grasp, and I think little things like this can help make it easier.</description>
    
    <lastBuildDate>Thu, 22 May 2025 09:58:20 +0000</lastBuildDate>
    <category>Console</category>
    <atom:link href="https://rebol.metaeducation.com/t/should-antiform-rendering-get-weirder/2467.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Should Antiform Rendering Get Weirder?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I've wondered this before, but I will wonder it again:</p>
<p><strong>Should Antiforms Render in the Monochrome Text Console in a Way That Makes Them More Obviously Distinct From Quasiforms, Besides Just The Comment?</strong></p>
<p>Today:</p>
<pre><code>&gt;&gt; spread [a b]
== ~(a b)~  ; anti

&gt;&gt; spread [a b]
== ~(a b)~  ; antiform (splice!)   &lt;-- more verbose console setting
</code></pre>
<p>In the absence of color or other cues, should there could be "even worse" notations to help emphasize "that's not representable".</p>
<p>Backslashes can't load, so...</p>
<pre><code>&gt;&gt; ~null~
== \~null~\  ; antiform (keyword!)

&gt;&gt; spread [a b]
== \~(a b)~\  ; antiform (splice!)
</code></pre>
<h2><a name="p-8335-it-needs-the-tildes-still-1" class="anchor" href="https://rebol.metaeducation.com#p-8335-it-needs-the-tildes-still-1"></a>It Needs The Tildes, Still...</h2>
<p>It needs to keep the tildes, because if it didn't, then <code>~</code> antiforms would vanish:</p>
<pre><code>&gt;&gt; ~
== \~\  ; antiform (trash!) "tripwire"  &lt;-- just `\\` would be bad
</code></pre>
<p><em>(At an implementation level of the <code>QUOTE_BYTE</code>, it is the case that if you had to ask if antiforms were either quasi or not... they are quasi.  e.g. they don't have the NONQUASI_BIT set.)</em></p>
<h2><a name="p-8335-potential-for-better-guidance-in-errors-2" class="anchor" href="https://rebol.metaeducation.com#p-8335-potential-for-better-guidance-in-errors-2"></a>Potential For Better Guidance In Errors</h2>
<p>I really think that in the earliest introductions of antiforms, it helps if they're not too easily conflated with quasiforms</p>
<p>If they type <code>~null~</code> thinking it's an antiform, and then see <code>~null~  ; antiform</code>  They might think antiform is just a label, and they got what they typed "as is" vs a totally distinct evaluation product.</p>
<p>With the uglier notation, if someone happened to think <em>"I'm making an antiform, like I saw on the forum..."</em></p>
<pre><code>&gt;&gt; \~(a b)~\
** Error: Antiforms have no true representation, and can't be LOAD-ed
** For more information, see: https://...
</code></pre>
<p>Antiforms are (apparently) a tough concept for some people to grasp, and I think little things like this can help make it easier.</p>
          <p><a href="https://rebol.metaeducation.com/t/should-antiform-rendering-get-weirder/2467/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/should-antiform-rendering-get-weirder/2467/1</link>
        <pubDate>Wed, 21 May 2025 12:36:53 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2467-1</guid>
        <source url="https://rebol.metaeducation.com/t/should-antiform-rendering-get-weirder/2467.rss">Should Antiform Rendering Get Weirder?</source>
      </item>
  </channel>
</rss>
