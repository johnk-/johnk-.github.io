<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Distinguishing Multi-Return WANTED? and DISCARDED?</title>
    <link>https://forum.rebol.info/t/distinguishing-multi-return-wanted-and-discarded/1930</link>
    <description>[Changing Multi-Return was to Proxy its Variables](https://forum.rebol.info/t/the-history-of-multi-return-in-ren-c/1134/9?u=hostilefork) was a great win for many reasons.

Also, switching to just knowing whether a return result was WANTED? or not meant you no longer had the specific variable.  You couldn&#39;t accidentally (or intentionally) depend on the writeback variable&#39;s name, or previous contents.

**But one nuance that was lost was whether the variable was an actual request, or a request to go to a &quot;blackhole&quot;.**

    operation: func [return: [integer!] expensive: [binary!] arg [integer!]] [
        if wanted? &#39;expensive [
            print &quot;Doing secondary behavior&quot;
            ...
            expensive: ...
            return ...
       ] else [
            print &quot;Doing primary behavior&quot;
            ...
            return ...
       ]
    ]

In the non-proxying approach to multi-return, it was possible for OPERATION to distinguish these two cases:

    &gt;&gt; [a b]: operation 10
    Doing secondary behavior
    == ...

    &gt;&gt; [a #]: operation 10
    Doing secondary behavior
    == ...

It actually received either the **b** or the **#** as an argument.  Hence it could avoid generating a large product that would be ultimately be unused.

## So... DISCARDED? as a complement to WANTED?

We have the writeback slot, and can say whether it contains # or not, with another function.  :man_shrugging: 

I don&#39;t know if DISCARDED? is a good name, as a blank also discards the multi-return but doesn&#39;t request it.  Maybe the distinction is merely REQUESTED? vs. actually WANTED?</description>
    
    <lastBuildDate>Sat, 20 Aug 2022 06:38:00 +0000</lastBuildDate>
    <category>Functions</category>
    <atom:link href="https://forum.rebol.info/t/distinguishing-multi-return-wanted-and-discarded/1930.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Distinguishing Multi-Return WANTED? and DISCARDED?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I'll point out that WANTED? (and a theoretical DISCARDED?) currently don't permit variances in how it is implemented.  It could vary between generators for the multi-return.</p>
<p>Theoretically, you could:</p>
<ol>
<li>
<p>Pass WANTED? the variable you want to ask about.</p>
</li>
<li>
<p>The binding of WANTED? could be used to navigate to the FRAME!</p>
</li>
<li>
<p>The FRAME! could be used to navigate to the ACTION!</p>
</li>
<li>
<p>The ACTION! <em>could</em> retain some memory about what generator was used to make it</p>
</li>
<li>
<p>That generator could be delegated to to answer the question "Given this FRAME! for a function you made, is the multi-return output wanted?"</p>
</li>
</ol>
<p>It's at step 4 we get lost right now.</p>
<p>What we could do today is say every function with multi-return generates a local WANTED? or DISCARDED? function and you call that definitionally.  <img src="https://forum.rebol.info/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:">  Heavyweight.</p>
          <p><a href="https://forum.rebol.info/t/distinguishing-multi-return-wanted-and-discarded/1930/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/distinguishing-multi-return-wanted-and-discarded/1930/2</link>
        <pubDate>Sun, 10 Jul 2022 01:59:01 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1930-2</guid>
        <source url="https://forum.rebol.info/t/distinguishing-multi-return-wanted-and-discarded/1930.rss">Distinguishing Multi-Return WANTED? and DISCARDED?</source>
      </item>
      <item>
        <title>Distinguishing Multi-Return WANTED? and DISCARDED?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p><a href="https://forum.rebol.info/t/the-history-of-multi-return-in-ren-c/1134/9">Changing Multi-Return was to Proxy its Variables</a> was a great win for many reasons.</p>
<p>Also, switching to just knowing whether a return result was WANTED? or not meant you no longer had the specific variable.  You couldn't accidentally (or intentionally) depend on the writeback variable's name, or previous contents.</p>
<p><strong>But one nuance that was lost was whether the variable was an actual request, or a request to go to a "blackhole".</strong></p>
<pre><code>operation: func [return: [integer!] expensive: [binary!] arg [integer!]] [
    if wanted? 'expensive [
        print "Doing secondary behavior"
        ...
        expensive: ...
        return ...
   ] else [
        print "Doing primary behavior"
        ...
        return ...
   ]
]
</code></pre>
<p>In the non-proxying approach to multi-return, it was possible for OPERATION to distinguish these two cases:</p>
<pre><code>&gt;&gt; [a b]: operation 10
Doing secondary behavior
== ...

&gt;&gt; [a #]: operation 10
Doing secondary behavior
== ...
</code></pre>
<p>It actually received either the <strong>b</strong> or the <strong>#</strong> as an argument.  Hence it could avoid generating a large product that would be ultimately be unused.</p>
<h2>So... DISCARDED? as a complement to WANTED?</h2>
<p>We have the writeback slot, and can say whether it contains # or not, with another function.  <img src="https://forum.rebol.info/images/emoji/twitter/man_shrugging.png?v=9" title=":man_shrugging:" class="emoji" alt=":man_shrugging:"></p>
<p>I don't know if DISCARDED? is a good name, as a blank also discards the multi-return but doesn't request it.  Maybe the distinction is merely REQUESTED? vs. actually WANTED?</p>
          <p><a href="https://forum.rebol.info/t/distinguishing-multi-return-wanted-and-discarded/1930/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/distinguishing-multi-return-wanted-and-discarded/1930/1</link>
        <pubDate>Sun, 10 Jul 2022 01:49:58 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1930-1</guid>
        <source url="https://forum.rebol.info/t/distinguishing-multi-return-wanted-and-discarded/1930.rss">Distinguishing Multi-Return WANTED? and DISCARDED?</source>
      </item>
  </channel>
</rss>
