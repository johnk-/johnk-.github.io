<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Non-Expanding BLOCK! Idiom?</title>
    <link>https://rebol.metaeducation.com/t/non-expanding-block-idiom/2449</link>
    <description>*(Extracted from [Portable Bridge Notation](https://rebol.metaeducation.com/t/portable-bridge-notation-pbn-parser/1306) thread.)*

---

Is there a prescribed way of declaring a block! (or similar structure) to be non-expanding, allowing it to contain only the # of elements of its defined size? If you insert into the block, the last value is automatically purged. (Maybe if you append to the block, the first element gets taken.) Optionally could declare the block with default values.

**Background:** Sometimes I want to keep a &quot;cartridge&quot; of values meeting the spec of a certain length, and it may be as simple as a LIFO/FIFO list where I want to hold onto &quot;the most recent&quot; X things, and then just be able to immediately FORM/MOLD etc. into an output. 

This is easy to achieve with a normal block, but it grows and grows and then you have to truncate it each time (not a big deal) and process it for your intended output. 

Just a code-golf thought. Maybe there&#39;s a structure that already handles this though... I haven&#39;t dug into this.</description>
    
    <lastBuildDate>Tue, 13 May 2025 07:31:53 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://rebol.metaeducation.com/t/non-expanding-block-idiom/2449.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Non-Expanding BLOCK! Idiom?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Rebol tries to get away with "everything is a BLOCK!".  But having data structure interfaces that add more functionality to blocks... <strong>or remove functionality from blocks</strong> (if the operation would compromise the data structure rules)... is important.</p>
<p>BLOCK! is a bit of a too-simple foundation for "interesting" data structures.  But although we now can have an <a href="https://rebol.metaeducation.com/t/extension-types-implementation/1203">arbitrary number of Extension Types</a>, it doesn't seem like making people use a C compiler just to make something like a STACK! or QUEUE! (or the structure you describe here).</p>
<p>I've become more amenable to things like <a class="mention" href="https://rebol.metaeducation.com/u/rgchris">@rgchris</a>'s <a href="https://rebol.metaeducation.com/t/multiply-linked-lists/1441">Node Proposal</a>, where we'd offer a type that could serve as a foundation for more kinds of data structures.</p>
<p>But your non-expanding block could probably be done without Node, but just be a class of some type that wrapped blocks.  We need to make it possible to make classes that hook into things like APPEND and such, and that's getting closer...</p>
          <p><a href="https://rebol.metaeducation.com/t/non-expanding-block-idiom/2449/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/non-expanding-block-idiom/2449/2</link>
        <pubDate>Tue, 13 May 2025 07:31:53 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2449-2</guid>
        <source url="https://rebol.metaeducation.com/t/non-expanding-block-idiom/2449.rss">Non-Expanding BLOCK! Idiom?</source>
      </item>
      <item>
        <title>Non-Expanding BLOCK! Idiom?</title>
        <dc:creator><![CDATA[BlackATTR]]></dc:creator>
        <description><![CDATA[
            <p><em>(Extracted from <a href="https://rebol.metaeducation.com/t/portable-bridge-notation-pbn-parser/1306">Portable Bridge Notation</a> thread.)</em></p>
<hr>
<p>Is there a prescribed way of declaring a block! (or similar structure) to be non-expanding, allowing it to contain only the # of elements of its defined size? If you insert into the block, the last value is automatically purged. (Maybe if you append to the block, the first element gets taken.) Optionally could declare the block with default values.</p>
<p><strong>Background:</strong> Sometimes I want to keep a "cartridge" of values meeting the spec of a certain length, and it may be as simple as a LIFO/FIFO list where I want to hold onto "the most recent" X things, and then just be able to immediately FORM/MOLD etc. into an output.</p>
<p>This is easy to achieve with a normal block, but it grows and grows and then you have to truncate it each time (not a big deal) and process it for your intended output.</p>
<p>Just a code-golf thought. Maybe there's a structure that already handles this though... I haven't dug into this.</p>
          <p><a href="https://rebol.metaeducation.com/t/non-expanding-block-idiom/2449/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/non-expanding-block-idiom/2449/1</link>
        <pubDate>Tue, 21 Jul 2020 15:11:35 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2449-1</guid>
        <source url="https://rebol.metaeducation.com/t/non-expanding-block-idiom/2449.rss">Non-Expanding BLOCK! Idiom?</source>
      </item>
  </channel>
</rss>
