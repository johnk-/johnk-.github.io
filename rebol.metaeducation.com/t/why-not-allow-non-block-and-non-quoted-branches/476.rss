<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</title>
    <link>https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476</link>
    <description>You might wonder why you&#39;re not allowed to just write:

    &gt;&gt; if 1 = 1 &quot;hello&quot;
    == &quot;hello&quot;

So... we actually tried allowing that for a while.  I was the person who advocated for it (with support from @IngoHohmann, @rgchris, and others).  My argument was that in Rebol&#39;s freewheeling style, you might want to spend your delimiter points on the condition instead of the branch.  For example, which of the following two seems to get useful mileage out of the delimiters?

    &gt;&gt; if (1 = 1) &quot;hello&quot;
    == &quot;hello&quot;

    &gt;&gt; if 1 = 1 [&quot;hello&quot;]
    == &quot;hello&quot;

Hence we had some experience with what happens when all values were permitted.

## Problem: BLOCK! Branches Act Fundamentally Different

Blocks are executed as code.  So if you see an expression that isn&#39;t a literal used as a branch, you are disoriented.  As a reader, you are uncertain whether that expression&#39;s evaluation is the end of the evaluation...or if another will happen.  And as a writer, you are going to be prone to making mistakes.

This problem is not new, and hits every new user when PRINT treats blocks differently.

    &gt;&gt; x: 10
    -- lots and lots of code --
    &gt;&gt; print x
    10

    &gt;&gt; x: [format hard drive]
    -- lots and lots of code --
    &gt;&gt; print x
    -- oops --

I&#39;ve long believed that is a *weakness*, and a fairly serious one at that.  So we should go more toward finding solutions to that category of problem, vs. propagating it more widely and making the system more unpredictable on the whole...for limited value.

## But Don&#39;t Despair!  Ren-C Has [&quot;Soft Quoted Branches!&quot;](https://rebol.metaeducation.com/t/soft-quoted-branching-light-elegant-fast/1020)

You may not be able to put just *anything* in a branch slot, but you can put *any quoted thing*!

    &gt;&gt; if true &#39;&lt;tag&gt;
    == &lt;tag&gt;

This flexible approach permits even blocks to be provided literally:

    &gt;&gt; either true &#39;[1 + 2] [1 + 2]
    == [1 + 2]

    &gt;&gt; either false &#39;[1 + 2] [1 + 2]
    == 3</description>
    
    <lastBuildDate>Mon, 11 Jan 2021 16:12:14 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I was thinking a bit today how it would be nice to allow <em>literal</em> strings:</p>
<pre><code>print ["RETURNS:" return-note else "(undocumented)"]
</code></pre>
<p>But disallow variables, for the reasons given in the thread above:</p>
<pre><code>msg: "(undocumented)"
print ["RETURNS:" return-note else msg]
</code></pre>
<p>It's a little bit cleaner than having to use a tick mark, which is hard to see without syntax highlighting unless you use the braced form of string:</p>
<pre><code>print ["RETURNS:" return-note else '"(undocumented)"]
print ["RETURNS:" return-note else '{(undocumented)}]
</code></pre>
<p><strong>...but This Makes Legal Branches Different from DO</strong></p>
<p>I've been developing this sort of theory that what branches run are what the core provides for a main DO function...let's say it is called <strong><code>DO*</code></strong>.</p>
<p>I mentioned in a post about efficiency that a QUOTED! should respond in most ways the way that an ACTION! that produces a single value would respond.  This gives you an efficient way of passing around a value that can do anything an action does that doesn't require it to have an identity.  And one of those things is DO.  This ties in to the branching.</p>
<p>That covers the soft-quoted branching behavior case, and makes sense...because it's one of the good reasons we want it for soft-quoted branching.  Removing a quote level is computationally trivial and doesn't require any allocations.</p>
<p>But if we were to allow something like a plain TEXT! string to act as a branch, that would be different than what we'd want high-level DO to offer:</p>
<pre><code>&gt;&gt; if true "print {We don't want this.}"
We don't want this.
</code></pre>
<p>I think when we add up all the rationales in this thread with that, it makes sense for us to say: <strong>there is no action taken on a branch of a conditional that wouldn't match what DO would do for a value of that type</strong>.</p>
<p>This gives more hope and clarity to those trying to implement their own branching constructs.</p>
          <p><a href="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476/8">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476/8</link>
        <pubDate>Mon, 11 Jan 2021 16:12:14 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-476-8</guid>
        <source url="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476.rss">Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</source>
      </item>
      <item>
        <title>Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="gchiu" data-post="3" data-topic="476" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/gchiu/48/22_2.png" class="avatar"> gchiu:</div>
<blockquote>
<p>I found that non-block! branches were a little confusing for me so agree with regression.</p>
</blockquote>
</aside>
<p>I forgot to mention one additional angle, <a href="https://github.com/rebol/rebol-issues/issues/2063#issuecomment-170921412">which was actually predicted by Maxim</a>, and that is it's not only CASE that benefits from the structure...but also your branches.</p>
<p>I've really only had the bug happen once.  But it was something along the lines of:</p>
<pre><code> unspaced [
     either condition [
         ...
         lots of code, scrolls off screen
         ...
     ]

    "foo"
]
</code></pre>
<p>This happened when an EITHER got effectively changed into an IF, and it wound up consuming the "foo" that wasn't meant for it.</p>
<p>Anyway, I just wanted to bring this up in case anyone needs another reason to get behind the reversion.</p>
          <p><a href="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476/6">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476/6</link>
        <pubDate>Tue, 23 Jan 2018 23:45:23 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-476-6</guid>
        <source url="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476.rss">Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</source>
      </item>
      <item>
        <title>Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</title>
        <dc:creator><![CDATA[gchiu]]></dc:creator>
        <description><![CDATA[
            <p>I found that non-block! branches were a little confusing for me so agree with regression.</p>
          <p><a href="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476/3</link>
        <pubDate>Thu, 18 Jan 2018 05:28:47 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-476-3</guid>
        <source url="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476.rss">Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</source>
      </item>
      <item>
        <title>Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>You might wonder why you're not allowed to just write:</p>
<pre><code>&gt;&gt; if 1 = 1 "hello"
== "hello"
</code></pre>
<p>So... we actually tried allowing that for a while.  I was the person who advocated for it (with support from <a class="mention" href="https://rebol.metaeducation.com/u/ingohohmann">@IngoHohmann</a>, <a class="mention" href="https://rebol.metaeducation.com/u/rgchris">@rgchris</a>, and others).  My argument was that in Rebol's freewheeling style, you might want to spend your delimiter points on the condition instead of the branch.  For example, which of the following two seems to get useful mileage out of the delimiters?</p>
<pre><code>&gt;&gt; if (1 = 1) "hello"
== "hello"

&gt;&gt; if 1 = 1 ["hello"]
== "hello"
</code></pre>
<p>Hence we had some experience with what happens when all values were permitted.</p>
<h2><a name="p-1759-problem-block-branches-act-fundamentally-different-1" class="anchor" href="https://rebol.metaeducation.com#p-1759-problem-block-branches-act-fundamentally-different-1"></a>Problem: BLOCK! Branches Act Fundamentally Different</h2>
<p>Blocks are executed as code.  So if you see an expression that isn't a literal used as a branch, you are disoriented.  As a reader, you are uncertain whether that expression's evaluation is the end of the evaluation...or if another will happen.  And as a writer, you are going to be prone to making mistakes.</p>
<p>This problem is not new, and hits every new user when PRINT treats blocks differently.</p>
<pre><code>&gt;&gt; x: 10
-- lots and lots of code --
&gt;&gt; print x
10

&gt;&gt; x: [format hard drive]
-- lots and lots of code --
&gt;&gt; print x
-- oops --
</code></pre>
<p>I've long believed that is a <em>weakness</em>, and a fairly serious one at that.  So we should go more toward finding solutions to that category of problem, vs. propagating it more widely and making the system more unpredictable on the whole...for limited value.</p>
<h2><a name="p-1759-but-dont-despair-ren-c-has-soft-quoted-brancheshttpsrebolmetaeducationcomtsoft-quoted-branching-light-elegant-fast1020-2" class="anchor" href="https://rebol.metaeducation.com#p-1759-but-dont-despair-ren-c-has-soft-quoted-brancheshttpsrebolmetaeducationcomtsoft-quoted-branching-light-elegant-fast1020-2"></a>But Don't Despair!  Ren-C Has <a href="https://rebol.metaeducation.com/t/soft-quoted-branching-light-elegant-fast/1020">"Soft Quoted Branches!"</a></h2>
<p>You may not be able to put just <em>anything</em> in a branch slot, but you can put <em>any quoted thing</em>!</p>
<pre><code>&gt;&gt; if true '&lt;tag&gt;
== &lt;tag&gt;
</code></pre>
<p>This flexible approach permits even blocks to be provided literally:</p>
<pre><code>&gt;&gt; either true '[1 + 2] [1 + 2]
== [1 + 2]

&gt;&gt; either false '[1 + 2] [1 + 2]
== 3
</code></pre>
          <p><a href="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476/1</link>
        <pubDate>Thu, 18 Jan 2018 01:35:14 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-476-1</guid>
        <source url="https://rebol.metaeducation.com/t/why-not-allow-non-block-and-non-quoted-branches/476.rss">Why Not Allow non-BLOCK! (and non-QUOTED!) Branches?</source>
      </item>
  </channel>
</rss>
