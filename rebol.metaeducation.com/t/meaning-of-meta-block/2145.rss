<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Meaning of META-BLOCK! ^[...]</title>
    <link>https://rebol.metaeducation.com/t/meaning-of-meta-block/2145</link>
    <description>META-GROUP! takes the evaluative behavior of GROUP! and metas the product:

    &gt;&gt; (1 + 2)
    == 3

    &gt;&gt; ^(1 + 2)
    == &#39;3

    &gt;&gt; (find [a b c] &#39;d)
    == ~null~  ; anti

    &gt;&gt; ^(find [a b c] &#39;d)
    == ~null~

That makes sense.  But what should META-BLOCK! do? 

META-BLOCK! actually does something parallel to the evaluator&#39;s META-GROUP! in PARSE.  Because in PARSE, the blocks are not &quot;inert&quot;.  It means give back the meta form of what the block rule synthesizes.

    &gt;&gt; parse &quot;aaab&quot; [some ^[&quot;a&quot; | opt &quot;b&quot;]]
    == ~null~

So there you got a quasiform and not an antiform of null (from the match of the optional &quot;b&quot; not being there).

But in the main evaluator, it currently just quotes the block:

    &gt;&gt; ^[a b c]
    == &#39;[a b c]

A synonym for **quote [a b c]**.  Pretty useless, right?

## Maybe Not Useless...

Consider my desire to have a proper FOR dialect.

     &gt;&gt; for x [1 to 3] [print x]
     1
     2
     3

And then, the concept of &quot;going meta&quot; struck me as interesting:

     &gt;&gt; for x meta [1 to 3] [print x]
     1
     to
     3

Which would mean that FOR when given a quoted block would enumerate its contents vs. run the dialect.  Then you could also write that as:

     &gt;&gt; for x ^[1 to 3] [print x]
     1
     to
     3

It would even be semantically different if it did not bind the block, e.g. acted as a synonym for **`meta &#39;[1 to 3]`**

Cute, but we don&#39;t want to generalize it to groups, **`^(...)`** needs to evaluate the group and give the meta result.  So this would be specifically for taking blocks up a meta level.

I guess we&#39;ll have to see how it plays out.  I can&#39;t think of another behavior at the moment.</description>
    
    <lastBuildDate>Fri, 27 Sep 2024 23:35:50 +0000</lastBuildDate>
    <category>Datatypes</category>
    <atom:link href="https://rebol.metaeducation.com/t/meaning-of-meta-block/2145.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Meaning of META-BLOCK! ^[...]</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="2145">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>But what if <strong><sup class="footnote-ref"><a href="https://rebol.metaeducation.com#footnote-7787-1" id="footnote-ref-7787-1">[1]</a></sup></strong> would reduce the block and meta each item?</p>
<pre data-code-wrap="plaintext"><code class="lang-plaintext"> &gt;&gt; ^[1 + 2 find [a b c] 'd]
 == ['3 ~null~]
</code></pre>
</blockquote>
</aside>
<p>So one thing to mention here is that there's also the behavior of branch slots.</p>
<p>Branches are literal slots and can have behavior different from that in the main evaluator.  I've considered the idea that saying <strong><code>@word</code></strong> or <strong><code>@tu.p.le</code></strong> in a branch slot would be a fast way to get the variable.</p>
<pre><code>&gt;&gt; x: 10

&gt;&gt; if 1 = 1 @x
== 10
</code></pre>
<p>Building in such shorthands has the advantage of being able to avoid spawning an evaluation level, the way that <strong><code>[x]</code></strong> would.  Such efficiency might be interesting for certain kinds of code.  And just for a shorthand it might be interesting for certain kinds of code.</p>
<p>In any case, the behavior of META-BLOCK! in branches would pretty clearly be useful to meta the branch product.</p>
<p>This is contentious with the behavior of <sup class="footnote-ref"><a href="https://rebol.metaeducation.com#footnote-7787-2" id="footnote-ref-7787-2">[2]</a></sup> being either the meta-reduced block or the quoted block.  But there is no fundamental reason why branches have to do the same thing.</p>
<p>Anyway, I think the branch product being meta is probably the most useful of the three behaviors, so maybe the focus should be kept on that.</p>
<hr class="footnotes-sep">

<ol class="footnotes-list">
<li id="footnote-7787-1" class="footnote-item"><p>... <a href="https://rebol.metaeducation.com#footnote-ref-7787-1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote-7787-2" class="footnote-item"><p>... <a href="https://rebol.metaeducation.com#footnote-ref-7787-2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
          <p><a href="https://rebol.metaeducation.com/t/meaning-of-meta-block/2145/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/meaning-of-meta-block/2145/3</link>
        <pubDate>Fri, 27 Sep 2024 23:35:50 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2145-3</guid>
        <source url="https://rebol.metaeducation.com/t/meaning-of-meta-block/2145.rss">Meaning of META-BLOCK! ^[...]</source>
      </item>
      <item>
        <title>Meaning of META-BLOCK! ^[...]</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I put forth one theory for what META-BLOCK! might do... to produce a quoted block, and maybe capture a binding or not:</p>
<pre><code>&gt;&gt; ^[1 + 2 10 + 20]
== '[1 + 2 10 + 20]
</code></pre>
<p>But what if <strong><sup class="footnote-ref"><a href="https://rebol.metaeducation.com#footnote-7094-1" id="footnote-ref-7094-1">[1]</a></sup></strong> would reduce the block and meta each item?</p>
<pre><code> &gt;&gt; ^[1 + 2 find [a b c] 'd]
 == ['3 ~null~]
</code></pre>
<p>That's half the behavior of what we call PACK today.  If you make it an antiform, you can use it with multi return:</p>
<pre><code> [a b]: anti ^[1 + 2 find [a b c] 'd]
</code></pre>
<p>What good is half the behavior?  Well, it's more about the idea of having a REDUCE parallel that can actually reduce anything and put it in "suspended animation".  Packs are one place this has become useful, but other places could use it too.</p>
<p>It came up when I was thinking about what a META-FENCE! might do:</p>
<pre><code>&gt;&gt; ^{a: 3 b: null}
</code></pre>
<p>I was wondering if quoted-bound-fence made sense, and wondered if making all the assignments meta would make more sense.</p>
<p>Anyway, behavior of <strong><sup class="footnote-ref"><a href="https://rebol.metaeducation.com#footnote-7094-2" id="footnote-ref-7094-2">[2]</a></sup></strong> is something I'm rethinking.</p>
<hr class="footnotes-sep">

<ol class="footnotes-list">
<li id="footnote-7094-1" class="footnote-item"><p>... <a href="https://rebol.metaeducation.com#footnote-ref-7094-1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote-7094-2" class="footnote-item"><p>... <a href="https://rebol.metaeducation.com#footnote-ref-7094-2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
          <p><a href="https://rebol.metaeducation.com/t/meaning-of-meta-block/2145/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/meaning-of-meta-block/2145/2</link>
        <pubDate>Mon, 05 Feb 2024 19:07:02 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2145-2</guid>
        <source url="https://rebol.metaeducation.com/t/meaning-of-meta-block/2145.rss">Meaning of META-BLOCK! ^[...]</source>
      </item>
      <item>
        <title>Meaning of META-BLOCK! ^[...]</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>META-GROUP! takes the evaluative behavior of GROUP! and metas the product:</p>
<pre><code>&gt;&gt; (1 + 2)
== 3

&gt;&gt; ^(1 + 2)
== '3

&gt;&gt; (find [a b c] 'd)
== ~null~  ; anti

&gt;&gt; ^(find [a b c] 'd)
== ~null~
</code></pre>
<p>That makes sense.  But what should META-BLOCK! do?</p>
<p>META-BLOCK! actually does something parallel to the evaluator's META-GROUP! in PARSE.  Because in PARSE, the blocks are not "inert".  It means give back the meta form of what the block rule synthesizes.</p>
<pre><code>&gt;&gt; parse "aaab" [some ^["a" | opt "b"]]
== ~null~
</code></pre>
<p>So there you got a quasiform and not an antiform of null (from the match of the optional "b" not being there).</p>
<p>But in the main evaluator, it currently just quotes the block:</p>
<pre><code>&gt;&gt; ^[a b c]
== '[a b c]
</code></pre>
<p>A synonym for <strong>quote [a b c]</strong>.  Pretty useless, right?</p>
<h2><a name="p-7039-maybe-not-useless-1" class="anchor" href="https://rebol.metaeducation.com#p-7039-maybe-not-useless-1"></a>Maybe Not Useless...</h2>
<p>Consider my desire to have a proper FOR dialect.</p>
<pre><code> &gt;&gt; for x [1 to 3] [print x]
 1
 2
 3
</code></pre>
<p>And then, the concept of "going meta" struck me as interesting:</p>
<pre><code> &gt;&gt; for x meta [1 to 3] [print x]
 1
 to
 3
</code></pre>
<p>Which would mean that FOR when given a quoted block would enumerate its contents vs. run the dialect.  Then you could also write that as:</p>
<pre><code> &gt;&gt; for x ^[1 to 3] [print x]
 1
 to
 3
</code></pre>
<p>It would even be semantically different if it did not bind the block, e.g. acted as a synonym for <strong><code>meta '[1 to 3]</code></strong></p>
<p>Cute, but we don't want to generalize it to groups, <strong><code>^(...)</code></strong> needs to evaluate the group and give the meta result.  So this would be specifically for taking blocks up a meta level.</p>
<p>I guess we'll have to see how it plays out.  I can't think of another behavior at the moment.</p>
          <p><a href="https://rebol.metaeducation.com/t/meaning-of-meta-block/2145/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/meaning-of-meta-block/2145/1</link>
        <pubDate>Mon, 29 Jan 2024 08:50:02 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2145-1</guid>
        <source url="https://rebol.metaeducation.com/t/meaning-of-meta-block/2145.rss">Meaning of META-BLOCK! ^[...]</source>
      </item>
  </channel>
</rss>
