<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Weird Idea: Blocks in Paths to Provide Refinement *AND* Value</title>
    <link>https://forum.rebol.info/t/weird-idea-blocks-in-paths-to-provide-refinement-and-value/1932</link>
    <description>[quote=&quot;hostilefork, post:1, topic:1333&quot;]
We know pretty well what a GROUP! in a PATH! does. But what should a BLOCK! in a path do?
[/quote]

I&#39;ll mention that for function calls, I was thinking it would be nice if it could name a refinement and a value.

    &gt;&gt; data: &#39;(a b c)
    &gt;&gt; append/[dup: 1 + 2] data &lt;foo&gt;
    == (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)

Given how common this would be, it&#39;s probably better to just use a WORD! instead of a SET-WORD! and people will get the idea, not expecting DUP to be a function call or something of that sort:

    &gt;&gt; data: &#39;(a b c)
    &gt;&gt; append/[dup 1 + 2] data &lt;foo&gt;
    == (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)

Or maybe this is a job for TUPLE?

    &gt;&gt; data: &#39;(a b c)
    &gt;&gt; append/dup.(1 + 2) data &lt;foo&gt;
    == (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)

Inert things could be just provided directly, like **`append/dup.3`**

It wouldn&#39;t be great for everything, and you&#39;d want to use APPLY for anything verbose.  But it could be convenient in some cases.

People very frequently request seeing the connection between the refinement and its value more obviously.</description>
    
    <lastBuildDate>Sat, 20 Aug 2022 08:12:03 +0000</lastBuildDate>
    <category>Functions</category>
    <atom:link href="https://forum.rebol.info/t/weird-idea-blocks-in-paths-to-provide-refinement-and-value/1932.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Weird Idea: Blocks in Paths to Provide Refinement *AND* Value</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="hostilefork" data-post="1" data-topic="1333">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://forum.rebol.info/user_avatar/forum.rebol.info/hostilefork/40/26_2.png" class="avatar">
</div>
<blockquote>
<p>We know pretty well what a GROUP! in a PATH! does. But what should a BLOCK! in a path do?</p>
</blockquote>
</aside>
<p>I'll mention that for function calls, I was thinking it would be nice if it could name a refinement and a value.</p>
<pre><code>&gt;&gt; data: '(a b c)
&gt;&gt; append/[dup: 1 + 2] data &lt;foo&gt;
== (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)
</code></pre>
<p>Given how common this would be, it's probably better to just use a WORD! instead of a SET-WORD! and people will get the idea, not expecting DUP to be a function call or something of that sort:</p>
<pre><code>&gt;&gt; data: '(a b c)
&gt;&gt; append/[dup 1 + 2] data &lt;foo&gt;
== (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)
</code></pre>
<p>Or maybe this is a job for TUPLE?</p>
<pre><code>&gt;&gt; data: '(a b c)
&gt;&gt; append/dup.(1 + 2) data &lt;foo&gt;
== (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)
</code></pre>
<p>Inert things could be just provided directly, like <strong><code>append/dup.3</code></strong></p>
<p>It wouldn't be great for everything, and you'd want to use APPLY for anything verbose.  But it could be convenient in some cases.</p>
<p>People very frequently request seeing the connection between the refinement and its value more obviously.</p>
          <p><a href="https://forum.rebol.info/t/weird-idea-blocks-in-paths-to-provide-refinement-and-value/1932/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/weird-idea-blocks-in-paths-to-provide-refinement-and-value/1932/1</link>
        <pubDate>Mon, 21 Sep 2020 05:38:46 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1932-1</guid>
        <source url="https://forum.rebol.info/t/weird-idea-blocks-in-paths-to-provide-refinement-and-value/1932.rss">Weird Idea: Blocks in Paths to Provide Refinement *AND* Value</source>
      </item>
  </channel>
</rss>
