<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>DATATYPE! vs. TYPE!</title>
    <link>https://rebol.metaeducation.com/t/datatype-vs-type/2510</link>
    <description>Historical Rebol made the decision to call things like BLOCK! and INTEGER! &quot;datatypes&quot;.

They were thus DATATYPE! and not TYPE!.

For a long time I thought that was unnecessarily wordy.  At some point I had a change of heart, and decided that I liked it.

*I don&#39;t remember why I changed my mind, and can&#39;t find a post about that here.*

It does have an advantage in the code as it stands, because internally `Type` is an enumeration (with an escape value in the enumeration as `TYPE_0` for [extension types](https://rebol.metaeducation.com/t/extension-types-implementation/1203))

Now that [DATATYPE! is an antiform](https://rebol.metaeducation.com/t/old-idea-revisited-datatype-as-antiform/2324), I do sort of appreciate it being a little &quot;weirder&quot; in its name.

But it&#39;s a decision that if it&#39;s going to be revisited, it needs to be revisited sooner rather than later.  It would be nice if I could remember why I thought there was a drawback to using just the name `TYPE!.`</description>
    
    <lastBuildDate>Fri, 18 Jul 2025 12:20:47 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://rebol.metaeducation.com/t/datatype-vs-type/2510.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>DATATYPE! vs. TYPE!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="3" data-topic="2510">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>In Haskell (and related languages) the type of a type is called a ‘kind’.</p>
</blockquote>
</aside>
<p>For a time I considered the idea of KIND being more like something's fundamental type (OBJECT!) and then it could have something more complex as a TYPE (e.g. BOOK! being a particular class of objects, with author and title and such).</p>
<p>As you know the concept of a type system of that sort is lacking.</p>
<p>In terms of extracting the type, I decided I did not like the way <strong><code>kind of</code></strong> sounded ("kind of value" is like "kinda value").  I pretty much gave in and said that <strong><code>type of</code></strong> would give you back the antiform datatype for BLOCK! for blocks, and move on with it.  But it's still all pretty hazy.</p>
<p>However, with the merging of the "Heart" enum and the "Sigil" 2-bit value into one Byte in the Cell header, it no longer was accurate to call that the HEART_BYTE, since it multiplexed the heart and sigil together.  So I called it the KIND_BYTE.</p>
<p>The type system may just have to suck for an initial release, and be something that gets hammered out later.  I don't know.  But the design space has opened up a bit with the TYPE_0 mechanics, and so I might take a crack at enums or other things to see what can be done.</p>
          <p><a href="https://rebol.metaeducation.com/t/datatype-vs-type/2510/5">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/datatype-vs-type/2510/5</link>
        <pubDate>Fri, 18 Jul 2025 12:20:47 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2510-5</guid>
        <source url="https://rebol.metaeducation.com/t/datatype-vs-type/2510.rss">DATATYPE! vs. TYPE!</source>
      </item>
      <item>
        <title>DATATYPE! vs. TYPE!</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>Some kind of integer.</p>
          <p><a href="https://rebol.metaeducation.com/t/datatype-vs-type/2510/4">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/datatype-vs-type/2510/4</link>
        <pubDate>Fri, 18 Jul 2025 12:14:57 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2510-4</guid>
        <source url="https://rebol.metaeducation.com/t/datatype-vs-type/2510.rss">DATATYPE! vs. TYPE!</source>
      </item>
      <item>
        <title>DATATYPE! vs. TYPE!</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="iArnold" data-post="2" data-topic="2510">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/iarnold/48/226_2.png" class="avatar"> iArnold:</div>
<blockquote>
<p>All things are of a certain type. All types themselves are of type datatype. Datatype is a datatype thing.</p>
</blockquote>
</aside>
<p>In Haskell (and related languages) the type of a type is called a ‘kind’. All types in Haskell are of kind <code>Type</code> (in earlier versions also called <code>*</code>). You can write kind signatures for types, e.g. <code>Maybe :: Type -&gt; Type</code>. Kinds themselves have a type too, in this case the slightly mindbending <code>Type :: Type</code>. And on it goes…</p>
          <p><a href="https://rebol.metaeducation.com/t/datatype-vs-type/2510/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/datatype-vs-type/2510/3</link>
        <pubDate>Fri, 18 Jul 2025 03:45:28 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2510-3</guid>
        <source url="https://rebol.metaeducation.com/t/datatype-vs-type/2510.rss">DATATYPE! vs. TYPE!</source>
      </item>
      <item>
        <title>DATATYPE! vs. TYPE!</title>
        <dc:creator><![CDATA[iArnold]]></dc:creator>
        <description><![CDATA[
            <p>All things are of a certain type. All types themselves are of type datatype. Datatype is a datatype thing.<br>
Everything is neatly categorized.<br>
Ignore Kurt Godel's incompleteness theorem.</p>
          <p><a href="https://rebol.metaeducation.com/t/datatype-vs-type/2510/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/datatype-vs-type/2510/2</link>
        <pubDate>Thu, 17 Jul 2025 20:25:44 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2510-2</guid>
        <source url="https://rebol.metaeducation.com/t/datatype-vs-type/2510.rss">DATATYPE! vs. TYPE!</source>
      </item>
      <item>
        <title>DATATYPE! vs. TYPE!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Historical Rebol made the decision to call things like BLOCK! and INTEGER! "datatypes".</p>
<p>They were thus DATATYPE! and not TYPE!.</p>
<p>For a long time I thought that was unnecessarily wordy.  At some point I had a change of heart, and decided that I liked it.</p>
<p><em>I don't remember why I changed my mind, and can't find a post about that here.</em></p>
<p>It does have an advantage in the code as it stands, because internally <code>Type</code> is an enumeration (with an escape value in the enumeration as <code>TYPE_0</code> for <a href="https://rebol.metaeducation.com/t/extension-types-implementation/1203">extension types</a>)</p>
<p>Now that <a href="https://rebol.metaeducation.com/t/old-idea-revisited-datatype-as-antiform/2324">DATATYPE! is an antiform</a>, I do sort of appreciate it being a little "weirder" in its name.</p>
<p>But it's a decision that if it's going to be revisited, it needs to be revisited sooner rather than later.  It would be nice if I could remember why I thought there was a drawback to using just the name <code>TYPE!.</code></p>
          <p><a href="https://rebol.metaeducation.com/t/datatype-vs-type/2510/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/datatype-vs-type/2510/1</link>
        <pubDate>Thu, 17 Jul 2025 10:58:43 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2510-1</guid>
        <source url="https://rebol.metaeducation.com/t/datatype-vs-type/2510.rss">DATATYPE! vs. TYPE!</source>
      </item>
  </channel>
</rss>
