<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>HERE for Getting Current Environment</title>
    <link>https://rebol.metaeducation.com/t/here-for-getting-current-environment/2442</link>
    <description>Occasionally I&#39;ve thought that &quot;BIND&quot; could be an arity-1 operation that pastes the currently running environment onto its argument:

    &gt;&gt; x: 1000

    &gt;&gt; code: bind &#39;[print [x + 20]]

    &gt;&gt; eval code
    1020

But arity-1 seems wasteful for something so inflexible to be given a word so short like BIND (especially when $ exists as a shorthand for this).

So how about HERE being a function that gives you the current context in the evaluator, so you can pass it to arity-2 BIND?

    &gt;&gt; x: 1000

    &gt;&gt; code: bind here &#39;[print [x + 20]]

    &gt;&gt; eval code
    1020

That seems very literate.  BIND-HERE could be an intrinsic (intrinsic dispatch only works on arity-1, no frame! unless debug mode).  That could be used by people seeking to optimize.

*(I feel like @bradrn suggested something like this--maybe even exactly this--at a time when I was reluctant to make functions that were callsite-sensitive.  I&#39;m still definitely reluctant to see too many things take on this property... making them harder to abstract, specialize-with, or reason about.  Which is why HERE being a rare exception helps limit the need to give that property to too many things.)*

This is competitive with how **`&lt;here&gt;`** is used in PARSE as a combinator to get the current position.  I&#39;d sort of rather move that out of the way:

   * **`&lt;position&gt;`** (shorthand as **`&lt;pos&gt;`**?)

   * **`&lt;at&gt;`** or maybe **`&lt;@&gt;`** ?

Actually, the combinators all take a parameter called **INPUT** which is understood to be the input *at* the current position.  So **`&lt;input&gt;`** would make sense in that regard, more than how I&#39;ve been using it to mean &quot;synthesize the input to the original parse call&quot;.

That may be more an indictment of the name of the argument to combinators than it is a suggestion that `&lt;input&gt;` is a great name for the *current* position.  Perhaps the parsers should get POSITION or POS.

Anyway, point is that if HERE is going to take on this environment-based meaning, then PARSE should probably not have a competing meaning for the word...since it&#39;s going to have to speak about binding environments too.</description>
    
    <lastBuildDate>Sun, 11 May 2025 09:16:13 +0000</lastBuildDate>
    <category>Binding</category>
    <atom:link href="https://rebol.metaeducation.com/t/here-for-getting-current-environment/2442.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>HERE for Getting Current Environment</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Occasionally I've thought that "BIND" could be an arity-1 operation that pastes the currently running environment onto its argument:</p>
<pre><code>&gt;&gt; x: 1000

&gt;&gt; code: bind '[print [x + 20]]

&gt;&gt; eval code
1020
</code></pre>
<p>But arity-1 seems wasteful for something so inflexible to be given a word so short like BIND (especially when $ exists as a shorthand for this).</p>
<p>So how about HERE being a function that gives you the current context in the evaluator, so you can pass it to arity-2 BIND?</p>
<pre><code>&gt;&gt; x: 1000

&gt;&gt; code: bind here '[print [x + 20]]

&gt;&gt; eval code
1020
</code></pre>
<p>That seems very literate.  BIND-HERE could be an intrinsic (intrinsic dispatch only works on arity-1, no frame! unless debug mode).  That could be used by people seeking to optimize.</p>
<p><em>(I feel like <a class="mention" href="https://rebol.metaeducation.com/u/bradrn">@bradrn</a> suggested something like this--maybe even exactly this--at a time when I was reluctant to make functions that were callsite-sensitive.  I'm still definitely reluctant to see too many things take on this property... making them harder to abstract, specialize-with, or reason about.  Which is why HERE being a rare exception helps limit the need to give that property to too many things.)</em></p>
<p>This is competitive with how <strong><code>&lt;here&gt;</code></strong> is used in PARSE as a combinator to get the current position.  I'd sort of rather move that out of the way:</p>
<ul>
<li>
<p><strong><code>&lt;position&gt;</code></strong> (shorthand as <strong><code>&lt;pos&gt;</code></strong>?)</p>
</li>
<li>
<p><strong><code>&lt;at&gt;</code></strong> or maybe <strong><code>&lt;@&gt;</code></strong> ?</p>
</li>
</ul>
<p>Actually, the combinators all take a parameter called <strong>INPUT</strong> which is understood to be the input <em>at</em> the current position.  So <strong><code>&lt;input&gt;</code></strong> would make sense in that regard, more than how I've been using it to mean "synthesize the input to the original parse call".</p>
<p>That may be more an indictment of the name of the argument to combinators than it is a suggestion that <code>&lt;input&gt;</code> is a great name for the <em>current</em> position.  Perhaps the parsers should get POSITION or POS.</p>
<p>Anyway, point is that if HERE is going to take on this environment-based meaning, then PARSE should probably not have a competing meaning for the word...since it's going to have to speak about binding environments too.</p>
          <p><a href="https://rebol.metaeducation.com/t/here-for-getting-current-environment/2442/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/here-for-getting-current-environment/2442/1</link>
        <pubDate>Sun, 11 May 2025 09:16:13 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2442-1</guid>
        <source url="https://rebol.metaeducation.com/t/here-for-getting-current-environment/2442.rss">HERE for Getting Current Environment</source>
      </item>
  </channel>
</rss>
