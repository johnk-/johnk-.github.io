<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>New Feature: Literal Picking With TUPLE!</title>
    <link>https://rebol.metaeducation.com/t/new-feature-literal-picking-with-tuple/2468</link>
    <description>The ability to embed quotes in TUPLE!s/PATH!s/CHAIN!s affords some interesting abilities.

It&#39;s not always clear what those abilities should actually *be*.  However, one case seemed pretty clear, so I went ahead with it...

    &gt;&gt; a: &lt;something&gt;

    &gt;&gt; m: to map! []
    == &amp;[map! []]

    &gt;&gt; m.(a): 304
    == 304

    &gt;&gt; m.&#39;(a): 1020
    == 1020

    &gt;&gt; m
    == &amp;[map! [
        &lt;something&gt; 304
        (a) 1020
    ]]

    &gt;&gt; m.&#39;(a)
    == 1020

Pretty cool.  Note that you can&#39;t do this with &quot;literal SET-XXX&quot; because the CHAIN! scans &quot;above&quot; the TUPLE!.  So **`m.(a):`** is a CHAIN! of **`[m.(a) _]`**.

If you wanted to actually put **`(a):`** in the map, you can&#39;t use this trick.  You have to do it the &quot;hard way&quot;:

     m.(&#39;(a):): &lt;whatever&gt;</description>
    
    <lastBuildDate>Fri, 23 May 2025 08:53:22 +0000</lastBuildDate>
    <category>Feature Discover</category>
    <atom:link href="https://rebol.metaeducation.com/t/new-feature-literal-picking-with-tuple/2468.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>New Feature: Literal Picking With TUPLE!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="2468">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<pre data-code-wrap="plaintext"><code class="lang-plaintext">&gt;&gt; m.'(a): 1020
== 1020
</code></pre>
</blockquote>
</aside>
<p>Note that in Red, you would have to do <strong><code>m/(quote (a))</code></strong> (their QUOTE is Ren-C's THE, since they don't bother to "waste" the word QUOTE on an operator for transforming <strong><code>a</code></strong> to <strong><code>'a</code></strong> since only WORD! and PATH! can be quoted)...</p>
<p>But...</p>
<pre><code>red&gt;&gt; m/(quote (a)): 1020
*** Script Error: cannot access paren! in path m/(quote (a)):
</code></pre>
<p>Which is their way of telling you that you can't use lists as map keys (because they don't have immutability to apply to make sure that the key hashes consistently, they'd have to make a copy, and that "costs too much"...)  <img src="https://rebol.metaeducation.com/images/emoji/twitter/roll_eyes.png?v=14" title=":roll_eyes:" class="emoji" alt=":roll_eyes:" loading="lazy" width="20" height="20"></p>
          <p><a href="https://rebol.metaeducation.com/t/new-feature-literal-picking-with-tuple/2468/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/new-feature-literal-picking-with-tuple/2468/2</link>
        <pubDate>Fri, 23 May 2025 08:53:22 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2468-2</guid>
        <source url="https://rebol.metaeducation.com/t/new-feature-literal-picking-with-tuple/2468.rss">New Feature: Literal Picking With TUPLE!</source>
      </item>
      <item>
        <title>New Feature: Literal Picking With TUPLE!</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>The ability to embed quotes in TUPLE!s/PATH!s/CHAIN!s affords some interesting abilities.</p>
<p>It's not always clear what those abilities should actually <em>be</em>.  However, one case seemed pretty clear, so I went ahead with it...</p>
<pre><code>&gt;&gt; a: &lt;something&gt;

&gt;&gt; m: to map! []
== &amp;[map! []]

&gt;&gt; m.(a): 304
== 304

&gt;&gt; m.'(a): 1020
== 1020

&gt;&gt; m
== &amp;[map! [
    &lt;something&gt; 304
    (a) 1020
]]

&gt;&gt; m.'(a)
== 1020
</code></pre>
<p>Pretty cool.  Note that you can't do this with "literal SET-XXX" because the CHAIN! scans "above" the TUPLE!.  So <strong><code>m.(a):</code></strong> is a CHAIN! of <strong><code>[m.(a) _]</code></strong>.</p>
<p>If you wanted to actually put <strong><code>(a):</code></strong> in the map, you can't use this trick.  You have to do it the "hard way":</p>
<pre><code> m.('(a):): &lt;whatever&gt;
</code></pre>
          <p><a href="https://rebol.metaeducation.com/t/new-feature-literal-picking-with-tuple/2468/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/new-feature-literal-picking-with-tuple/2468/1</link>
        <pubDate>Fri, 23 May 2025 08:52:58 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2468-1</guid>
        <source url="https://rebol.metaeducation.com/t/new-feature-literal-picking-with-tuple/2468.rss">New Feature: Literal Picking With TUPLE!</source>
      </item>
  </channel>
</rss>
