<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>&quot;I&#39;m not BAD!...I&#39;m just MOLD-ed that way...&quot;</title>
    <link>https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911</link>
    <description>I&#39;m tinkering with an implementation of [fully generic isotopes](https://forum.rebol.info/t/should-everything-have-an-isotopic-form/1889/5?u=hostilefork).  The idea is that all types have an isotopic form, and routines can choose to react to this isotopic form giving it special meaning.

This means the tilde markings which used to designate a BAD-WORD! would be ways of making any value isotopic:

    &gt;&gt; ~foo~
    == foo  ; isotope

    &gt;&gt; ~[d e]~
    == [d e]  ; isotope

    &gt;&gt; ~1020~
    == 1020  ; isotope

    &gt;&gt; ~#[datatype word!]~
    == #[datatype word!]  ; isotope

The notation is not an isotope itself, it&#39;s just used to produce them.  And if you&#39;re looking in an object and see it molds out fields that are these and non-quoted, that implies that the field itself actually holds an isotope.

    &gt;&gt; obj: make object! [x: spread [d e], y: ~[d e]~, z: &#39;~[d e]~]
    == make object! [
        x: ~[d e]~
        y: ~[d e]~
        z: &#39;~[d e]~
    ]

    &gt;&gt; obj.x
    ** Error: obj.x is a BLOCK! isotope, use ^META to access

    &gt;&gt; obj.y
    ** Error: obj.y is a BLOCK! isotope, use ^META to access

    &gt;&gt; obj.z
    == ~[d e]~

So you can see how the notation works with the generic form, and can be quoted itself.

## I Kind Of Want To Curtail Use Of These In Source...

The original thought about BAD-WORD! was that their ugly notation was supposed to be used to draw attention to them.  So like in the object molding above, you&#39;d be able to see where the isotopes were and it would guide your eyes to the problem.

*And in fact, I&#39;m not even 100% sure that we want to support storing isotopes in variables unless we absolutely have to.*  Perhaps isotopic blocks would generate errors if you tried--and it would force you to use a ^META operation to persist it.  But a representation that evaluates to them is needed for mechanical reasons either way.

Nevertheless, you *could* use them to do things like splicing literal blocks:

    &gt;&gt; append [a b c] [d e]
    == [a b c [d e]]

    &gt;&gt; append [a b c] ~[d e]~
    == [a b c d e]

It would actually be an efficient way to do it, but I feel like it might numb people to the squiggles...which are intended to draw attention to cases where the isotopes leaked through an operation and shouldn&#39;t have.  So best practices would suggest using operators instead

    &gt;&gt; append [a b c] spread [d e]
    == [a b c d e]

## But The ~XXX~ Forms Need A Name... Is It BAD! ?

I&#39;d called ~xxx~ a BAD-WORD!.  Now that the tildes are a generic container kind of like QUOTED!, that would default to just being... BAD!

    &gt;&gt; type of fourth [a b c ~[d e]~]
    == #[datatype! bad!]

So there&#39;s going to be a whole naming situation for operations to get the contained item out, and what to call this container.

*(If it&#39;s so BAD, does it need to be... REFORMed?  :stuck_out_tongue: )*

I don&#39;t know how to fit this into the isotope naming scheme...it&#39;s a thing that generates isotopes when it evaluates.  The analogy breaks down if you try to call it a NUCLEUS or something odd like that.

Calling the ~xxx~ forms BAD! does have the advantage of being able to combine that and say ~[d e]~ is a &quot;bad block&quot; and ~1020~ is a &quot;bad integer&quot;, but... you&#39;ll see these in well-formed programs.  It makes it sound like something is *corrupt*, when the real intent is different.

It could be called QUASI! which could related it to QUOTED!.  *&quot;~[d e]~ is a quasi-block&quot;*

Bear in mind they can be quoted, so `&#39;~[d e]~` would then be a &quot;quoted quasi-block&quot;.  :-(

In some sense, [d e] and ~[d e]~ and &#39;[d e] and &#39;&#39;[d e] could all be thought of as &quot;isotopes&quot; of blocks...in addition to what we call the &quot;isotope&quot; form (which has no representation, because it&#39;s something you can only measure by turning it into another form).

So we might call ~[d e]~ a &quot;block isotope&quot;, and then give some other name to the invisible status that it produces...?

    &gt;&gt; ~[d e]~  ; call this a block isotope?
    == [d e]  ; then this could be... a... ghost block?

But overall my leaning is that I like calling the ephemeral form &quot;isotope&quot;, because I think that captures its weird invisible/reactivity/decaying character.

## The Pejorative &quot;BAD!&quot; May Seem Harsh, But May Be Good?

If the name can scare people out of trying to use these too much at source level, that&#39;s not the worst outcome.

But then there still have to be ways of getting the contents out.  QUOTED! has UNQUOTE and NOQUOTE to take off quoting layers, and QUOTE to add them on.

Right now I&#39;ve got MAKE BAD! to produce them:

    &gt;&gt; make bad! 1020
    == ~1020~

    &gt;&gt; make bad! [d e]
    == ~[d e]~

If we called them something like TOXIC! then there could be detox and toxify.  :radioactive: 

**There&#39;s plenty to be involved with working out the mechanics and not worrying about the names, but wanted to put the naming issue out to be mulled over.**</description>
    
    <lastBuildDate>Tue, 16 Aug 2022 03:15:51 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>&quot;I&#39;m not BAD!...I&#39;m just MOLD-ed that way...&quot;</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I think I am leaning to calling it QUASI.</p>
<ul>
<li>
<p>Same number of letters as QUOTE</p>
</li>
<li>
<p>Starts with Q and looks similar so indicates a similar phenomenon</p>
</li>
<li>
<p>Offers seemingly obvious verb forms QUASI and UNQUASI, and the test QUASI?</p>
</li>
<li>
<p>"Looks like it sounds"... tildes always suggest something of an approximation, like ~30 meaning "approximately 30".</p>
</li>
<li>
<p>Quasi carries some of the pejorative sense of "badness", because prescriptively I maintain that we don't want to be seeing these in common source--at least not a lot of unquoted "uses" of them.</p>
</li>
<li>
<p>I suppose I'm not that concerned about having to say the phrase "quoted quasi word" any moreso than having to say "quoted bad word".</p>
</li>
</ul>
<p>Unfortunately the datatype doesn't afford an obvious name like QUOTED! does as QUASID!</p>
<p>Does that suggest that the datatypes should be simply called QUOTE! and QUASI!</p>
<p>We don't call a GROUP! a GROUPED! or a BLOCK! a BLOCKED! just because it describes a wrapper around its contents.  It takes on the name of the container.</p>
<p>Though it would take some getting used to.  <strong>if quote? x [...]</strong> feels like it collides with other concrete things... like the character of a quote mark.  It sort of has the same issue as PAREN? did, or if block was called BRACKET!.</p>
<p>It may just be all right to have the distinction between QUOTED! and QUASI!.</p>
          <p><a href="https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911/3</link>
        <pubDate>Tue, 16 Aug 2022 02:14:50 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1911-3</guid>
        <source url="https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911.rss">&quot;I&#39;m not BAD!...I&#39;m just MOLD-ed that way...&quot;</source>
      </item>
      <item>
        <title>&quot;I&#39;m not BAD!...I&#39;m just MOLD-ed that way...&quot;</title>
        <dc:creator><![CDATA[IngoHohmann]]></dc:creator>
        <description><![CDATA[
            <p>quasi, pseudo, fake, mock, somewhat, nearly, acting,<br>
special, marked, tainted, ...</p>
<p>I guess the last 3 ideas could hint into a good direction.</p>
          <p><a href="https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911/2</link>
        <pubDate>Wed, 10 Aug 2022 10:34:44 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1911-2</guid>
        <source url="https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911.rss">&quot;I&#39;m not BAD!...I&#39;m just MOLD-ed that way...&quot;</source>
      </item>
      <item>
        <title>&quot;I&#39;m not BAD!...I&#39;m just MOLD-ed that way...&quot;</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>I'm tinkering with an implementation of <a href="https://forum.rebol.info/t/should-everything-have-an-isotopic-form/1889/5">fully generic isotopes</a>.  The idea is that all types have an isotopic form, and routines can choose to react to this isotopic form giving it special meaning.</p>
<p>This means the tilde markings which used to designate a BAD-WORD! would be ways of making any value isotopic:</p>
<pre><code>&gt;&gt; ~foo~
== foo  ; isotope

&gt;&gt; ~[d e]~
== [d e]  ; isotope

&gt;&gt; ~1020~
== 1020  ; isotope

&gt;&gt; ~#[datatype word!]~
== #[datatype word!]  ; isotope
</code></pre>
<p>The notation is not an isotope itself, it's just used to produce them.  And if you're looking in an object and see it molds out fields that are these and non-quoted, that implies that the field itself actually holds an isotope.</p>
<pre><code>&gt;&gt; obj: make object! [x: spread [d e], y: ~[d e]~, z: '~[d e]~]
== make object! [
    x: ~[d e]~
    y: ~[d e]~
    z: '~[d e]~
]

&gt;&gt; obj.x
** Error: obj.x is a BLOCK! isotope, use ^META to access

&gt;&gt; obj.y
** Error: obj.y is a BLOCK! isotope, use ^META to access

&gt;&gt; obj.z
== ~[d e]~
</code></pre>
<p>So you can see how the notation works with the generic form, and can be quoted itself.</p>
<h2>I Kind Of Want To Curtail Use Of These In Source...</h2>
<p>The original thought about BAD-WORD! was that their ugly notation was supposed to be used to draw attention to them.  So like in the object molding above, you'd be able to see where the isotopes were and it would guide your eyes to the problem.</p>
<p><em>And in fact, I'm not even 100% sure that we want to support storing isotopes in variables unless we absolutely have to.</em>  Perhaps isotopic blocks would generate errors if you tried--and it would force you to use a ^META operation to persist it.  But a representation that evaluates to them is needed for mechanical reasons either way.</p>
<p>Nevertheless, you <em>could</em> use them to do things like splicing literal blocks:</p>
<pre><code>&gt;&gt; append [a b c] [d e]
== [a b c [d e]]

&gt;&gt; append [a b c] ~[d e]~
== [a b c d e]
</code></pre>
<p>It would actually be an efficient way to do it, but I feel like it might numb people to the squiggles...which are intended to draw attention to cases where the isotopes leaked through an operation and shouldn't have.  So best practices would suggest using operators instead</p>
<pre><code>&gt;&gt; append [a b c] spread [d e]
== [a b c d e]
</code></pre>
<h2>But The ~XXX~ Forms Need A Name... Is It BAD! ?</h2>
<p>I'd called ~xxx~ a BAD-WORD!.  Now that the tildes are a generic container kind of like QUOTED!, that would default to just being... BAD!</p>
<pre><code>&gt;&gt; type of fourth [a b c ~[d e]~]
== #[datatype! bad!]
</code></pre>
<p>So there's going to be a whole naming situation for operations to get the contained item out, and what to call this container.</p>
<p><em>(If it's so BAD, does it need to be... REFORMed?  <img src="https://forum.rebol.info/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> )</em></p>
<p>I don't know how to fit this into the isotope naming scheme...it's a thing that generates isotopes when it evaluates.  The analogy breaks down if you try to call it a NUCLEUS or something odd like that.</p>
<p>Calling the ~xxx~ forms BAD! does have the advantage of being able to combine that and say ~[d e]~ is a "bad block" and ~1020~ is a "bad integer", but... you'll see these in well-formed programs.  It makes it sound like something is <em>corrupt</em>, when the real intent is different.</p>
<p>It could be called QUASI! which could related it to QUOTED!.  <em>"~[d e]~ is a quasi-block"</em></p>
<p>Bear in mind they can be quoted, so <code>'~[d e]~</code> would then be a "quoted quasi-block".  <img src="https://forum.rebol.info/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"></p>
<p>In some sense, [d e] and ~[d e]~ and '[d e] and ''[d e] could all be thought of as "isotopes" of blocks...in addition to what we call the "isotope" form (which has no representation, because it's something you can only measure by turning it into another form).</p>
<p>So we might call ~[d e]~ a "block isotope", and then give some other name to the invisible status that it produces...?</p>
<pre><code>&gt;&gt; ~[d e]~  ; call this a block isotope?
== [d e]  ; then this could be... a... ghost block?
</code></pre>
<p>But overall my leaning is that I like calling the ephemeral form "isotope", because I think that captures its weird invisible/reactivity/decaying character.</p>
<h2>The Pejorative "BAD!" May Seem Harsh, But May Be Good?</h2>
<p>If the name can scare people out of trying to use these too much at source level, that's not the worst outcome.</p>
<p>But then there still have to be ways of getting the contents out.  QUOTED! has UNQUOTE and NOQUOTE to take off quoting layers, and QUOTE to add them on.</p>
<p>Right now I've got MAKE BAD! to produce them:</p>
<pre><code>&gt;&gt; make bad! 1020
== ~1020~

&gt;&gt; make bad! [d e]
== ~[d e]~
</code></pre>
<p>If we called them something like TOXIC! then there could be detox and toxify.  <img src="https://forum.rebol.info/images/emoji/twitter/radioactive.png?v=9" title=":radioactive:" class="emoji" alt=":radioactive:"></p>
<p><strong>There's plenty to be involved with working out the mechanics and not worrying about the names, but wanted to put the naming issue out to be mulled over.</strong></p>
          <p><a href="https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911/1</link>
        <pubDate>Fri, 05 Aug 2022 09:33:50 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1911-1</guid>
        <source url="https://forum.rebol.info/t/im-not-bad-im-just-mold-ed-that-way/1911.rss">&quot;I&#39;m not BAD!...I&#39;m just MOLD-ed that way...&quot;</source>
      </item>
  </channel>
</rss>
