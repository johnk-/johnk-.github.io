<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Thinking We Might Should Nix PROTECT/HIDE For Now</title>
    <link>https://rebol.metaeducation.com/t/thinking-we-might-should-nix-protect-hide-for-now/1644</link>
    <description>R3-Alpha had an interesting feature, [which let you &quot;hide&quot; fields in contexts](http://www.rebol.net/r3blogs/0189.html).

It was actually something that drew me in to the language in the beginning as &quot;oh, that&#39;s cool&quot;.

So it has stuck around in some form, and simple examples do still seem to work:

    &gt;&gt; obj: make object! [x: 10 y: 20]
    == make object! [
        x: 10
        y: 20
    ]

    &gt;&gt; protect/hide &#39;obj/y
    == obj/y

    &gt;&gt; obj
    == make object! [
        x: 10
    ]

**But this is a very complex feature to honor systemically.**  Doing it poorly is easy.  Doing it pervasively and correctly is rather difficult.

In particular, what bothers me about this &quot;user controlled hidden bit&quot; is that I&#39;m trying to get some system-level hidden mechanics working correctly.  And the interaction between things the system needs to hide and this &quot;user can hide anything they want&quot; is somewhat maddening, especially because I know how hard it is to do such a thing *right*.

It&#39;s an intriguing feature that seems to have been a bit of an off-the-cuff experiment.  I don&#39;t see it as mission-critical...and all it does is interfere with the hardening needed to solve the mission-critical problems related to contexts.

Not going to delete it immediately, but it&#39;s certainly in the crosshairs if it causes any more trouble with something I&#39;m trying to fix.</description>
    
    <lastBuildDate>Thu, 23 Sep 2021 05:12:16 +0000</lastBuildDate>
    <category>Internals</category>
    <atom:link href="https://rebol.metaeducation.com/t/thinking-we-might-should-nix-protect-hide-for-now/1644.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Thinking We Might Should Nix PROTECT/HIDE For Now</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A post was split to a new topic: <a href="https://rebol.metaeducation.com/t/protect-back-in-the-hot-seat-but-not-anymore/2482">PROTECT Back In The Hot Seat... (But Not Anymore)</a></p>
          <p><a href="https://rebol.metaeducation.com/t/thinking-we-might-should-nix-protect-hide-for-now/1644/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/thinking-we-might-should-nix-protect-hide-for-now/1644/2</link>
        <pubDate>Sat, 07 Jun 2025 16:26:44 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1644-2</guid>
        <source url="https://rebol.metaeducation.com/t/thinking-we-might-should-nix-protect-hide-for-now/1644.rss">Thinking We Might Should Nix PROTECT/HIDE For Now</source>
      </item>
      <item>
        <title>Thinking We Might Should Nix PROTECT/HIDE For Now</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>R3-Alpha had an interesting feature, <a href="http://www.rebol.net/r3blogs/0189.html">which let you "hide" fields in contexts</a>.</p>
<p>It was actually something that drew me in to the language in the beginning as "oh, that's cool".</p>
<p>So it has stuck around in some form, and simple examples do still seem to work:</p>
<pre><code>&gt;&gt; obj: make object! [x: 10 y: 20]
== make object! [
    x: 10
    y: 20
]

&gt;&gt; protect/hide 'obj/y
== obj/y

&gt;&gt; obj
== make object! [
    x: 10
]
</code></pre>
<p><strong>But this is a very complex feature to honor systemically.</strong>  Doing it poorly is easy.  Doing it pervasively and correctly is rather difficult.</p>
<p>In particular, what bothers me about this "user controlled hidden bit" is that I'm trying to get some system-level hidden mechanics working correctly.  And the interaction between things the system needs to hide and this "user can hide anything they want" is somewhat maddening, especially because I know how hard it is to do such a thing <em>right</em>.</p>
<p>It's an intriguing feature that seems to have been a bit of an off-the-cuff experiment.  I don't see it as mission-critical...and all it does is interfere with the hardening needed to solve the mission-critical problems related to contexts.</p>
<p>Not going to delete it immediately, but it's certainly in the crosshairs if it causes any more trouble with something I'm trying to fix.</p>
          <p><a href="https://rebol.metaeducation.com/t/thinking-we-might-should-nix-protect-hide-for-now/1644/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/thinking-we-might-should-nix-protect-hide-for-now/1644/1</link>
        <pubDate>Tue, 03 Aug 2021 09:05:08 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1644-1</guid>
        <source url="https://rebol.metaeducation.com/t/thinking-we-might-should-nix-protect-hide-for-now/1644.rss">Thinking We Might Should Nix PROTECT/HIDE For Now</source>
      </item>
  </channel>
</rss>
