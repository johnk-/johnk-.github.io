<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Reviving the Rebmu Dialect</title>
    <link>https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377</link>
    <description>Rebmu was conceived as something of a puzzle, but not entirely a joke.  My futurist mindset is that code golf will be a growing recreational domain with time...played by humans and AI alike.  And **I&#39;ve identified code golf as one of the key target domains for the Ren-C project, in its [&quot;Minecraft of Programming&quot;](https://rebol.metaeducation.com/t/mission-statement/667/22?u=hostilefork) objectives.**

My intuition is that a truly *good* code golf language would wind up being useful in other ways; as some sort of compressed bytecode platform.

But I wouldn&#39;t be all that bothered if it didn&#39;t have great utility...and it was just truly *fun*, generating a corpus of work comparable to the circuitry that people have been putting together on the [Game of Life Wiki](https://www.conwaylife.com/wiki/Main_Page).

https://www.youtube.com/watch?v=iDKaz1iB9wQ

## Rebmu Needs To Be Brought Up To Date

I haven&#39;t run any of the samples in quite a long time.  So they&#39;re in a broken state.  I&#39;ve said that if Rebmu and its puzzles were added as Travis CI tests, they would probably provide particularly good checks of pathological codebases.  (As much of a headache as it is to debug such things, it&#39;s worth it in the end.)

* I&#39;m looking forward to taking better advantage of the [function deriving mechanisms](https://github.com/metaeducation/ren-c/tree/master/src/core/functionals) to make the definition of Rebmu itself easier.  **apd: :append/dup** to specialize append is a lot easier than what had to happen before.

* Need to take advantage of [**ISSUE! replacing CHAR!**](https://rebol.metaeducation.com/t/issuechar-token-is-hitting-it-out-of-the-park/1364)...not only do character literals shorten from **#&quot;a&quot;** to **#a** for those not needing delimiters, but the non-spacing character of **#abc** in print gives a way to tighten up formatted output.

* The landscape of names needs a rethink, as things like E could mean ELSE now, which is generic and powerful.

* Mushing has to be rethought for new constructs like predicates, as things like **until .not [...]** will be very useful.

* IO always presented a problem, simply because we didn&#39;t know how functions like PRINT should *actually* work.  (I&#39;ve lamented that we&#39;re still trying to figure out how to write &quot;Hello World&quot;).  These things are better understood now, and we&#39;re a tiny bit farther on things like the [ASK dialect](https://rebol.metaeducation.com/t/improving-the-ask-dialect-and-replacing-input/1124)

What has historically happened when I&#39;ve gone and tried to poke at Rebmu is that it just draws my attention to some issue or feature in the interpreter, so I wander off and lose momentum.  But it&#39;s probably time to bite the bullet and get it knocked into enough shape...and then add puzzles to it on Travis gradually.</description>
    
    <lastBuildDate>Wed, 09 Mar 2022 21:19:54 +0000</lastBuildDate>
    <category>Rebmu</category>
    <atom:link href="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Reviving the Rebmu Dialect</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>One small step for a fork, one giant leap for a Rebmu...</p>
<p><strong><a href="https://github.com/hostilefork/rebmu/runs/5486704767?check_suite_focus=true#step:5:1">The roman numeral example (roman.rebmu) is now running on GitHub CI against the current Ren-C.</a></strong></p>
<p>Minus getting the input string into S, right now the converter looks like:</p>
<blockquote>
<p><code>J K 0 feCs[Nse[I01V05X10L50C100D500M1000]twCinzJ[a+KeiL?jN[sbNjEL N00]j]Jn]adKj</code></p>
</blockquote>
<p>The input routine hit a snag, because what used to be <strong>rS</strong> would translate to <strong>readin-mu s</strong>, where it would quote the argument and read based on its type.  And S started out as a string.</p>
<p>For reasons maybe good or bad, I dropped all the preloaded single-character values (like S starting as an empty string and B as empty block) because I thought that was a cheap trick.  It was only chopping off a tiny constant factor...and wasn't really teaching anything about the language.  Will have to rethink that.</p>
<p>In any case, I created the <a href="https://rebol.metaeducation.com/c/domains/rebmu/56">Rebmu forum category</a> to discuss points as they come up.</p>
<h2><a name="p-5793-priorities-1" class="anchor" href="https://rebol.metaeducation.com#p-5793-priorities-1"></a>Priorities?</h2>
<p>Making the roman numeral converter work was the first order of business.  And I think I'd like to kind of keep going on getting <a href="https://github.com/hostilefork/rebmu/tree/master/examples">the example programs</a> working and tested before getting too involved in trying to rewrite any of the "engine".</p>
<p>Rebmu introduces some new challenges to the fledgling module system, with "sea of words" and "isolation" all being usermode concepts.  As well as how much might the interpreter recognize alternative headers?  Should a Rebmu file end in <strong>.reb</strong> or <strong>.rebmu</strong> or <strong>.rebmu.reb</strong>... and whether the header should say <strong>Rebol [Type: Rebmu]</strong> or <strong>Rebmu [...]</strong> and have that registered somewhere.</p>
<p>So there's no small amount of work here.  As usual, I'm not throwing softballs.  I'll post issues as they come up.</p>
          <p><a href="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377/4">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377/4</link>
        <pubDate>Wed, 09 Mar 2022 21:19:54 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1377-4</guid>
        <source url="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377.rss">Reviving the Rebmu Dialect</source>
      </item>
      <item>
        <title>Reviving the Rebmu Dialect</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="razetime" data-post="2" data-topic="1377" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/razetime/48/260_2.png" class="avatar"> razetime:</div>
<blockquote>
<p>I'd be glad to help with development(if you are accepting contributors).</p>
</blockquote>
</aside>
<p>It would be fantastic if someone else besides me wanted to work on it.</p>
<p>One prerequisite to start is getting a Ren-C built on your system--because that's what Rebmu will target to run in.  I'm sorry that we don't provide prebuilt packages, but the plus side is that anyone who works with it has the means to fix things:</p>
<p><a href="https://github.com/metaeducation/ren-c">https://github.com/metaeducation/ren-c</a></p>
<p>Learning Rebol lore with a stable Rebol2 is a good starting place for general ideas (especially while I attack a bit of an update to get Rebmu working against the current interpreter.)  But there's a universe of difference in Ren-C...especially in the areas which would be applied to code golf.  So bear that in mind.</p>
<p>I'll try and slot some time to get a baseline Rebmu working this week.</p>
          <p><a href="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377/3</link>
        <pubDate>Sat, 31 Oct 2020 06:52:25 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1377-3</guid>
        <source url="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377.rss">Reviving the Rebmu Dialect</source>
      </item>
      <item>
        <title>Reviving the Rebmu Dialect</title>
        <dc:creator><![CDATA[razetime]]></dc:creator>
        <description><![CDATA[
            <p>I just recently learned about Rebol and ReMU, and I'd be glad to help with development(if you are accepting contributors).</p>
          <p><a href="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377/2</link>
        <pubDate>Sat, 31 Oct 2020 06:45:14 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1377-2</guid>
        <source url="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377.rss">Reviving the Rebmu Dialect</source>
      </item>
      <item>
        <title>Reviving the Rebmu Dialect</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Rebmu was conceived as something of a puzzle, but not entirely a joke.  My futurist mindset is that code golf will be a growing recreational domain with time...played by humans and AI alike.  And <strong>I've identified code golf as one of the key target domains for the Ren-C project, in its <a href="https://rebol.metaeducation.com/t/mission-statement/667/22">"Minecraft of Programming"</a> objectives.</strong></p>
<p>My intuition is that a truly <em>good</em> code golf language would wind up being useful in other ways; as some sort of compressed bytecode platform.</p>
<p>But I wouldn't be all that bothered if it didn't have great utility...and it was just truly <em>fun</em>, generating a corpus of work comparable to the circuitry that people have been putting together on the <a href="https://www.conwaylife.com/wiki/Main_Page">Game of Life Wiki</a>.</p>
<p><a href="https://www.youtube.com/watch?v=iDKaz1iB9wQ">Rebmu Language Overview (@ Recode 2013)</a></p>

<h2><a name="p-4205-rebmu-needs-to-be-brought-up-to-date-1" class="anchor" href="https://rebol.metaeducation.com#p-4205-rebmu-needs-to-be-brought-up-to-date-1"></a>Rebmu Needs To Be Brought Up To Date</h2>
<p>I haven't run any of the samples in quite a long time.  So they're in a broken state.  I've said that if Rebmu and its puzzles were added as Travis CI tests, they would probably provide particularly good checks of pathological codebases.  (As much of a headache as it is to debug such things, it's worth it in the end.)</p>
<ul>
<li>
<p>I'm looking forward to taking better advantage of the <a href="https://github.com/metaeducation/ren-c/tree/master/src/core/functionals">function deriving mechanisms</a> to make the definition of Rebmu itself easier.  <strong>apd: :append/dup</strong> to specialize append is a lot easier than what had to happen before.</p>
</li>
<li>
<p>Need to take advantage of <a href="https://rebol.metaeducation.com/t/issuechar-token-is-hitting-it-out-of-the-park/1364"><strong>ISSUE! replacing CHAR!</strong></a>...not only do character literals shorten from <strong>#"a"</strong> to <strong><span class="hashtag-raw">#a</span></strong> for those not needing delimiters, but the non-spacing character of <strong><span class="hashtag-raw">#abc</span></strong> in print gives a way to tighten up formatted output.</p>
</li>
<li>
<p>The landscape of names needs a rethink, as things like E could mean ELSE now, which is generic and powerful.</p>
</li>
<li>
<p>Mushing has to be rethought for new constructs like predicates, as things like <strong>until .not [...]</strong> will be very useful.</p>
</li>
<li>
<p>IO always presented a problem, simply because we didn't know how functions like PRINT should <em>actually</em> work.  (I've lamented that we're still trying to figure out how to write "Hello World").  These things are better understood now, and we're a tiny bit farther on things like the <a href="https://rebol.metaeducation.com/t/improving-the-ask-dialect-and-replacing-input/1124">ASK dialect</a></p>
</li>
</ul>
<p>What has historically happened when I've gone and tried to poke at Rebmu is that it just draws my attention to some issue or feature in the interpreter, so I wander off and lose momentum.  But it's probably time to bite the bullet and get it knocked into enough shape...and then add puzzles to it on Travis gradually.</p>
          <p><a href="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377/1</link>
        <pubDate>Sat, 31 Oct 2020 06:06:18 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1377-1</guid>
        <source url="https://rebol.metaeducation.com/t/reviving-the-rebmu-dialect/1377.rss">Reviving the Rebmu Dialect</source>
      </item>
  </channel>
</rss>
