<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What is a FRAME! ?</title>
    <link>https://rebol.metaeducation.com/t/what-is-a-frame/2492</link>
    <description>[quote=&quot;hostilefork, post:1, topic:234&quot;]
Which makes one wonder, when returning a BLOCK! as data, should you always UNBIND/DEEP it before returning...to scrub off any inadvertent pointers into your local state it carries?  Should there be a RETURN/BOUND to avoid the scrub?
[/quote]

Oddly enough, I don&#39;t recall knowing that UNBIND even existed - so maybe my life can be easier.  It&#39;s an interesting question. When are the bindings of returned words and blocks important? What should be &quot;best practice&quot;?  I worry that doing Unbind/deep before returning will create collateral damage to bindings not part of the function&#39;s mission.

In thinking about the main thrust of your question I realised I&#39;m not entirely clear on what a frame actually is.  I have read [Relative Binding and FRAME! Internals](https://rebol.metaeducation.com/t/relative-binding-and-frame-internals/1344).  Is there some documentation that defines FRAME! at a Rebol language level?</description>
    
    <lastBuildDate>Wed, 18 Jun 2025 15:51:07 +0000</lastBuildDate>
    <category>Questions</category>
    <atom:link href="https://rebol.metaeducation.com/t/what-is-a-frame/2492.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What is a FRAME! ?</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Brett" data-post="1" data-topic="2492">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/brett/48/177_2.png" class="avatar"> Brett:</div>
<blockquote>
<p>Is there some documentation that defines FRAME! at a Rebol language level?</p>
</blockquote>
</aside>
<p>A FRAME! is much like an OBJECT!, but it is the context a function gets when it starts running.  So if you ask for BINDING OF an argument/refinement/local of a function, this is the answer you will get.  (R3-Alpha would just give you TRUE to say that such words in a function were bound, it had no object-like thing to interact with.)</p>
<p>You can also make a frame for an ACTION! explicitly.  If you fill in all its required arguments, or refinements with TRUE and then the refinement arguments, you can DO it:</p>
<pre><code>&gt;&gt; f: make frame! append/

&gt;&gt; f.series: copy [a b c]

&gt;&gt; f.value: 'd

&gt;&gt; eval f
== [a b c d]

&gt;&gt; eval f
== [a b c d d]
</code></pre>
<p>One important issue about FRAME! is that the "object-ness" of it appears <em>on-demand</em>.  This is to keep from creating an entity the GC has to worry about on each and every function call.  But once user code asks for a frame or gets its hands on it, then the GC has a little stub it has to track.</p>
          <p><a href="https://rebol.metaeducation.com/t/what-is-a-frame/2492/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-is-a-frame/2492/2</link>
        <pubDate>Tue, 01 Aug 2017 04:25:51 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2492-2</guid>
        <source url="https://rebol.metaeducation.com/t/what-is-a-frame/2492.rss">What is a FRAME! ?</source>
      </item>
      <item>
        <title>What is a FRAME! ?</title>
        <dc:creator><![CDATA[Brett]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="1" data-topic="234">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"><a href="https://rebol.metaeducation.com/t/what-happens-to-function-args-when-the-call-ends/234/1">What happens to function args when the call ends?</a></div>
<blockquote>
<p>Which makes one wonder, when returning a BLOCK! as data, should you always UNBIND/DEEP it before returning...to scrub off any inadvertent pointers into your local state it carries?  Should there be a RETURN/BOUND to avoid the scrub?</p>
</blockquote>
</aside>
<p>Oddly enough, I don't recall knowing that UNBIND even existed - so maybe my life can be easier.  It's an interesting question. When are the bindings of returned words and blocks important? What should be "best practice"?  I worry that doing Unbind/deep before returning will create collateral damage to bindings not part of the function's mission.</p>
<p>In thinking about the main thrust of your question I realised I'm not entirely clear on what a frame actually is.  I have read <a href="https://rebol.metaeducation.com/t/relative-binding-and-frame-internals/1344">Relative Binding and FRAME! Internals</a>.  Is there some documentation that defines FRAME! at a Rebol language level?</p>
          <p><a href="https://rebol.metaeducation.com/t/what-is-a-frame/2492/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/what-is-a-frame/2492/1</link>
        <pubDate>Tue, 01 Aug 2017 03:20:26 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2492-1</guid>
        <source url="https://rebol.metaeducation.com/t/what-is-a-frame/2492.rss">What is a FRAME! ?</source>
      </item>
  </channel>
</rss>
