<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Differences Between ^x: and [^x]:</title>
    <link>https://rebol.metaeducation.com/t/differences-between-x-and-x/2460</link>
    <description>[quote=&quot;bradrn, post:6, topic:2147&quot;]
It still doesn’t explain why you can’t add sigils to things like THE-WORD!, though. I still maintain that that capability would be useful to have, considering that the various sigils have more or less orthogonal semantics. It also doesn’t address my second bullet point (that Ren-C has this elaborate structure but doesn’t seem to get much use out of it).
[/quote]

If anything, I’m now leaning even more in the direction that combining sigils should be possible, because I can see obvious interpretations of those combinations. For instance, `^x:` could assign the meta of the following value to `x`. Or `@:x` could get the value of `:x`, then apply `@` to it. (Note that these should probably be unordered, as I mentioned earlier.) Of course, they’re useful in dialects too.</description>
    
    <lastBuildDate>Mon, 19 May 2025 10:32:45 +0000</lastBuildDate>
    <category>Semantics</category>
    <atom:link href="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Differences Between ^x: and [^x]:</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="hostilefork" data-post="2" data-topic="2460">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<aside class="quote no-group quote-modified" data-username="bradrn" data-post="8" data-topic="2147">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/bradrn/48/365_2.png" class="avatar"><a href="https://rebol.metaeducation.com/t/a-proliferation-of-word-s/2147/8">A proliferation of $#@^':~WORD~:s</a></div>
<blockquote>
<p>For instance, <code>^x:</code> could assign the meta of the following value to <code>x</code>.</p>
</blockquote>
</aside>
<p>Note that this is what <strong><code>[^x]:</code></strong> does, and I'm not particularly bothered by needing a block for the few times it comes up (if anything, it improves visibility).</p>
</blockquote>
</aside>
<p>So as things have moved along it's now actually possible to do this (though it's not an example of "multiple sigils"... <a href="https://rebol.metaeducation.com/t/introducingnew-chain-datatype/2226">the colons come from CHAIN!, which is a separate aggregate type now</a>.)</p>
<p><strong>And I've realized that the two are semantically different in the case where you have an unstable antiform on the right hand side.</strong></p>
<h2><a name="p-8314-x-will-store-the-meta-of-unstable-antiforms-1" class="anchor" href="https://rebol.metaeducation.com#p-8314-x-will-store-the-meta-of-unstable-antiforms-1"></a><strong><code>^x:</code></strong> will store the meta of unstable antiforms</h2>
<p>...though the assignment expression passes through the antiform as-is:</p>
<pre><code>&gt;&gt; ^x: pack [10 null 20]
== ~['10 ~null~ '20 ]~  ; antiform (pack)

&gt;&gt; x
== ~['10 ~null~ '20 ]~
</code></pre>
<p>It accepts everything on the right-hand side--including ERROR!, GHOST!, VOID.</p>
<p>But in the case of ERROR!, it still passes it through as an unstable antiform as the result of the assignment.  So by default you'll still get escalation to a panic if you don't put some kind of TRY or otherwise on the expression (though the assignment will have already been performed by that point.)</p>
<h2><a name="p-8314-x-will-unpack-a-pack-metaing-the-first-item-2" class="anchor" href="https://rebol.metaeducation.com#p-8314-x-will-unpack-a-pack-metaing-the-first-item-2"></a><strong><code>[^x]:</code></strong> will unpack a pack, meta'ing the first item</h2>
<p>...and ignoring any further ones:</p>
<pre><code>&gt;&gt; [^x]: pack [10 null 20]
== ~['10 ~null~ '20 ]~  ; antiform (pack)

&gt;&gt; x
== '10
</code></pre>
<p>It won't accept ERROR! or GHOST! on the right (or VOID...which is just an empty PACK!...if there's more than 0 items in the SET-BLOCK)</p>
<h2><a name="p-8314-if-the-right-hand-side-is-not-a-pack-then-they-will-be-identical-3" class="anchor" href="https://rebol.metaeducation.com#p-8314-if-the-right-hand-side-is-not-a-pack-then-they-will-be-identical-3"></a>If the right hand side is <em>not</em> a pack, then they will be identical.</h2>
<pre><code>&gt;&gt; ^x: [a b c]
== [a b c]

&gt;&gt; x
== '[a b c]

&gt;&gt; [^x]: [a b c]
== [a b c]

&gt;&gt; x
== '[a b c]
</code></pre>
<h2><a name="p-8314-should-require-a-pack-on-the-right-4" class="anchor" href="https://rebol.metaeducation.com#p-8314-should-require-a-pack-on-the-right-4"></a>Should ([...]: ...) require a PACK! on the right?</h2>
<p><img src="https://rebol.metaeducation.com/images/emoji/twitter/thinking.png?v=14" title=":thinking:" class="emoji only-emoji" alt=":thinking:" loading="lazy" width="20" height="20"></p>
<p>Allowing non-packs allows you to basically say "decay the right" implicitly...</p>
<p>So <strong><code>[^x]:</code></strong> acts as a shorthand for:</p>
<pre><code>^x: decay (...)
</code></pre>
<p>That's a useful thing to have a shorthand for.</p>
<p>I'd have to think of a pretty big bad consequence to disallow it.</p>
          <p><a href="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460/4">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/differences-between-x-and-x/2460/4</link>
        <pubDate>Mon, 19 May 2025 09:54:11 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2460-4</guid>
        <source url="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460.rss">Differences Between ^x: and [^x]:</source>
      </item>
      <item>
        <title>Differences Between ^x: and [^x]:</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="hostilefork" data-post="2" data-topic="2460">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/hostilefork/48/421_2.png" class="avatar"> hostilefork:</div>
<blockquote>
<p>Note that this is what <strong><code>[^x]:</code></strong> does, and I'm not particularly bothered by needing a block for the few times it comes up (if anything, it improves visibility).</p>
</blockquote>
</aside>
<p>Oh, this is quite interesting. I never realised this was possible! It does seem fair to say that this improves visibility, which is a nice bonus.</p>
          <p><a href="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460/3">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/differences-between-x-and-x/2460/3</link>
        <pubDate>Fri, 16 Feb 2024 05:18:08 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2460-3</guid>
        <source url="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460.rss">Differences Between ^x: and [^x]:</source>
      </item>
      <item>
        <title>Differences Between ^x: and [^x]:</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="1" data-topic="2460">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/bradrn/48/365_2.png" class="avatar"> bradrn:</div>
<blockquote>
<p>For instance, <code>^x:</code> could assign the meta of the following value to <code>x</code>.</p>
</blockquote>
</aside>
<p>Note that this is what <strong><code>[^x]:</code></strong> does, and I'm not particularly bothered by needing a block for the few times it comes up (if anything, it improves visibility).</p>
<p>Using blocks and groups as structuring parts helps you distinguish between e.g. that and <strong><code>^[x:]</code></strong>.  So to me, they are the mechanism for accomplishing composition.</p>
<p>Introducing ANY-FENCE! to bring in another array type will give another tool for structuring.  And as I mentioned, it will be a good composable choice for picking the main return result out of a multi-return.</p>
<pre><code>[x {y} ^z]: ...

[x y {^z}]: ...
</code></pre>
<p>That's something we have a vocabulary and API and mechanism for, and I think the ergonomics in sum surpass what a system based on multi-sigils would be like.</p>
          <p><a href="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460/2">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/differences-between-x-and-x/2460/2</link>
        <pubDate>Fri, 16 Feb 2024 04:57:38 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2460-2</guid>
        <source url="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460.rss">Differences Between ^x: and [^x]:</source>
      </item>
      <item>
        <title>Differences Between ^x: and [^x]:</title>
        <dc:creator><![CDATA[bradrn]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="bradrn" data-post="6" data-topic="2147">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://rebol.metaeducation.com/user_avatar/rebol.metaeducation.com/bradrn/48/365_2.png" class="avatar"><a href="https://rebol.metaeducation.com/t/a-proliferation-of-word-s/2147/6">A proliferation of $#@^':~WORD~:s</a></div>
<blockquote>
<p>It still doesn’t explain why you can’t add sigils to things like THE-WORD!, though. I still maintain that that capability would be useful to have, considering that the various sigils have more or less orthogonal semantics. It also doesn’t address my second bullet point (that Ren-C has this elaborate structure but doesn’t seem to get much use out of it).</p>
</blockquote>
</aside>
<p>If anything, I’m now leaning even more in the direction that combining sigils should be possible, because I can see obvious interpretations of those combinations. For instance, <code>^x:</code> could assign the meta of the following value to <code>x</code>. Or <code>@:x</code> could get the value of <code>:x</code>, then apply <code>@</code> to it. (Note that these should probably be unordered, as I mentioned earlier.) Of course, they’re useful in dialects too.</p>
          <p><a href="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/differences-between-x-and-x/2460/1</link>
        <pubDate>Thu, 15 Feb 2024 10:45:14 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2460-1</guid>
        <source url="https://rebol.metaeducation.com/t/differences-between-x-and-x/2460.rss">Differences Between ^x: and [^x]:</source>
      </item>
  </channel>
</rss>
