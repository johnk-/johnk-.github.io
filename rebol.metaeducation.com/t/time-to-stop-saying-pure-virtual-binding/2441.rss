<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Time to Stop Saying &quot;Pure/Virtual&quot; Binding</title>
    <link>https://rebol.metaeducation.com/t/time-to-stop-saying-pure-virtual-binding/2441</link>
    <description>Rebol&#39;s historical model of binding was to mutably paste hidden &quot;binding&quot; pointers onto WORD!s in code, that influenced the lookup... which isn&#39;t always bad.  But what I think was definitely bad was that *this was the only binding there was.*

There were big weaknesses.  Such as that if WORD!s in a method in a function body had to resolve to a specific variable, you&#39;d have to copy and re-paste bindings on bodies of methods to create a new instance of that object.  **That was crazy.**  :zany_face: 

Yet sometimes WORD!s had to carry knowledge of where they looked up to.  The trick became knowing when this binding should be carried by the word, and when it shouldn&#39;t.

* As these ideas evolved, I used **&quot;virtual binding&quot;** as a sort of blanket term to mean that the WORD!s themselves may be unbound, but it was things like BLOCK! instances that carried contextual/enviroment information... which the unbound words could be looked up in at arbitrary points, taking into account any new definitions vs. being stucked in a fixed concept from a prior &quot;wave&quot; of mutable binding.

* When this idea escalated to its logical conclusion, I called it **&quot;pure virtual binding&quot;**, to imply that when you start running module or script code from the top *none* of the code carries a binding.  When everything comes after the fact, you get things like:

      &gt;&gt; doubler: func [x] [
             let code: copy [add x]
             append code to word! &quot;x&quot;
             print [&quot;Doubled:&quot; eval code]
         ]

      &gt;&gt; doubler 10
      Doubled: 20  ; wait... that *worked*?! ðŸ˜®

## These Terms Have Become Meaningless

**&quot;virtual binding&quot;** and **&quot;pure virtual binding&quot;** are nothing but historical terms.

There is only **&quot;binding&quot;**, and everything else just a transient term used while trying to pin down how it should act.

I particularly want to reclaim the term **PURE** because we need to start marking functions that don&#39;t have side-effects.  *(Oddly enough, [&quot;Rye&quot; has beaten me to the punch with actually deploying this](https://rebol.metaeducation.com/t/rye-language/1768/6?u=hostilefork), though I&#39;ve advocated for it a long time before that...just never got around to it, for whatever reason.)*

But reclaiming the term **VIRTUAL** is probably useful as well.  

## Please Excuse WikiMan As He Edits Your Posts

As I Wiki-Edit this forum to try and make it non-useless for modern audiences, expect to see the terms **&quot;virtual binding&quot;** and **&quot;pure virtual binding&quot;** [be relegated to the Archive](https://rebol.metaeducation.com/c/archive/61)

In spirit we *could* still say that binding does have &quot;virtual&quot; and &quot;non-virtual&quot; components, but there&#39;s no need to waste the term &quot;virtual&quot;.  We just say that a BLOCK! might be bound, while the WORD!s in it could be bound--or unbound.  If the words in it are BOUND! and you project the binding, then you&#39;re acting &quot;virtually&quot;.

Anyway, I am going to stop using the terms...and so should you *(though really, has anyone else besides me ever uttered the phrases: &quot;virtual binding&quot; or &quot;pure virtual binding&quot;?  probably not :face_with_diagonal_mouth:)*</description>
    
    <lastBuildDate>Sun, 11 May 2025 02:59:26 +0000</lastBuildDate>
    <category>Naming</category>
    <atom:link href="https://rebol.metaeducation.com/t/time-to-stop-saying-pure-virtual-binding/2441.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Time to Stop Saying &quot;Pure/Virtual&quot; Binding</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Rebol's historical model of binding was to mutably paste hidden "binding" pointers onto WORD!s in code, that influenced the lookup... which isn't always bad.  But what I think was definitely bad was that <em>this was the only binding there was.</em></p>
<p>There were big weaknesses.  Such as that if WORD!s in a method in a function body had to resolve to a specific variable, you'd have to copy and re-paste bindings on bodies of methods to create a new instance of that object.  <strong>That was crazy.</strong>  <img src="https://rebol.metaeducation.com/images/emoji/twitter/zany_face.png?v=14" title=":zany_face:" class="emoji" alt=":zany_face:" loading="lazy" width="20" height="20"></p>
<p>Yet sometimes WORD!s had to carry knowledge of where they looked up to.  The trick became knowing when this binding should be carried by the word, and when it shouldn't.</p>
<ul>
<li>
<p>As these ideas evolved, I used <strong>"virtual binding"</strong> as a sort of blanket term to mean that the WORD!s themselves may be unbound, but it was things like BLOCK! instances that carried contextual/enviroment information... which the unbound words could be looked up in at arbitrary points, taking into account any new definitions vs. being stucked in a fixed concept from a prior "wave" of mutable binding.</p>
</li>
<li>
<p>When this idea escalated to its logical conclusion, I called it <strong>"pure virtual binding"</strong>, to imply that when you start running module or script code from the top <em>none</em> of the code carries a binding.  When everything comes after the fact, you get things like:</p>
<pre><code>&gt;&gt; doubler: func [x] [
       let code: copy [add x]
       append code to word! "x"
       print ["Doubled:" eval code]
   ]

&gt;&gt; doubler 10
Doubled: 20  ; wait... that *worked*?! ðŸ˜®
</code></pre>
</li>
</ul>
<h2><a name="p-8243-these-terms-have-become-meaningless-1" class="anchor" href="https://rebol.metaeducation.com#p-8243-these-terms-have-become-meaningless-1"></a>These Terms Have Become Meaningless</h2>
<p><strong>"virtual binding"</strong> and <strong>"pure virtual binding"</strong> are nothing but historical terms.</p>
<p>There is only <strong>"binding"</strong>, and everything else just a transient term used while trying to pin down how it should act.</p>
<p>I particularly want to reclaim the term <strong>PURE</strong> because we need to start marking functions that don't have side-effects.  <em>(Oddly enough, <a href="https://rebol.metaeducation.com/t/rye-language/1768/6">"Rye" has beaten me to the punch with actually deploying this</a>, though I've advocated for it a long time before that...just never got around to it, for whatever reason.)</em></p>
<p>But reclaiming the term <strong>VIRTUAL</strong> is probably useful as well.</p>
<h2><a name="p-8243-please-excuse-wikiman-as-he-edits-your-posts-2" class="anchor" href="https://rebol.metaeducation.com#p-8243-please-excuse-wikiman-as-he-edits-your-posts-2"></a>Please Excuse WikiMan As He Edits Your Posts</h2>
<p>As I Wiki-Edit this forum to try and make it non-useless for modern audiences, expect to see the terms <strong>"virtual binding"</strong> and <strong>"pure virtual binding"</strong> <a href="https://rebol.metaeducation.com/c/archive/61">be relegated to the Archive</a></p>
<p>In spirit we <em>could</em> still say that binding does have "virtual" and "non-virtual" components, but there's no need to waste the term "virtual".  We just say that a BLOCK! might be bound, while the WORD!s in it could be bound--or unbound.  If the words in it are BOUND! and you project the binding, then you're acting "virtually".</p>
<p>Anyway, I am going to stop using the terms...and so should you <em>(though really, has anyone else besides me ever uttered the phrases: "virtual binding" or "pure virtual binding"?  probably not <img src="https://rebol.metaeducation.com/images/emoji/twitter/face_with_diagonal_mouth.png?v=14" title=":face_with_diagonal_mouth:" class="emoji" alt=":face_with_diagonal_mouth:" loading="lazy" width="20" height="20">)</em></p>
          <p><a href="https://rebol.metaeducation.com/t/time-to-stop-saying-pure-virtual-binding/2441/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/time-to-stop-saying-pure-virtual-binding/2441/1</link>
        <pubDate>Sun, 11 May 2025 02:53:29 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2441-1</guid>
        <source url="https://rebol.metaeducation.com/t/time-to-stop-saying-pure-virtual-binding/2441.rss">Time to Stop Saying &quot;Pure/Virtual&quot; Binding</source>
      </item>
  </channel>
</rss>
