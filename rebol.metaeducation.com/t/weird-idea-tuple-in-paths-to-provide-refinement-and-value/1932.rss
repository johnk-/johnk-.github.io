<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Weird Idea: TUPLE in Paths to Provide Refinement *AND* Value</title>
    <link>https://rebol.metaeducation.com/t/weird-idea-tuple-in-paths-to-provide-refinement-and-value/1932</link>
    <description>&gt; **UPDATE:** [Looks like I rediscovered this idea 4 years later](https://rebol.metaeducation.com/t/big-alien-proposal-word-runs-functions/1905/15?u=hostilefork).  Guess I forgot about it!  :older_man: 

---

People very frequently request seeing the connection between the refinement and its value more obviously, because the refinement argument is kind of far away:

    &gt;&gt; data: &#39;(a b c)
    &gt;&gt; append/dup data &lt;foo&gt; (1 + 2)
    == (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)

So they make broken suggestions like **`append /dup 2 data &lt;foo&gt;`**, which we constantly have to debunk.

Nowadays [we have &quot;APPLY II&quot;](https://rebol.metaeducation.com/t/apply-ii-the-revenge/1834) which helps in more verbose cases:

    &gt;&gt; data: &#39;(a b c)
    &gt;&gt; apply :append [data &lt;foo&gt; /dup (1 + 2)]
    == (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)

## But I had an odd idea...

What If You Could Directly Pass A Refinement Arg Via TUPLE?

    &gt;&gt; data: &#39;(a b c)
    &gt;&gt; append/dup.3 data &lt;foo&gt;
    == (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)

    &gt;&gt; data: &#39;(a b c)
    &gt;&gt; append/dup.(1 + 2) data &lt;foo&gt;
    == (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)

It wouldn&#39;t be great for everything, but it could be convenient.  Not really hard to write, but is it compelling?  Are there other potentially interesting meanings for this notation?</description>
    
    <lastBuildDate>Fri, 30 Aug 2024 04:25:39 +0000</lastBuildDate>
    <category>Functions</category>
    <atom:link href="https://rebol.metaeducation.com/t/weird-idea-tuple-in-paths-to-provide-refinement-and-value/1932.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Weird Idea: TUPLE in Paths to Provide Refinement *AND* Value</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p><strong>UPDATE:</strong> <a href="https://rebol.metaeducation.com/t/big-alien-proposal-word-runs-functions/1905/15">Looks like I rediscovered this idea 4 years later</a>.  Guess I forgot about it!  <img src="https://rebol.metaeducation.com/images/emoji/twitter/older_man.png?v=14" title=":older_man:" class="emoji" alt=":older_man:" loading="lazy" width="20" height="20"></p>
</blockquote>
<hr>
<p>People very frequently request seeing the connection between the refinement and its value more obviously, because the refinement argument is kind of far away:</p>
<pre><code>&gt;&gt; data: '(a b c)
&gt;&gt; append/dup data &lt;foo&gt; (1 + 2)
== (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)
</code></pre>
<p>So they make broken suggestions like <strong><code>append /dup 2 data &lt;foo&gt;</code></strong>, which we constantly have to debunk.</p>
<p>Nowadays <a href="https://rebol.metaeducation.com/t/apply-ii-the-revenge/1834">we have "APPLY II"</a> which helps in more verbose cases:</p>
<pre><code>&gt;&gt; data: '(a b c)
&gt;&gt; apply :append [data &lt;foo&gt; /dup (1 + 2)]
== (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)
</code></pre>
<h2><a name="p-3995-but-i-had-an-odd-idea-1" class="anchor" href="https://rebol.metaeducation.com#p-3995-but-i-had-an-odd-idea-1"></a>But I had an odd idea...</h2>
<p>What If You Could Directly Pass A Refinement Arg Via TUPLE?</p>
<pre><code>&gt;&gt; data: '(a b c)
&gt;&gt; append/dup.3 data &lt;foo&gt;
== (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)

&gt;&gt; data: '(a b c)
&gt;&gt; append/dup.(1 + 2) data &lt;foo&gt;
== (a b c &lt;foo&gt; &lt;foo&gt; &lt;foo&gt;)
</code></pre>
<p>It wouldn't be great for everything, but it could be convenient.  Not really hard to write, but is it compelling?  Are there other potentially interesting meanings for this notation?</p>
          <p><a href="https://rebol.metaeducation.com/t/weird-idea-tuple-in-paths-to-provide-refinement-and-value/1932/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/weird-idea-tuple-in-paths-to-provide-refinement-and-value/1932/1</link>
        <pubDate>Mon, 21 Sep 2020 05:38:46 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1932-1</guid>
        <source url="https://rebol.metaeducation.com/t/weird-idea-tuple-in-paths-to-provide-refinement-and-value/1932.rss">Weird Idea: TUPLE in Paths to Provide Refinement *AND* Value</source>
      </item>
  </channel>
</rss>
