<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The Rebellion Against Style Guides</title>
    <link>https://rebol.metaeducation.com/t/the-rebellion-against-style-guides/1819</link>
    <description>While driving from Huntsville to Florida, I listened to a talk given by a guy who oversees the general style guide for all of Google&#39;s multi-millions of lines of C++.

He spoke very positively about a formatting tool called `clang-format`, and how if he had his way at Google...there would be no arguing over code formatting.  He felt the robot did a better job on average than even the best developers...and being willing to delegate formatting to the tool gave them time to work on more important things.

**My well-known opinion for code like C++ or Rust or Java is that it is best represented as a graph data structure that captures the relationships and identities.**  How you render that is up to the program you use to view and edit the projection of that essential code.  It doesn&#39;t matter if code is in braces or has a box drawn around it.  You could make expressions feed into an actual logical circuit AND gate instead of using `&amp;&amp;` or the word `and` or what-have-you.

**But Rebol is different (and almost absurdist) in the software world.**  If anything, it has an *anti*-style guide, in [The Deep Lake / (Swamp)](http://www.rebol.com/article/0103.html), where Carl says:

&gt; Suppose I write:
&gt;
&gt;     if time &gt; 10:00 [
&gt;         wakeup user
&gt;     ]
&gt;
&gt; which some users may choose to rewrite it this way:
&gt;
&gt;     if time &gt; 10:00
&gt;     [
&gt;         wakeup user
&gt;         alert &quot;Time to work&quot;
&gt;      ]
&gt;
&gt; But, what if the &quot;then block&quot; is a variable itself, defined as:
&gt;
&gt;      action: [
&gt;          wakeup user
&gt;          alert &quot;Time to work&quot;
&gt;       ]
&gt;
&gt;  Would you write this:
&gt;
&gt;       if time &gt; 10:00
&gt;           action
&gt;
&gt;    or this:
&gt;
&gt;        if time &gt; 10:00 action

The conclusion is:

&gt; ...**how you write code is ultimately your choice alone**. REBOL, as a context dependent language, is perhaps the most freeform computing language ever invented.

I&#39;m bringing this up because I&#39;m mothballing an old Trello and looking for any links or information worth preserving.  It had a card requesting a style guide, pointing out a limited bit that had been written in the Rebol2 manual:

[http://www.rebol.com/docs/core23/rebolcore-5.html#section-5](http://www.rebol.com/docs/core23/rebolcore-5.html#section-5)

I&#39;m really only interested in the bits that reduce complexity (like just-say-no-to-CRLF files, or tabs, etc.)  As for the code itself, this is kind of an ASCII-art medium.

So a good &quot;style guide&quot; for Rebol would be one that showed examples of how to take advantage of the degrees of freedom to be bent to your purposes.  I think a good one was the **[tuple and path test dialect](https://rebol.metaeducation.com/t/testing-generic-tuple-and-path-structuring/1353)**.  But there are certainly more!</description>
    
    <lastBuildDate>Sat, 14 May 2022 05:39:18 +0000</lastBuildDate>
    <category>Philosophy</category>
    <atom:link href="https://rebol.metaeducation.com/t/the-rebellion-against-style-guides/1819.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The Rebellion Against Style Guides</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>While driving from Huntsville to Florida, I listened to a talk given by a guy who oversees the general style guide for all of Google's multi-millions of lines of C++.</p>
<p>He spoke very positively about a formatting tool called <code>clang-format</code>, and how if he had his way at Google...there would be no arguing over code formatting.  He felt the robot did a better job on average than even the best developers...and being willing to delegate formatting to the tool gave them time to work on more important things.</p>
<p><strong>My well-known opinion for code like C++ or Rust or Java is that it is best represented as a graph data structure that captures the relationships and identities.</strong>  How you render that is up to the program you use to view and edit the projection of that essential code.  It doesn't matter if code is in braces or has a box drawn around it.  You could make expressions feed into an actual logical circuit AND gate instead of using <code>&amp;&amp;</code> or the word <code>and</code> or what-have-you.</p>
<p><strong>But Rebol is different (and almost absurdist) in the software world.</strong>  If anything, it has an <em>anti</em>-style guide, in <a href="http://www.rebol.com/article/0103.html">The Deep Lake / (Swamp)</a>, where Carl says:</p>
<blockquote>
<p>Suppose I write:</p>
<pre><code>if time &gt; 10:00 [
    wakeup user
]
</code></pre>
<p>which some users may choose to rewrite it this way:</p>
<pre><code>if time &gt; 10:00
[
    wakeup user
    alert "Time to work"
 ]
</code></pre>
<p>But, what if the "then block" is a variable itself, defined as:</p>
<pre><code> action: [
     wakeup user
     alert "Time to work"
  ]
</code></pre>
<p>Would you write this:</p>
<pre><code>  if time &gt; 10:00
      action
</code></pre>
<p>or this:</p>
<pre><code>   if time &gt; 10:00 action
</code></pre>
</blockquote>
<p>The conclusion is:</p>
<blockquote>
<p>...<strong>how you write code is ultimately your choice alone</strong>. REBOL, as a context dependent language, is perhaps the most freeform computing language ever invented.</p>
</blockquote>
<p>I'm bringing this up because I'm mothballing an old Trello and looking for any links or information worth preserving.  It had a card requesting a style guide, pointing out a limited bit that had been written in the Rebol2 manual:</p>
<p><a href="http://www.rebol.com/docs/core23/rebolcore-5.html#section-5">http://www.rebol.com/docs/core23/rebolcore-5.html#section-5</a></p>
<p>I'm really only interested in the bits that reduce complexity (like just-say-no-to-CRLF files, or tabs, etc.)  As for the code itself, this is kind of an ASCII-art medium.</p>
<p>So a good "style guide" for Rebol would be one that showed examples of how to take advantage of the degrees of freedom to be bent to your purposes.  I think a good one was the <strong><a href="https://rebol.metaeducation.com/t/testing-generic-tuple-and-path-structuring/1353">tuple and path test dialect</a></strong>.  But there are certainly more!</p>
          <p><a href="https://rebol.metaeducation.com/t/the-rebellion-against-style-guides/1819/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/the-rebellion-against-style-guides/1819/1</link>
        <pubDate>Sat, 14 May 2022 05:39:18 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-1819-1</guid>
        <source url="https://rebol.metaeducation.com/t/the-rebellion-against-style-guides/1819.rss">The Rebellion Against Style Guides</source>
      </item>
  </channel>
</rss>
