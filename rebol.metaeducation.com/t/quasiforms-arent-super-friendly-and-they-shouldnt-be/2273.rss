<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Quasiforms Aren&#39;t Super Friendly (and they shouldn&#39;t be)</title>
    <link>https://rebol.metaeducation.com/t/quasiforms-arent-super-friendly-and-they-shouldnt-be/2273</link>
    <description>The original intent of quasiforms was that they were a bit &quot;bad&quot;.

Things like **`~null~`** were actually originally called BAD-WORD!s.  (I kind of miss that slightly amusing term.)

So indeed, an aspect of the term &quot;quasi&quot; was that the squiggles would make you *uncomfortable*... perhaps a bit *queasy*... :nauseated_face: ...and they would call attention to themselves.

## They Are Disruptive By Design

Consider code like this:

    &gt;&gt; stuff: [[a b] ~[c d]~ (e f)]

    &gt;&gt; list: second stuff

    &gt;&gt; for-each item list [probe item]
    ** Script Error: for-each expects
         [~void~ blank! any-series? any-context? map! any-sequence? action?]
       for its data argument

It&#39;s not super typical to want to enumerate quasiform lists.  But it does come up...and when it does, it may *seem* kind of annoying that you have to say things like **`for-each item unquasi list`**

## It&#39;s For The Best

We *want* code that isn&#39;t specifically written to expect quasiforms to trip up on them, **because the odds are pretty good that they are proxies for antiform intent**.

And I&#39;d really discourage usage of quasiforms anywhere that they&#39;re not being used for something intended to be fundamentally disruptive.  As I wrote in describing **[Synthetic Asymmetric Delimiters](https://rebol.metaeducation.com/t/synthetic-asymmetric-delimiters/1893)**, you have other choices.

Don&#39;t pick quasiforms in your dialect just because &quot;they look cool&quot;.  Pick them *because you want to create a speedbump.*

So the number of things you can do with quasiforms will remain intentionally limited.  Expect errors when you pass them to anything that&#39;s not strictly structural (like APPEND, FIND, etc.)

    &gt;&gt; to word! &#39;null
    == null

    &gt;&gt; to word! &#39;~null~
    ** Script Error: expected &amp;[word] not &amp;[quasiform]

    &gt;&gt; unquasi &#39;~null~
    == null</description>
    
    <lastBuildDate>Mon, 23 Sep 2024 13:13:18 +0000</lastBuildDate>
    <category>Philosophy</category>
    <atom:link href="https://rebol.metaeducation.com/t/quasiforms-arent-super-friendly-and-they-shouldnt-be/2273.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Quasiforms Aren&#39;t Super Friendly (and they shouldn&#39;t be)</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>The original intent of quasiforms was that they were a bit "bad".</p>
<p>Things like <strong><code>~null~</code></strong> were actually originally called BAD-WORD!s.  (I kind of miss that slightly amusing term.)</p>
<p>So indeed, an aspect of the term "quasi" was that the squiggles would make you <em>uncomfortable</em>... perhaps a bit <em>queasy</em>... <img src="https://rebol.metaeducation.com/images/emoji/twitter/nauseated_face.png?v=14" title=":nauseated_face:" class="emoji" alt=":nauseated_face:" loading="lazy" width="20" height="20"> ...and they would call attention to themselves.</p>
<h2><a name="p-7656-they-are-disruptive-by-design-1" class="anchor" href="https://rebol.metaeducation.com#p-7656-they-are-disruptive-by-design-1"></a>They Are Disruptive By Design</h2>
<p>Consider code like this:</p>
<pre><code>&gt;&gt; stuff: [[a b] ~[c d]~ (e f)]

&gt;&gt; list: second stuff

&gt;&gt; for-each item list [probe item]
** Script Error: for-each expects
     [~void~ blank! any-series? any-context? map! any-sequence? action?]
   for its data argument
</code></pre>
<p>It's not super typical to want to enumerate quasiform lists.  But it does come up...and when it does, it may <em>seem</em> kind of annoying that you have to say things like <strong><code>for-each item unquasi list</code></strong></p>
<h2><a name="p-7656-its-for-the-best-2" class="anchor" href="https://rebol.metaeducation.com#p-7656-its-for-the-best-2"></a>It's For The Best</h2>
<p>We <em>want</em> code that isn't specifically written to expect quasiforms to trip up on them, <strong>because the odds are pretty good that they are proxies for antiform intent</strong>.</p>
<p>And I'd really discourage usage of quasiforms anywhere that they're not being used for something intended to be fundamentally disruptive.  As I wrote in describing <strong><a href="https://rebol.metaeducation.com/t/synthetic-asymmetric-delimiters/1893">Synthetic Asymmetric Delimiters</a></strong>, you have other choices.</p>
<p>Don't pick quasiforms in your dialect just because "they look cool".  Pick them <em>because you want to create a speedbump.</em></p>
<p>So the number of things you can do with quasiforms will remain intentionally limited.  Expect errors when you pass them to anything that's not strictly structural (like APPEND, FIND, etc.)</p>
<pre><code>&gt;&gt; to word! 'null
== null

&gt;&gt; to word! '~null~
** Script Error: expected &amp;[word] not &amp;[quasiform]

&gt;&gt; unquasi '~null~
== null
</code></pre>
          <p><a href="https://rebol.metaeducation.com/t/quasiforms-arent-super-friendly-and-they-shouldnt-be/2273/1">Read full topic</a></p>
        ]]></description>
        <link>https://rebol.metaeducation.com/t/quasiforms-arent-super-friendly-and-they-shouldnt-be/2273/1</link>
        <pubDate>Fri, 13 Sep 2024 02:47:50 +0000</pubDate>
        <guid isPermaLink="false">rebol.metaeducation.com-post-2273-1</guid>
        <source url="https://rebol.metaeducation.com/t/quasiforms-arent-super-friendly-and-they-shouldnt-be/2273.rss">Quasiforms Aren&#39;t Super Friendly (and they shouldn&#39;t be)</source>
      </item>
  </channel>
</rss>
