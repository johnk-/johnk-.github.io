<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Sending Values into a Black Hole</title>
    <link>https://forum.rebol.info/t/sending-values-into-a-black-hole/1347</link>
    <description>Multiple return values have an interesting angle to them: **the more values you request... the functionality you ask for might wind up being different**.

Consider TRANSCODE.  If you don&#39;t use multi-returns...or just ask for one return...you get the whole thing transcoded as a block:

    &gt;&gt; transcode &quot;&lt;abc&gt; &lt;def&gt;&quot;  ; plain behavior
    == [&lt;abc&gt; &lt;def&gt;]

    &gt;&gt; block: transcode &quot;&lt;abc&gt; &lt;def&gt;&quot;  ; set-word! (follows usual rules)
    == [&lt;abc&gt; &lt;def&gt;]

    &gt;&gt; [block]: transcode &quot;&lt;abc&gt; &lt;def&gt;&quot;  ; same behavior as `block:`, enforced
    == [&lt;abc&gt; &lt;def&gt;]

But if you supply it with a parameter in the second slot, it assumes you want /NEXT and will set that argument to the next position. 

    &gt;&gt; [value pos]: transcode &quot;&lt;abc&gt; &lt;def&gt;&quot;
    == &lt;abc&gt;

    &gt;&gt; pos
    == &quot; &lt;def&gt;&quot;

    &gt;&gt; value
    == &lt;abc&gt;

BLANK! gives you the ability to opt out of slots in the multiple return values that you don&#39;t want.  But opting out doesn&#39;t just keep you from having to name a variable, it also *un-requests the behavior*...

    &gt;&gt; [value _]: transcode &quot;&lt;abc&gt; &lt;def&gt;&quot;
    == [&lt;abc&gt; &lt;def&gt;]  ; not a /NEXT, it was &quot;revoked&quot;

What if you want to request the behavior, but not have to bother with creating a variable to store it in?  Well now that we are thinking **#** will be a shorthand for the immutable and not-appendable-to-strings &quot;codepoint 0&quot;, it&#39;s a perfect choice:

    &gt;&gt; [value #]: transcode &quot;&lt;abc&gt; &lt;def&gt;&quot;
    == &lt;abc&gt;  ; only the /NEXT item

The value was requested but disappeared...into a black hole.  I&#39;m referring to **#** as &quot;a blackhole&quot; pending a better name, and you can typecheck for it with BLACKHOLE!</description>
    
    <lastBuildDate>Tue, 30 Aug 2022 20:13:22 +0000</lastBuildDate>
    <category>Feature Discover</category>
    <atom:link href="https://forum.rebol.info/t/sending-values-into-a-black-hole/1347.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Sending Values into a Black Hole</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>A post was merged into an existing topic: <a href="/t/should-append-null-fail-append-blank-add-nothing-unless-only/635/14">Should append null fail, append BLANK! add nothing unless /ONLY?</a></p>
          <p><a href="https://forum.rebol.info/t/sending-values-into-a-black-hole/1347/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/sending-values-into-a-black-hole/1347/3</link>
        <pubDate>Tue, 30 Aug 2022 20:19:18 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1347-3</guid>
        <source url="https://forum.rebol.info/t/sending-values-into-a-black-hole/1347.rss">Sending Values into a Black Hole</source>
      </item>
      <item>
        <title>Sending Values into a Black Hole</title>
        <dc:creator><![CDATA[hostilefork]]></dc:creator>
        <description><![CDATA[
            <p>Multiple return values have an interesting angle to them: <strong>the more values you request... the functionality you ask for might wind up being different</strong>.</p>
<p>Consider TRANSCODE.  If you don't use multi-returns...or just ask for one return...you get the whole thing transcoded as a block:</p>
<pre><code>&gt;&gt; transcode "&lt;abc&gt; &lt;def&gt;"  ; plain behavior
== [&lt;abc&gt; &lt;def&gt;]

&gt;&gt; block: transcode "&lt;abc&gt; &lt;def&gt;"  ; set-word! (follows usual rules)
== [&lt;abc&gt; &lt;def&gt;]

&gt;&gt; [block]: transcode "&lt;abc&gt; &lt;def&gt;"  ; same behavior as `block:`, enforced
== [&lt;abc&gt; &lt;def&gt;]
</code></pre>
<p>But if you supply it with a parameter in the second slot, it assumes you want /NEXT and will set that argument to the next position.</p>
<pre><code>&gt;&gt; [value pos]: transcode "&lt;abc&gt; &lt;def&gt;"
== &lt;abc&gt;

&gt;&gt; pos
== " &lt;def&gt;"

&gt;&gt; value
== &lt;abc&gt;
</code></pre>
<p>BLANK! gives you the ability to opt out of slots in the multiple return values that you don't want.  But opting out doesn't just keep you from having to name a variable, it also <em>un-requests the behavior</em>...</p>
<pre><code>&gt;&gt; [value _]: transcode "&lt;abc&gt; &lt;def&gt;"
== [&lt;abc&gt; &lt;def&gt;]  ; not a /NEXT, it was "revoked"
</code></pre>
<p>What if you want to request the behavior, but not have to bother with creating a variable to store it in?  Well now that we are thinking <strong>#</strong> will be a shorthand for the immutable and not-appendable-to-strings "codepoint 0", it's a perfect choice:</p>
<pre><code>&gt;&gt; [value #]: transcode "&lt;abc&gt; &lt;def&gt;"
== &lt;abc&gt;  ; only the /NEXT item
</code></pre>
<p>The value was requested but disappeared...into a black hole.  I'm referring to <strong>#</strong> as "a blackhole" pending a better name, and you can typecheck for it with BLACKHOLE!</p>
          <p><a href="https://forum.rebol.info/t/sending-values-into-a-black-hole/1347/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.rebol.info/t/sending-values-into-a-black-hole/1347/1</link>
        <pubDate>Sat, 26 Sep 2020 20:19:21 +0000</pubDate>
        <guid isPermaLink="false">forum.rebol.info-post-1347-1</guid>
        <source url="https://forum.rebol.info/t/sending-values-into-a-black-hole/1347.rss">Sending Values into a Black Hole</source>
      </item>
  </channel>
</rss>
